"use strict"; (self.webpackChunkpresentation = self.webpackChunkpresentation || []).push([[179], { 502: () => { function te(e) { return "function" == typeof e } function ho(e) { const n = e(r => { Error.call(r), r.stack = (new Error).stack }); return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n } const Fi = ho(e => function (n) { e(this), this.message = n ? `${n.length} errors occurred during unsubscription:\n${n.map((r, o) => `${o + 1}) ${r.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = n }); function po(e, t) { if (e) { const n = e.indexOf(t); 0 <= n && e.splice(n, 1) } } class mt { constructor(t) { this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null } unsubscribe() { let t; if (!this.closed) { this.closed = !0; const { _parentage: n } = this; if (n) if (this._parentage = null, Array.isArray(n)) for (const i of n) i.remove(this); else n.remove(this); const { initialTeardown: r } = this; if (te(r)) try { r() } catch (i) { t = i instanceof Fi ? i.errors : [i] } const { _finalizers: o } = this; if (o) { this._finalizers = null; for (const i of o) try { mf(i) } catch (s) { t = t ?? [], s instanceof Fi ? t = [...t, ...s.errors] : t.push(s) } } if (t) throw new Fi(t) } } add(t) { var n; if (t && t !== this) if (this.closed) mf(t); else { if (t instanceof mt) { if (t.closed || t._hasParent(this)) return; t._addParent(this) } (this._finalizers = null !== (n = this._finalizers) && void 0 !== n ? n : []).push(t) } } _hasParent(t) { const { _parentage: n } = this; return n === t || Array.isArray(n) && n.includes(t) } _addParent(t) { const { _parentage: n } = this; this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [n, t] : t } _removeParent(t) { const { _parentage: n } = this; n === t ? this._parentage = null : Array.isArray(n) && po(n, t) } remove(t) { const { _finalizers: n } = this; n && po(n, t), t instanceof mt && t._removeParent(this) } } mt.EMPTY = (() => { const e = new mt; return e.closed = !0, e })(); const pf = mt.EMPTY; function gf(e) { return e instanceof mt || e && "closed" in e && te(e.remove) && te(e.add) && te(e.unsubscribe) } function mf(e) { te(e) ? e() : e.unsubscribe() } const zn = { onUnhandledError: null, onStoppedNotification: null, Promise: void 0, useDeprecatedSynchronousErrorHandling: !1, useDeprecatedNextContext: !1 }, ki = { setTimeout(e, t, ...n) { const { delegate: r } = ki; return r?.setTimeout ? r.setTimeout(e, t, ...n) : setTimeout(e, t, ...n) }, clearTimeout(e) { const { delegate: t } = ki; return (t?.clearTimeout || clearTimeout)(e) }, delegate: void 0 }; function yf(e) { ki.setTimeout(() => { const { onUnhandledError: t } = zn; if (!t) throw e; t(e) }) } function vf() { } const ow = Xa("C", void 0, void 0); function Xa(e, t, n) { return { kind: e, value: t, error: n } } let Gn = null; function Li(e) { if (zn.useDeprecatedSynchronousErrorHandling) { const t = !Gn; if (t && (Gn = { errorThrown: !1, error: null }), e(), t) { const { errorThrown: n, error: r } = Gn; if (Gn = null, n) throw r } } else e() } class Ja extends mt { constructor(t) { super(), this.isStopped = !1, t ? (this.destination = t, gf(t) && t.add(this)) : this.destination = dw } static create(t, n, r) { return new go(t, n, r) } next(t) { this.isStopped ? tl(function sw(e) { return Xa("N", e, void 0) }(t), this) : this._next(t) } error(t) { this.isStopped ? tl(function iw(e) { return Xa("E", void 0, e) }(t), this) : (this.isStopped = !0, this._error(t)) } complete() { this.isStopped ? tl(ow, this) : (this.isStopped = !0, this._complete()) } unsubscribe() { this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null) } _next(t) { this.destination.next(t) } _error(t) { try { this.destination.error(t) } finally { this.unsubscribe() } } _complete() { try { this.destination.complete() } finally { this.unsubscribe() } } } const lw = Function.prototype.bind; function el(e, t) { return lw.call(e, t) } class uw { constructor(t) { this.partialObserver = t } next(t) { const { partialObserver: n } = this; if (n.next) try { n.next(t) } catch (r) { Vi(r) } } error(t) { const { partialObserver: n } = this; if (n.error) try { n.error(t) } catch (r) { Vi(r) } else Vi(t) } complete() { const { partialObserver: t } = this; if (t.complete) try { t.complete() } catch (n) { Vi(n) } } } class go extends Ja { constructor(t, n, r) { let o; if (super(), te(t) || !t) o = { next: t ?? void 0, error: n ?? void 0, complete: r ?? void 0 }; else { let i; this && zn.useDeprecatedNextContext ? (i = Object.create(t), i.unsubscribe = () => this.unsubscribe(), o = { next: t.next && el(t.next, i), error: t.error && el(t.error, i), complete: t.complete && el(t.complete, i) }) : o = t } this.destination = new uw(o) } } function Vi(e) { zn.useDeprecatedSynchronousErrorHandling ? function aw(e) { zn.useDeprecatedSynchronousErrorHandling && Gn && (Gn.errorThrown = !0, Gn.error = e) }(e) : yf(e) } function tl(e, t) { const { onStoppedNotification: n } = zn; n && ki.setTimeout(() => n(e, t)) } const dw = { closed: !0, next: vf, error: function cw(e) { throw e }, complete: vf }, nl = "function" == typeof Symbol && Symbol.observable || "@@observable"; function Wn(e) { return e } function _f(e) { return 0 === e.length ? Wn : 1 === e.length ? e[0] : function (n) { return e.reduce((r, o) => o(r), n) } } let pe = (() => { class e { constructor(n) { n && (this._subscribe = n) } lift(n) { const r = new e; return r.source = this, r.operator = n, r } subscribe(n, r, o) { const i = function pw(e) { return e && e instanceof Ja || function hw(e) { return e && te(e.next) && te(e.error) && te(e.complete) }(e) && gf(e) }(n) ? n : new go(n, r, o); return Li(() => { const { operator: s, source: a } = this; i.add(s ? s.call(i, a) : a ? this._subscribe(i) : this._trySubscribe(i)) }), i } _trySubscribe(n) { try { return this._subscribe(n) } catch (r) { n.error(r) } } forEach(n, r) { return new (r = Df(r))((o, i) => { const s = new go({ next: a => { try { n(a) } catch (l) { i(l), s.unsubscribe() } }, error: i, complete: o }); this.subscribe(s) }) } _subscribe(n) { var r; return null === (r = this.source) || void 0 === r ? void 0 : r.subscribe(n) } [nl]() { return this } pipe(...n) { return _f(n)(this) } toPromise(n) { return new (n = Df(n))((r, o) => { let i; this.subscribe(s => i = s, s => o(s), () => r(i)) }) } } return e.create = t => new e(t), e })(); function Df(e) { var t; return null !== (t = e ?? zn.Promise) && void 0 !== t ? t : Promise } const gw = ho(e => function () { e(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed" }); let an = (() => { class e extends pe { constructor() { super(), this.closed = !1, this.currentObservers = null, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null } lift(n) { const r = new Cf(this, this); return r.operator = n, r } _throwIfClosed() { if (this.closed) throw new gw } next(n) { Li(() => { if (this._throwIfClosed(), !this.isStopped) { this.currentObservers || (this.currentObservers = Array.from(this.observers)); for (const r of this.currentObservers) r.next(n) } }) } error(n) { Li(() => { if (this._throwIfClosed(), !this.isStopped) { this.hasError = this.isStopped = !0, this.thrownError = n; const { observers: r } = this; for (; r.length;)r.shift().error(n) } }) } complete() { Li(() => { if (this._throwIfClosed(), !this.isStopped) { this.isStopped = !0; const { observers: n } = this; for (; n.length;)n.shift().complete() } }) } unsubscribe() { this.isStopped = this.closed = !0, this.observers = this.currentObservers = null } get observed() { var n; return (null === (n = this.observers) || void 0 === n ? void 0 : n.length) > 0 } _trySubscribe(n) { return this._throwIfClosed(), super._trySubscribe(n) } _subscribe(n) { return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n) } _innerSubscribe(n) { const { hasError: r, isStopped: o, observers: i } = this; return r || o ? pf : (this.currentObservers = null, i.push(n), new mt(() => { this.currentObservers = null, po(i, n) })) } _checkFinalizedStatuses(n) { const { hasError: r, thrownError: o, isStopped: i } = this; r ? n.error(o) : i && n.complete() } asObservable() { const n = new pe; return n.source = this, n } } return e.create = (t, n) => new Cf(t, n), e })(); class Cf extends an { constructor(t, n) { super(), this.destination = t, this.source = n } next(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.next) || void 0 === r || r.call(n, t) } error(t) { var n, r; null === (r = null === (n = this.destination) || void 0 === n ? void 0 : n.error) || void 0 === r || r.call(n, t) } complete() { var t, n; null === (n = null === (t = this.destination) || void 0 === t ? void 0 : t.complete) || void 0 === n || n.call(t) } _subscribe(t) { var n, r; return null !== (r = null === (n = this.source) || void 0 === n ? void 0 : n.subscribe(t)) && void 0 !== r ? r : pf } } function wf(e) { return te(e?.lift) } function xe(e) { return t => { if (wf(t)) return t.lift(function (n) { try { return e(n, this) } catch (r) { this.error(r) } }); throw new TypeError("Unable to lift unknown Observable type") } } function Se(e, t, n, r, o) { return new mw(e, t, n, r, o) } class mw extends Ja { constructor(t, n, r, o, i, s) { super(t), this.onFinalize = i, this.shouldUnsubscribe = s, this._next = n ? function (a) { try { n(a) } catch (l) { t.error(l) } } : super._next, this._error = o ? function (a) { try { o(a) } catch (l) { t.error(l) } finally { this.unsubscribe() } } : super._error, this._complete = r ? function () { try { r() } catch (a) { t.error(a) } finally { this.unsubscribe() } } : super._complete } unsubscribe() { var t; if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) { const { closed: n } = this; super.unsubscribe(), !n && (null === (t = this.onFinalize) || void 0 === t || t.call(this)) } } } function H(e, t) { return xe((n, r) => { let o = 0; n.subscribe(Se(r, i => { r.next(e.call(t, i, o++)) })) }) } function An(e) { return this instanceof An ? (this.v = e, this) : new An(e) } function Sf(e) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var n, t = e[Symbol.asyncIterator]; return t ? t.call(e) : (e = function sl(e) { var t = "function" == typeof Symbol && Symbol.iterator, n = t && e[t], r = 0; if (n) return n.call(e); if (e && "number" == typeof e.length) return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.") }(e), n = {}, r("next"), r("throw"), r("return"), n[Symbol.asyncIterator] = function () { return this }, n); function r(i) { n[i] = e[i] && function (s) { return new Promise(function (a, l) { !function o(i, s, a, l) { Promise.resolve(l).then(function (u) { i({ value: u, done: a }) }, s) }(a, l, (s = e[i](s)).done, s.value) }) } } } const If = e => e && "number" == typeof e.length && "function" != typeof e; function Af(e) { return te(e?.then) } function Tf(e) { return te(e[nl]) } function xf(e) { return Symbol.asyncIterator && te(e?.[Symbol.asyncIterator]) } function Rf(e) { return new TypeError(`You provided ${null !== e && "object" == typeof e ? "an invalid object" : `'${e}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`) } const Of = function Fw() { return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator" }(); function Pf(e) { return te(e?.[Of]) } function Nf(e) { return function Mf(e, t, n) { if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined."); var o, r = n.apply(e, t || []), i = []; return o = {}, s("next"), s("throw"), s("return"), o[Symbol.asyncIterator] = function () { return this }, o; function s(f) { r[f] && (o[f] = function (h) { return new Promise(function (p, g) { i.push([f, h, p, g]) > 1 || a(f, h) }) }) } function a(f, h) { try { !function l(f) { f.value instanceof An ? Promise.resolve(f.value.v).then(u, c) : d(i[0][2], f) }(r[f](h)) } catch (p) { d(i[0][3], p) } } function u(f) { a("next", f) } function c(f) { a("throw", f) } function d(f, h) { f(h), i.shift(), i.length && a(i[0][0], i[0][1]) } }(this, arguments, function* () { const n = e.getReader(); try { for (; ;) { const { value: r, done: o } = yield An(n.read()); if (o) return yield An(void 0); yield yield An(r) } } finally { n.releaseLock() } }) } function Ff(e) { return te(e?.getReader) } function yt(e) { if (e instanceof pe) return e; if (null != e) { if (Tf(e)) return function kw(e) { return new pe(t => { const n = e[nl](); if (te(n.subscribe)) return n.subscribe(t); throw new TypeError("Provided object does not correctly implement Symbol.observable") }) }(e); if (If(e)) return function Lw(e) { return new pe(t => { for (let n = 0; n < e.length && !t.closed; n++)t.next(e[n]); t.complete() }) }(e); if (Af(e)) return function Vw(e) { return new pe(t => { e.then(n => { t.closed || (t.next(n), t.complete()) }, n => t.error(n)).then(null, yf) }) }(e); if (xf(e)) return kf(e); if (Pf(e)) return function jw(e) { return new pe(t => { for (const n of e) if (t.next(n), t.closed) return; t.complete() }) }(e); if (Ff(e)) return function Bw(e) { return kf(Nf(e)) }(e) } throw Rf(e) } function kf(e) { return new pe(t => { (function Hw(e, t) { var n, r, o, i; return function Ef(e, t, n, r) { return new (n || (n = Promise))(function (i, s) { function a(c) { try { u(r.next(c)) } catch (d) { s(d) } } function l(c) { try { u(r.throw(c)) } catch (d) { s(d) } } function u(c) { c.done ? i(c.value) : function o(i) { return i instanceof n ? i : new n(function (s) { s(i) }) }(c.value).then(a, l) } u((r = r.apply(e, t || [])).next()) }) }(this, void 0, void 0, function* () { try { for (n = Sf(e); !(r = yield n.next()).done;)if (t.next(r.value), t.closed) return } catch (s) { o = { error: s } } finally { try { r && !r.done && (i = n.return) && (yield i.call(n)) } finally { if (o) throw o.error } } t.complete() }) })(e, t).catch(n => t.error(n)) }) } function ln(e, t, n, r = 0, o = !1) { const i = t.schedule(function () { n(), o ? e.add(this.schedule(null, r)) : this.unsubscribe() }, r); if (e.add(i), !o) return i } function Re(e, t, n = 1 / 0) { return te(t) ? Re((r, o) => H((i, s) => t(r, i, o, s))(yt(e(r, o))), n) : ("number" == typeof t && (n = t), xe((r, o) => function $w(e, t, n, r, o, i, s, a) { const l = []; let u = 0, c = 0, d = !1; const f = () => { d && !l.length && !u && t.complete() }, h = g => u < r ? p(g) : l.push(g), p = g => { i && t.next(g), u++; let m = !1; yt(n(g, c++)).subscribe(Se(t, v => { o?.(v), i ? h(v) : t.next(v) }, () => { m = !0 }, void 0, () => { if (m) try { for (u--; l.length && u < r;) { const v = l.shift(); s ? ln(t, s, () => p(v)) : p(v) } f() } catch (v) { t.error(v) } })) }; return e.subscribe(Se(t, h, () => { d = !0, f() })), () => { a?.() } }(r, o, e, n))) } function cr(e = 1 / 0) { return Re(Wn, e) } const xt = new pe(e => e.complete()); function al(e) { return e[e.length - 1] } function Lf(e) { return te(al(e)) ? e.pop() : void 0 } function mo(e) { return function zw(e) { return e && te(e.schedule) }(al(e)) ? e.pop() : void 0 } function Vf(e, t = 0) { return xe((n, r) => { n.subscribe(Se(r, o => ln(r, e, () => r.next(o), t), () => ln(r, e, () => r.complete(), t), o => ln(r, e, () => r.error(o), t))) }) } function jf(e, t = 0) { return xe((n, r) => { r.add(e.schedule(() => n.subscribe(r), t)) }) } function Bf(e, t) { if (!e) throw new Error("Iterable cannot be null"); return new pe(n => { ln(n, t, () => { const r = e[Symbol.asyncIterator](); ln(n, t, () => { r.next().then(o => { o.done ? n.complete() : n.next(o.value) }) }, 0, !0) }) }) } function Ce(e, t) { return t ? function Qw(e, t) { if (null != e) { if (Tf(e)) return function Ww(e, t) { return yt(e).pipe(jf(t), Vf(t)) }(e, t); if (If(e)) return function Kw(e, t) { return new pe(n => { let r = 0; return t.schedule(function () { r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule()) }) }) }(e, t); if (Af(e)) return function qw(e, t) { return yt(e).pipe(jf(t), Vf(t)) }(e, t); if (xf(e)) return Bf(e, t); if (Pf(e)) return function Zw(e, t) { return new pe(n => { let r; return ln(n, t, () => { r = e[Of](), ln(n, t, () => { let o, i; try { ({ value: o, done: i } = r.next()) } catch (s) { return void n.error(s) } i ? n.complete() : n.next(o) }, 0, !0) }), () => te(r?.return) && r.return() }) }(e, t); if (Ff(e)) return function Yw(e, t) { return Bf(Nf(e), t) }(e, t) } throw Rf(e) }(e, t) : yt(e) } function ll(e, t, ...n) { if (!0 === t) return void e(); if (!1 === t) return; const r = new go({ next: () => { r.unsubscribe(), e() } }); return yt(t(...n)).subscribe(r) } function ee(e) { for (let t in e) if (e[t] === ee) return t; throw Error("Could not find renamed property on target object.") } function ul(e, t) { for (const n in t) t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]) } function ne(e) { if ("string" == typeof e) return e; if (Array.isArray(e)) return "[" + e.map(ne).join(", ") + "]"; if (null == e) return "" + e; if (e.overriddenName) return `${e.overriddenName}`; if (e.name) return `${e.name}`; const t = e.toString(); if (null == t) return "" + t; const n = t.indexOf("\n"); return -1 === n ? t : t.substring(0, n) } function cl(e, t) { return null == e || "" === e ? null === t ? "" : t : null == t || "" === t ? e : e + " " + t } const eE = ee({ __forward_ref__: ee }); function re(e) { return e.__forward_ref__ = re, e.toString = function () { return ne(this()) }, e } function R(e) { return dl(e) ? e() : e } function dl(e) { return "function" == typeof e && e.hasOwnProperty(eE) && e.__forward_ref__ === re } function fl(e) { return e && !!e.\u0275providers } const Hf = "https://g.co/ng/security#xss"; class C extends Error { constructor(t, n) { super(ji(t, n)), this.code = t } } function ji(e, t) { return `NG0${Math.abs(e)}${t ? ": " + t.trim() : ""}` } function F(e) { return "string" == typeof e ? e : null == e ? "" : String(e) } function Bi(e, t) { throw new C(-201, !1) } function vt(e, t) { null == e && function Y(e, t, n, r) { throw new Error(`ASSERTION ERROR: ${e}` + (null == r ? "" : ` [Expected=> ${n} ${r} ${t} <=Actual]`)) }(t, e, null, "!=") } function A(e) { return { token: e.token, providedIn: e.providedIn || null, factory: e.factory, value: void 0 } } function _t(e) { return { providers: e.providers || [], imports: e.imports || [] } } function Hi(e) { return $f(e, $i) || $f(e, zf) } function $f(e, t) { return e.hasOwnProperty(t) ? e[t] : null } function Uf(e) { return e && (e.hasOwnProperty(hl) || e.hasOwnProperty(lE)) ? e[hl] : null } const $i = ee({ \u0275prov: ee }), hl = ee({ \u0275inj: ee }), zf = ee({ ngInjectableDef: ee }), lE = ee({ ngInjectorDef: ee }); var O = (() => ((O = O || {})[O.Default = 0] = "Default", O[O.Host = 1] = "Host", O[O.Self = 2] = "Self", O[O.SkipSelf = 4] = "SkipSelf", O[O.Optional = 8] = "Optional", O))(); let pl; function Dt(e) { const t = pl; return pl = e, t } function Gf(e, t, n) { const r = Hi(e); return r && "root" == r.providedIn ? void 0 === r.value ? r.value = r.factory() : r.value : n & O.Optional ? null : void 0 !== t ? t : void Bi(ne(e)) } const se = (() => typeof globalThis < "u" && globalThis || typeof global < "u" && global || typeof window < "u" && window || typeof self < "u" && typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && self)(), yo = {}, gl = "__NG_DI_FLAG__", Ui = "ngTempTokenPath", cE = "ngTokenPath", dE = /\n/gm, fE = "\u0275", Wf = "__source"; let vo; function dr(e) { const t = vo; return vo = e, t } function hE(e, t = O.Default) { if (void 0 === vo) throw new C(-203, !1); return null === vo ? Gf(e, void 0, t) : vo.get(e, t & O.Optional ? null : void 0, t) } function S(e, t = O.Default) { return (function uE() { return pl }() || hE)(R(e), t) } function $(e, t = O.Default) { return S(e, zi(t)) } function zi(e) { return typeof e > "u" || "number" == typeof e ? e : 0 | (e.optional && 8) | (e.host && 1) | (e.self && 2) | (e.skipSelf && 4) } function ml(e) { const t = []; for (let n = 0; n < e.length; n++) { const r = R(e[n]); if (Array.isArray(r)) { if (0 === r.length) throw new C(900, !1); let o, i = O.Default; for (let s = 0; s < r.length; s++) { const a = r[s], l = pE(a); "number" == typeof l ? -1 === l ? o = a.token : i |= l : o = a } t.push(S(o, i)) } else t.push(S(r)) } return t } function _o(e, t) { return e[gl] = t, e.prototype[gl] = t, e } function pE(e) { return e[gl] } function un(e) { return { toString: e }.toString() } var zt = (() => ((zt = zt || {})[zt.OnPush = 0] = "OnPush", zt[zt.Default = 1] = "Default", zt))(), Gt = (() => { return (e = Gt || (Gt = {}))[e.Emulated = 0] = "Emulated", e[e.None = 2] = "None", e[e.ShadowDom = 3] = "ShadowDom", Gt; var e })(); const cn = {}, q = [], Gi = ee({ \u0275cmp: ee }), yl = ee({ \u0275dir: ee }), vl = ee({ \u0275pipe: ee }), Kf = ee({ \u0275mod: ee }), dn = ee({ \u0275fac: ee }), Do = ee({ __NG_ELEMENT_ID__: ee }); let yE = 0; function Co(e) { return un(() => { const t = Yf(e), n = { ...t, decls: e.decls, vars: e.vars, template: e.template, consts: e.consts || null, ngContentSelectors: e.ngContentSelectors, onPush: e.changeDetection === zt.OnPush, directiveDefs: null, pipeDefs: null, dependencies: t.standalone && e.dependencies || null, getStandaloneInjector: null, data: e.data || {}, encapsulation: e.encapsulation || Gt.Emulated, id: "c" + yE++, styles: e.styles || q, _: null, schemas: e.schemas || null, tView: null }; Qf(n); const r = e.dependencies; return n.directiveDefs = Wi(r, !1), n.pipeDefs = Wi(r, !0), n }) } function _E(e) { return Q(e) || ke(e) } function DE(e) { return null !== e } function Rt(e) { return un(() => ({ type: e.type, bootstrap: e.bootstrap || q, declarations: e.declarations || q, imports: e.imports || q, exports: e.exports || q, transitiveCompileScopes: null, schemas: e.schemas || null, id: e.id || null })) } function Zf(e, t) { if (null == e) return cn; const n = {}; for (const r in e) if (e.hasOwnProperty(r)) { let o = e[r], i = o; Array.isArray(o) && (i = o[1], o = o[0]), n[o] = r, t && (t[o] = i) } return n } function N(e) { return un(() => { const t = Yf(e); return Qf(t), t }) } function Q(e) { return e[Gi] || null } function ke(e) { return e[yl] || null } function et(e) { return e[vl] || null } function at(e, t) { const n = e[Kf] || null; if (!n && !0 === t) throw new Error(`Type ${ne(e)} does not have '\u0275mod' property.`); return n } function Yf(e) { const t = {}; return { type: e.type, providersResolver: null, factory: null, hostBindings: e.hostBindings || null, hostVars: e.hostVars || 0, hostAttrs: e.hostAttrs || null, contentQueries: e.contentQueries || null, declaredInputs: t, exportAs: e.exportAs || null, standalone: !0 === e.standalone, selectors: e.selectors || q, viewQuery: e.viewQuery || null, features: e.features || null, setInput: null, findHostDirectiveDefs: null, hostDirectives: null, inputs: Zf(e.inputs, t), outputs: Zf(e.outputs) } } function Qf(e) { e.features?.forEach(t => t(e)) } function Wi(e, t) { if (!e) return null; const n = t ? et : _E; return () => ("function" == typeof e ? e() : e).map(r => n(r)).filter(DE) } const fn = 0, b = 1, j = 2, de = 3, Ot = 4, qn = 5, Le = 6, hr = 7, ge = 8, qi = 9, Ki = 10, U = 11, _l = 12, wo = 13, Xf = 14, pr = 15, Ve = 16, Eo = 17, gr = 18, Wt = 19, bo = 20, Jf = 21, ae = 22, Dl = 1, eh = 2, Zi = 7, Yi = 8, mr = 9, ze = 10; function lt(e) { return Array.isArray(e) && "object" == typeof e[Dl] } function Pt(e) { return Array.isArray(e) && !0 === e[Dl] } function Cl(e) { return 0 != (4 & e.flags) } function Mo(e) { return e.componentOffset > -1 } function Qi(e) { return 1 == (1 & e.flags) } function Nt(e) { return !!e.template } function wE(e) { return 0 != (256 & e[j]) } function Kn(e, t) { return e.hasOwnProperty(dn) ? e[dn] : null } class ME { constructor(t, n, r) { this.previousValue = t, this.currentValue = n, this.firstChange = r } isFirstChange() { return this.firstChange } } function Ct() { return rh } function rh(e) { return e.type.prototype.ngOnChanges && (e.setInput = IE), SE } function SE() { const e = ih(this), t = e?.current; if (t) { const n = e.previous; if (n === cn) e.previous = t; else for (let r in t) n[r] = t[r]; e.current = null, this.ngOnChanges(t) } } function IE(e, t, n, r) { const o = this.declaredInputs[n], i = ih(e) || function AE(e, t) { return e[oh] = t }(e, { previous: cn, current: null }), s = i.current || (i.current = {}), a = i.previous, l = a[o]; s[o] = new ME(l && l.currentValue, t, a === cn), e[r] = t } Ct.ngInherit = !0; const oh = "__ngSimpleChanges__"; function ih(e) { return e[oh] || null } const wt = function (e, t, n) { }; function Oe(e) { for (; Array.isArray(e);)e = e[fn]; return e } function Xi(e, t) { return Oe(t[e]) } function ut(e, t) { return Oe(t[e.index]) } function lh(e, t) { return e.data[t] } function tt(e, t) { const n = t[e]; return lt(n) ? n : n[fn] } function Ji(e) { return 64 == (64 & e[j]) } function xn(e, t) { return null == t ? null : e[t] } function uh(e) { e[gr] = 0 } function El(e, t) { e[qn] += t; let n = e, r = e[de]; for (; null !== r && (1 === t && 1 === n[qn] || -1 === t && 0 === n[qn]);)r[qn] += t, n = r, r = r[de] } const k = { lFrame: _h(null), bindingsEnabled: !0 }; function dh() { return k.bindingsEnabled } function _() { return k.lFrame.lView } function W() { return k.lFrame.tView } function So(e) { return k.lFrame.contextLView = e, e[ge] } function Io(e) { return k.lFrame.contextLView = null, e } function Pe() { let e = fh(); for (; null !== e && 64 === e.type;)e = e.parent; return e } function fh() { return k.lFrame.currentTNode } function qt(e, t) { const n = k.lFrame; n.currentTNode = e, n.isParent = t } function bl() { return k.lFrame.isParent } function vr() { return k.lFrame.bindingIndex++ } function pn(e) { const t = k.lFrame, n = t.bindingIndex; return t.bindingIndex = t.bindingIndex + e, n } function HE(e, t) { const n = k.lFrame; n.bindingIndex = n.bindingRootIndex = e, Sl(t) } function Sl(e) { k.lFrame.currentDirectiveIndex = e } function Al(e) { k.lFrame.currentQueryIndex = e } function UE(e) { const t = e[b]; return 2 === t.type ? t.declTNode : 1 === t.type ? e[Le] : null } function yh(e, t, n) { if (n & O.SkipSelf) { let o = t, i = e; for (; !(o = o.parent, null !== o || n & O.Host || (o = UE(i), null === o || (i = i[pr], 10 & o.type)));); if (null === o) return !1; t = o, e = i } const r = k.lFrame = vh(); return r.currentTNode = t, r.lView = e, !0 } function Tl(e) { const t = vh(), n = e[b]; k.lFrame = t, t.currentTNode = n.firstChild, t.lView = e, t.tView = n, t.contextLView = e, t.bindingIndex = n.bindingStartIndex, t.inI18n = !1 } function vh() { const e = k.lFrame, t = null === e ? null : e.child; return null === t ? _h(e) : t } function _h(e) { const t = { currentTNode: null, isParent: !0, lView: null, tView: null, selectedIndex: -1, contextLView: null, elementDepthCount: 0, currentNamespace: null, currentDirectiveIndex: -1, bindingRootIndex: -1, bindingIndex: -1, currentQueryIndex: 0, parent: e, child: null, inI18n: !1 }; return null !== e && (e.child = t), t } function Dh() { const e = k.lFrame; return k.lFrame = e.parent, e.currentTNode = null, e.lView = null, e } const Ch = Dh; function xl() { const e = Dh(); e.isParent = !0, e.tView = null, e.selectedIndex = -1, e.contextLView = null, e.elementDepthCount = 0, e.currentDirectiveIndex = -1, e.currentNamespace = null, e.bindingRootIndex = -1, e.bindingIndex = -1, e.currentQueryIndex = 0 } function We() { return k.lFrame.selectedIndex } function Zn(e) { k.lFrame.selectedIndex = e } function ue() { const e = k.lFrame; return lh(e.tView, e.selectedIndex) } function es(e, t) { for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) { const i = e.data[n].type.prototype, { ngAfterContentInit: s, ngAfterContentChecked: a, ngAfterViewInit: l, ngAfterViewChecked: u, ngOnDestroy: c } = i; s && (e.contentHooks ?? (e.contentHooks = [])).push(-n, s), a && ((e.contentHooks ?? (e.contentHooks = [])).push(n, a), (e.contentCheckHooks ?? (e.contentCheckHooks = [])).push(n, a)), l && (e.viewHooks ?? (e.viewHooks = [])).push(-n, l), u && ((e.viewHooks ?? (e.viewHooks = [])).push(n, u), (e.viewCheckHooks ?? (e.viewCheckHooks = [])).push(n, u)), null != c && (e.destroyHooks ?? (e.destroyHooks = [])).push(n, c) } } function ts(e, t, n) { wh(e, t, 3, n) } function ns(e, t, n, r) { (3 & e[j]) === n && wh(e, t, n, r) } function Rl(e, t) { let n = e[j]; (3 & n) === t && (n &= 2047, n += 1, e[j] = n) } function wh(e, t, n, r) { const i = r ?? -1, s = t.length - 1; let a = 0; for (let l = void 0 !== r ? 65535 & e[gr] : 0; l < s; l++)if ("number" == typeof t[l + 1]) { if (a = t[l], null != r && a >= r) break } else t[l] < 0 && (e[gr] += 65536), (a < i || -1 == i) && (XE(e, n, t, l), e[gr] = (4294901760 & e[gr]) + l + 2), l++ } function XE(e, t, n, r) { const o = n[r] < 0, i = n[r + 1], a = e[o ? -n[r] : n[r]]; if (o) { if (e[j] >> 11 < e[gr] >> 16 && (3 & e[j]) === t) { e[j] += 2048, wt(4, a, i); try { i.call(a) } finally { wt(5, a, i) } } } else { wt(4, a, i); try { i.call(a) } finally { wt(5, a, i) } } } const _r = -1; class To { constructor(t, n, r) { this.factory = t, this.resolving = !1, this.canSeeViewProviders = n, this.injectImpl = r } } function Pl(e, t, n) { let r = 0; for (; r < n.length;) { const o = n[r]; if ("number" == typeof o) { if (0 !== o) break; r++; const i = n[r++], s = n[r++], a = n[r++]; e.setAttribute(t, s, a, i) } else { const i = o, s = n[++r]; bh(i) ? e.setProperty(t, i, s) : e.setAttribute(t, i, s), r++ } } return r } function Eh(e) { return 3 === e || 4 === e || 6 === e } function bh(e) { return 64 === e.charCodeAt(0) } function xo(e, t) { if (null !== t && 0 !== t.length) if (null === e || 0 === e.length) e = t.slice(); else { let n = -1; for (let r = 0; r < t.length; r++) { const o = t[r]; "number" == typeof o ? n = o : 0 === n || Mh(e, n, o, null, -1 === n || 2 === n ? t[++r] : null) } } return e } function Mh(e, t, n, r, o) { let i = 0, s = e.length; if (-1 === t) s = -1; else for (; i < e.length;) { const a = e[i++]; if ("number" == typeof a) { if (a === t) { s = -1; break } if (a > t) { s = i - 1; break } } } for (; i < e.length;) { const a = e[i]; if ("number" == typeof a) break; if (a === n) { if (null === r) return void (null !== o && (e[i + 1] = o)); if (r === e[i + 1]) return void (e[i + 2] = o) } i++, null !== r && i++, null !== o && i++ } -1 !== s && (e.splice(s, 0, t), i = s + 1), e.splice(i++, 0, n), null !== r && e.splice(i++, 0, r), null !== o && e.splice(i++, 0, o) } function Sh(e) { return e !== _r } function rs(e) { return 32767 & e } function os(e, t) { let n = function nb(e) { return e >> 16 }(e), r = t; for (; n > 0;)r = r[pr], n--; return r } let Nl = !0; function is(e) { const t = Nl; return Nl = e, t } const Ih = 255, Ah = 5; let rb = 0; const Kt = {}; function ss(e, t) { const n = Th(e, t); if (-1 !== n) return n; const r = t[b]; r.firstCreatePass && (e.injectorIndex = t.length, Fl(r.data, e), Fl(t, null), Fl(r.blueprint, null)); const o = kl(e, t), i = e.injectorIndex; if (Sh(o)) { const s = rs(o), a = os(o, t), l = a[b].data; for (let u = 0; u < 8; u++)t[i + u] = a[s + u] | l[s + u] } return t[i + 8] = o, i } function Fl(e, t) { e.push(0, 0, 0, 0, 0, 0, 0, 0, t) } function Th(e, t) { return -1 === e.injectorIndex || e.parent && e.parent.injectorIndex === e.injectorIndex || null === t[e.injectorIndex + 8] ? -1 : e.injectorIndex } function kl(e, t) { if (e.parent && -1 !== e.parent.injectorIndex) return e.parent.injectorIndex; let n = 0, r = null, o = t; for (; null !== o;) { if (r = kh(o), null === r) return _r; if (n++, o = o[pr], -1 !== r.injectorIndex) return r.injectorIndex | n << 16 } return _r } function Ll(e, t, n) { !function ob(e, t, n) { let r; "string" == typeof n ? r = n.charCodeAt(0) || 0 : n.hasOwnProperty(Do) && (r = n[Do]), null == r && (r = n[Do] = rb++); const o = r & Ih; t.data[e + (o >> Ah)] |= 1 << o }(e, t, n) } function xh(e, t, n) { if (n & O.Optional || void 0 !== e) return e; Bi() } function Rh(e, t, n, r) { if (n & O.Optional && void 0 === r && (r = null), !(n & (O.Self | O.Host))) { const o = e[qi], i = Dt(void 0); try { return o ? o.get(t, r, n & O.Optional) : Gf(t, r, n & O.Optional) } finally { Dt(i) } } return xh(r, 0, n) } function Oh(e, t, n, r = O.Default, o) { if (null !== e) { if (1024 & t[j]) { const s = function ub(e, t, n, r, o) { let i = e, s = t; for (; null !== i && null !== s && 1024 & s[j] && !(256 & s[j]);) { const a = Ph(i, s, n, r | O.Self, Kt); if (a !== Kt) return a; let l = i.parent; if (!l) { const u = s[Jf]; if (u) { const c = u.get(n, Kt, r); if (c !== Kt) return c } l = kh(s), s = s[pr] } i = l } return o }(e, t, n, r, Kt); if (s !== Kt) return s } const i = Ph(e, t, n, r, Kt); if (i !== Kt) return i } return Rh(t, n, r, o) } function Ph(e, t, n, r, o) { const i = function ab(e) { if ("string" == typeof e) return e.charCodeAt(0) || 0; const t = e.hasOwnProperty(Do) ? e[Do] : void 0; return "number" == typeof t ? t >= 0 ? t & Ih : lb : t }(n); if ("function" == typeof i) { if (!yh(t, e, r)) return r & O.Host ? xh(o, 0, r) : Rh(t, n, r, o); try { const s = i(r); if (null != s || r & O.Optional) return s; Bi() } finally { Ch() } } else if ("number" == typeof i) { let s = null, a = Th(e, t), l = _r, u = r & O.Host ? t[Ve][Le] : null; for ((-1 === a || r & O.SkipSelf) && (l = -1 === a ? kl(e, t) : t[a + 8], l !== _r && Fh(r, !1) ? (s = t[b], a = rs(l), t = os(l, t)) : a = -1); -1 !== a;) { const c = t[b]; if (Nh(i, a, c.data)) { const d = sb(a, t, n, s, r, u); if (d !== Kt) return d } l = t[a + 8], l !== _r && Fh(r, t[b].data[a + 8] === u) && Nh(i, a, t) ? (s = c, a = rs(l), t = os(l, t)) : a = -1 } } return o } function sb(e, t, n, r, o, i) { const s = t[b], a = s.data[e + 8], c = function as(e, t, n, r, o) { const i = e.providerIndexes, s = t.data, a = 1048575 & i, l = e.directiveStart, c = i >> 20, f = o ? a + c : e.directiveEnd; for (let h = r ? a : a + c; h < f; h++) { const p = s[h]; if (h < l && n === p || h >= l && p.type === n) return h } if (o) { const h = s[l]; if (h && Nt(h) && h.type === n) return l } return null }(a, s, n, null == r ? Mo(a) && Nl : r != s && 0 != (3 & a.type), o & O.Host && i === a); return null !== c ? Yn(t, s, c, a) : Kt } function Yn(e, t, n, r) { let o = e[n]; const i = t.data; if (function JE(e) { return e instanceof To }(o)) { const s = o; s.resolving && function tE(e, t) { const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : ""; throw new C(-200, `Circular dependency in DI detected for ${e}${n}`) }(function Z(e) { return "function" == typeof e ? e.name || e.toString() : "object" == typeof e && null != e && "function" == typeof e.type ? e.type.name || e.type.toString() : F(e) }(i[n])); const a = is(s.canSeeViewProviders); s.resolving = !0; const l = s.injectImpl ? Dt(s.injectImpl) : null; yh(e, r, O.Default); try { o = e[n] = s.factory(void 0, i, e, r), t.firstCreatePass && n >= r.directiveStart && function QE(e, t, n) { const { ngOnChanges: r, ngOnInit: o, ngDoCheck: i } = t.type.prototype; if (r) { const s = rh(t); (n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, s), (n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])).push(e, s) } o && (n.preOrderHooks ?? (n.preOrderHooks = [])).push(0 - e, o), i && ((n.preOrderHooks ?? (n.preOrderHooks = [])).push(e, i), (n.preOrderCheckHooks ?? (n.preOrderCheckHooks = [])).push(e, i)) }(n, i[n], t) } finally { null !== l && Dt(l), is(a), s.resolving = !1, Ch() } } return o } function Nh(e, t, n) { return !!(n[t + (e >> Ah)] & 1 << e) } function Fh(e, t) { return !(e & O.Self || e & O.Host && t) } class Dr { constructor(t, n) { this._tNode = t, this._lView = n } get(t, n, r) { return Oh(this._tNode, this._lView, t, zi(r), n) } } function lb() { return new Dr(Pe(), _()) } function Ne(e) { return un(() => { const t = e.prototype.constructor, n = t[dn] || Vl(t), r = Object.prototype; let o = Object.getPrototypeOf(e.prototype).constructor; for (; o && o !== r;) { const i = o[dn] || Vl(o); if (i && i !== n) return i; o = Object.getPrototypeOf(o) } return i => new i }) } function Vl(e) { return dl(e) ? () => { const t = Vl(R(e)); return t && t() } : Kn(e) } function kh(e) { const t = e[b], n = t.type; return 2 === n ? t.declTNode : 1 === n ? e[Le] : null } const wr = "__parameters__"; function br(e, t, n) { return un(() => { const r = function jl(e) { return function (...n) { if (e) { const r = e(...n); for (const o in r) this[o] = r[o] } } }(t); function o(...i) { if (this instanceof o) return r.apply(this, i), this; const s = new o(...i); return a.annotation = s, a; function a(l, u, c) { const d = l.hasOwnProperty(wr) ? l[wr] : Object.defineProperty(l, wr, { value: [] })[wr]; for (; d.length <= c;)d.push(null); return (d[c] = d[c] || []).push(s), l } } return n && (o.prototype = Object.create(n.prototype)), o.prototype.ngMetadataName = e, o.annotationCls = o, o }) } class M { constructor(t, n) { this._desc = t, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof n ? this.__NG_ELEMENT_ID__ = n : void 0 !== n && (this.\u0275prov = A({ token: this, providedIn: n.providedIn || "root", factory: n.factory })) } get multi() { return this } toString() { return `InjectionToken ${this._desc}` } } function Qn(e, t) { e.forEach(n => Array.isArray(n) ? Qn(n, t) : t(n)) } function Vh(e, t, n) { t >= e.length ? e.push(n) : e.splice(t, 0, n) } function us(e, t) { return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0] } function ct(e, t, n) { let r = Mr(e, t); return r >= 0 ? e[1 | r] = n : (r = ~r, function hb(e, t, n, r) { let o = e.length; if (o == t) e.push(n, r); else if (1 === o) e.push(r, e[0]), e[0] = n; else { for (o--, e.push(e[o - 1], e[o]); o > t;)e[o] = e[o - 2], o--; e[t] = n, e[t + 1] = r } }(e, r, t, n)), r } function Hl(e, t) { const n = Mr(e, t); if (n >= 0) return e[1 | n] } function Mr(e, t) { return function jh(e, t, n) { let r = 0, o = e.length >> n; for (; o !== r;) { const i = r + (o - r >> 1), s = e[i << n]; if (t === s) return i << n; s > t ? o = i : r = i + 1 } return ~(o << n) }(e, t, 1) } const No = _o(br("Optional"), 8), Fo = _o(br("SkipSelf"), 4); var nt = (() => ((nt = nt || {})[nt.Important = 1] = "Important", nt[nt.DashCase = 2] = "DashCase", nt))(); const ql = new Map; let Fb = 0; const Zl = "__ngContext__"; function je(e, t) { lt(t) ? (e[Zl] = t[bo], function Lb(e) { ql.set(e[bo], e) }(t)) : e[Zl] = t } let Yl; function Ql(e, t) { return Yl(e, t) } function jo(e) { const t = e[de]; return Pt(t) ? t[de] : t } function Xl(e) { return ip(e[wo]) } function Jl(e) { return ip(e[Ot]) } function ip(e) { for (; null !== e && !Pt(e);)e = e[Ot]; return e } function Ir(e, t, n, r, o) { if (null != r) { let i, s = !1; Pt(r) ? i = r : lt(r) && (s = !0, r = r[fn]); const a = Oe(r); 0 === e && null !== n ? null == o ? dp(t, n, a) : Xn(t, n, a, o || null, !0) : 1 === e && null !== n ? Xn(t, n, a, o || null, !0) : 2 === e ? function su(e, t, n) { const r = hs(e, t); r && function r0(e, t, n, r) { e.removeChild(t, n, r) }(e, r, t, n) }(t, a, s) : 3 === e && t.destroyNode(a), null != i && function a0(e, t, n, r, o) { const i = n[Zi]; i !== Oe(n) && Ir(t, e, r, i, o); for (let a = ze; a < n.length; a++) { const l = n[a]; Bo(l[b], l, e, t, r, i) } }(t, e, i, n, o) } } function tu(e, t, n) { return e.createElement(t, n) } function ap(e, t) { const n = e[mr], r = n.indexOf(t), o = t[de]; 512 & t[j] && (t[j] &= -513, El(o, -1)), n.splice(r, 1) } function nu(e, t) { if (e.length <= ze) return; const n = ze + t, r = e[n]; if (r) { const o = r[Eo]; null !== o && o !== e && ap(o, r), t > 0 && (e[n - 1][Ot] = r[Ot]); const i = us(e, ze + t); !function Zb(e, t) { Bo(e, t, t[U], 2, null, null), t[fn] = null, t[Le] = null }(r[b], r); const s = i[Wt]; null !== s && s.detachView(i[b]), r[de] = null, r[Ot] = null, r[j] &= -65 } return r } function lp(e, t) { if (!(128 & t[j])) { const n = t[U]; n.destroyNode && Bo(e, t, n, 3, null, null), function Xb(e) { let t = e[wo]; if (!t) return ru(e[b], e); for (; t;) { let n = null; if (lt(t)) n = t[wo]; else { const r = t[ze]; r && (n = r) } if (!n) { for (; t && !t[Ot] && t !== e;)lt(t) && ru(t[b], t), t = t[de]; null === t && (t = e), lt(t) && ru(t[b], t), n = t && t[Ot] } t = n } }(t) } } function ru(e, t) { if (!(128 & t[j])) { t[j] &= -65, t[j] |= 128, function n0(e, t) { let n; if (null != e && null != (n = e.destroyHooks)) for (let r = 0; r < n.length; r += 2) { const o = t[n[r]]; if (!(o instanceof To)) { const i = n[r + 1]; if (Array.isArray(i)) for (let s = 0; s < i.length; s += 2) { const a = o[i[s]], l = i[s + 1]; wt(4, a, l); try { l.call(a) } finally { wt(5, a, l) } } else { wt(4, o, i); try { i.call(o) } finally { wt(5, o, i) } } } } }(e, t), function t0(e, t) { const n = e.cleanup, r = t[hr]; let o = -1; if (null !== n) for (let i = 0; i < n.length - 1; i += 2)if ("string" == typeof n[i]) { const s = n[i + 3]; s >= 0 ? r[o = s]() : r[o = -s].unsubscribe(), i += 2 } else { const s = r[o = n[i + 1]]; n[i].call(s) } if (null !== r) { for (let i = o + 1; i < r.length; i++)(0, r[i])(); t[hr] = null } }(e, t), 1 === t[b].type && t[U].destroy(); const n = t[Eo]; if (null !== n && Pt(t[de])) { n !== t[de] && ap(n, t); const r = t[Wt]; null !== r && r.detachView(e) } !function Vb(e) { ql.delete(e[bo]) }(t) } } function up(e, t, n) { return function cp(e, t, n) { let r = t; for (; null !== r && 40 & r.type;)r = (t = r).parent; if (null === r) return n[fn]; { const { componentOffset: o } = r; if (o > -1) { const { encapsulation: i } = e.data[r.directiveStart + o]; if (i === Gt.None || i === Gt.Emulated) return null } return ut(r, n) } }(e, t.parent, n) } function Xn(e, t, n, r, o) { e.insertBefore(t, n, r, o) } function dp(e, t, n) { e.appendChild(t, n) } function fp(e, t, n, r, o) { null !== r ? Xn(e, t, n, r, o) : dp(e, t, n) } function hs(e, t) { return e.parentNode(t) } let ou, uu, ys, gp = function pp(e, t, n) { return 40 & e.type ? ut(e, n) : null }; function ps(e, t, n, r) { const o = up(e, r, t), i = t[U], a = function hp(e, t, n) { return gp(e, t, n) }(r.parent || t[Le], r, t); if (null != o) if (Array.isArray(n)) for (let l = 0; l < n.length; l++)fp(i, o, n[l], a, !1); else fp(i, o, n, a, !1); void 0 !== ou && ou(i, r, t, n, o) } function gs(e, t) { if (null !== t) { const n = t.type; if (3 & n) return ut(t, e); if (4 & n) return iu(-1, e[t.index]); if (8 & n) { const r = t.child; if (null !== r) return gs(e, r); { const o = e[t.index]; return Pt(o) ? iu(-1, o) : Oe(o) } } if (32 & n) return Ql(t, e)() || Oe(e[t.index]); { const r = yp(e, t); return null !== r ? Array.isArray(r) ? r[0] : gs(jo(e[Ve]), r) : gs(e, t.next) } } return null } function yp(e, t) { return null !== t ? e[Ve][Le].projection[t.projection] : null } function iu(e, t) { const n = ze + e + 1; if (n < t.length) { const r = t[n], o = r[b].firstChild; if (null !== o) return gs(r, o) } return t[Zi] } function au(e, t, n, r, o, i, s) { for (; null != n;) { const a = r[n.index], l = n.type; if (s && 0 === t && (a && je(Oe(a), r), n.flags |= 2), 32 != (32 & n.flags)) if (8 & l) au(e, t, n.child, r, o, i, !1), Ir(t, e, o, a, i); else if (32 & l) { const u = Ql(n, r); let c; for (; c = u();)Ir(t, e, o, c, i); Ir(t, e, o, a, i) } else 16 & l ? vp(e, t, r, n, o, i) : Ir(t, e, o, a, i); n = s ? n.projectionNext : n.next } } function Bo(e, t, n, r, o, i) { au(n, r, e.firstChild, t, o, i, !1) } function vp(e, t, n, r, o, i) { const s = n[Ve], l = s[Le].projection[r.projection]; if (Array.isArray(l)) for (let u = 0; u < l.length; u++)Ir(t, e, o, l[u], i); else au(e, t, l, s[de], o, i, !0) } function _p(e, t, n) { "" === n ? e.removeAttribute(t, "class") : e.setAttribute(t, "class", n) } function Dp(e, t, n) { const { mergedAttrs: r, classes: o, styles: i } = n; null !== r && Pl(e, t, r), null !== o && _p(e, t, o), null !== i && function u0(e, t, n) { e.setAttribute(t, "style", n) }(e, t, i) } function bp(e) { return function cu() { if (void 0 === ys && (ys = null, se.trustedTypes)) try { ys = se.trustedTypes.createPolicy("angular#unsafe-bypass", { createHTML: e => e, createScript: e => e, createScriptURL: e => e }) } catch { } return ys }()?.createScriptURL(e) || e } class Mp { constructor(t) { this.changingThisBreaksApplicationSecurity = t } toString() { return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Hf})` } } function Rn(e) { return e instanceof Mp ? e.changingThisBreaksApplicationSecurity : e } function Ho(e, t) { const n = function _0(e) { return e instanceof Mp && e.getTypeName() || null }(e); if (null != n && n !== t) { if ("ResourceURL" === n && "URL" === t) return !0; throw new Error(`Required a safe ${t}, got a ${n} (see ${Hf})`) } return n === t } const E0 = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i; var we = (() => ((we = we || {})[we.NONE = 0] = "NONE", we[we.HTML = 1] = "HTML", we[we.STYLE = 2] = "STYLE", we[we.SCRIPT = 3] = "SCRIPT", we[we.URL = 4] = "URL", we[we.RESOURCE_URL = 5] = "RESOURCE_URL", we))(); function gu(e) { const t = Uo(); return t ? t.sanitize(we.URL, e) || "" : Ho(e, "URL") ? Rn(e) : function du(e) { return (e = String(e)).match(E0) ? e : "unsafe:" + e }(F(e)) } function Op(e) { const t = Uo(); if (t) return bp(t.sanitize(we.RESOURCE_URL, e) || ""); if (Ho(e, "ResourceURL")) return bp(Rn(e)); throw new C(904, !1) } function Uo() { const e = _(); return e && e[_l] } const _s = new M("ENVIRONMENT_INITIALIZER"), Np = new M("INJECTOR", -1), Fp = new M("INJECTOR_DEF_TYPES"); class kp { get(t, n = yo) { if (n === yo) { const r = new Error(`NullInjectorError: No provider for ${ne(t)}!`); throw r.name = "NullInjectorError", r } return n } } function L0(...e) { return { \u0275providers: Lp(0, e), \u0275fromNgModule: !0 } } function Lp(e, ...t) { const n = [], r = new Set; let o; return Qn(t, i => { const s = i; mu(s, n, [], r) && (o || (o = []), o.push(s)) }), void 0 !== o && Vp(o, n), n } function Vp(e, t) { for (let n = 0; n < e.length; n++) { const { providers: o } = e[n]; yu(o, i => { t.push(i) }) } } function mu(e, t, n, r) { if (!(e = R(e))) return !1; let o = null, i = Uf(e); const s = !i && Q(e); if (i || s) { if (s && !s.standalone) return !1; o = e } else { const l = e.ngModule; if (i = Uf(l), !i) return !1; o = l } const a = r.has(o); if (s) { if (a) return !1; if (r.add(o), s.dependencies) { const l = "function" == typeof s.dependencies ? s.dependencies() : s.dependencies; for (const u of l) mu(u, t, n, r) } } else { if (!i) return !1; { if (null != i.imports && !a) { let u; r.add(o); try { Qn(i.imports, c => { mu(c, t, n, r) && (u || (u = []), u.push(c)) }) } finally { } void 0 !== u && Vp(u, t) } if (!a) { const u = Kn(o) || (() => new o); t.push({ provide: o, useFactory: u, deps: q }, { provide: Fp, useValue: o, multi: !0 }, { provide: _s, useValue: () => S(o), multi: !0 }) } const l = i.providers; null == l || a || yu(l, c => { t.push(c) }) } } return o !== e && void 0 !== e.providers } function yu(e, t) { for (let n of e) fl(n) && (n = n.\u0275providers), Array.isArray(n) ? yu(n, t) : t(n) } const V0 = ee({ provide: String, useValue: ee }); function vu(e) { return null !== e && "object" == typeof e && V0 in e } function Jn(e) { return "function" == typeof e } const _u = new M("Set Injector scope."), Ds = {}, B0 = {}; let Du; function Cs() { return void 0 === Du && (Du = new kp), Du } class Zt { } class Hp extends Zt { get destroyed() { return this._destroyed } constructor(t, n, r, o) { super(), this.parent = n, this.source = r, this.scopes = o, this.records = new Map, this._ngOnDestroyHooks = new Set, this._onDestroyHooks = [], this._destroyed = !1, wu(t, s => this.processProvider(s)), this.records.set(Np, Tr(void 0, this)), o.has("environment") && this.records.set(Zt, Tr(void 0, this)); const i = this.records.get(_u); null != i && "string" == typeof i.value && this.scopes.add(i.value), this.injectorDefTypes = new Set(this.get(Fp.multi, q, O.Self)) } destroy() { this.assertNotDestroyed(), this._destroyed = !0; try { for (const t of this._ngOnDestroyHooks) t.ngOnDestroy(); for (const t of this._onDestroyHooks) t() } finally { this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear(), this._onDestroyHooks.length = 0 } } onDestroy(t) { this._onDestroyHooks.push(t) } runInContext(t) { this.assertNotDestroyed(); const n = dr(this), r = Dt(void 0); try { return t() } finally { dr(n), Dt(r) } } get(t, n = yo, r = O.Default) { this.assertNotDestroyed(), r = zi(r); const o = dr(this), i = Dt(void 0); try { if (!(r & O.SkipSelf)) { let a = this.records.get(t); if (void 0 === a) { const l = function G0(e) { return "function" == typeof e || "object" == typeof e && e instanceof M }(t) && Hi(t); a = l && this.injectableDefInScope(l) ? Tr(Cu(t), Ds) : null, this.records.set(t, a) } if (null != a) return this.hydrate(t, a) } return (r & O.Self ? Cs() : this.parent).get(t, n = r & O.Optional && n === yo ? null : n) } catch (s) { if ("NullInjectorError" === s.name) { if ((s[Ui] = s[Ui] || []).unshift(ne(t)), o) throw s; return function gE(e, t, n, r) { const o = e[Ui]; throw t[Wf] && o.unshift(t[Wf]), e.message = function mE(e, t, n, r = null) { e = e && "\n" === e.charAt(0) && e.charAt(1) == fE ? e.slice(2) : e; let o = ne(t); if (Array.isArray(t)) o = t.map(ne).join(" -> "); else if ("object" == typeof t) { let i = []; for (let s in t) if (t.hasOwnProperty(s)) { let a = t[s]; i.push(s + ":" + ("string" == typeof a ? JSON.stringify(a) : ne(a))) } o = `{${i.join(", ")}}` } return `${n}${r ? "(" + r + ")" : ""}[${o}]: ${e.replace(dE, "\n  ")}` }("\n" + e.message, o, n, r), e[cE] = o, e[Ui] = null, e }(s, t, "R3InjectorError", this.source) } throw s } finally { Dt(i), dr(o) } } resolveInjectorInitializers() { const t = dr(this), n = Dt(void 0); try { const r = this.get(_s.multi, q, O.Self); for (const o of r) o() } finally { dr(t), Dt(n) } } toString() { const t = [], n = this.records; for (const r of n.keys()) t.push(ne(r)); return `R3Injector[${t.join(", ")}]` } assertNotDestroyed() { if (this._destroyed) throw new C(205, !1) } processProvider(t) { let n = Jn(t = R(t)) ? t : R(t && t.provide); const r = function $0(e) { return vu(e) ? Tr(void 0, e.useValue) : Tr($p(e), Ds) }(t); if (Jn(t) || !0 !== t.multi) this.records.get(n); else { let o = this.records.get(n); o || (o = Tr(void 0, Ds, !0), o.factory = () => ml(o.multi), this.records.set(n, o)), n = t, o.multi.push(t) } this.records.set(n, r) } hydrate(t, n) { return n.value === Ds && (n.value = B0, n.value = n.factory()), "object" == typeof n.value && n.value && function z0(e) { return null !== e && "object" == typeof e && "function" == typeof e.ngOnDestroy }(n.value) && this._ngOnDestroyHooks.add(n.value), n.value } injectableDefInScope(t) { if (!t.providedIn) return !1; const n = R(t.providedIn); return "string" == typeof n ? "any" === n || this.scopes.has(n) : this.injectorDefTypes.has(n) } } function Cu(e) { const t = Hi(e), n = null !== t ? t.factory : Kn(e); if (null !== n) return n; if (e instanceof M) throw new C(204, !1); if (e instanceof Function) return function H0(e) { const t = e.length; if (t > 0) throw function Po(e, t) { const n = []; for (let r = 0; r < e; r++)n.push(t); return n }(t, "?"), new C(204, !1); const n = function aE(e) { return e && (e[$i] || e[zf]) || null }(e); return null !== n ? () => n.factory(e) : () => new e }(e); throw new C(204, !1) } function $p(e, t, n) { let r; if (Jn(e)) { const o = R(e); return Kn(o) || Cu(o) } if (vu(e)) r = () => R(e.useValue); else if (function Bp(e) { return !(!e || !e.useFactory) }(e)) r = () => e.useFactory(...ml(e.deps || [])); else if (function jp(e) { return !(!e || !e.useExisting) }(e)) r = () => S(R(e.useExisting)); else { const o = R(e && (e.useClass || e.provide)); if (!function U0(e) { return !!e.deps }(e)) return Kn(o) || Cu(o); r = () => new o(...ml(e.deps)) } return r } function Tr(e, t, n = !1) { return { factory: e, value: t, multi: n ? [] : void 0 } } function wu(e, t) { for (const n of e) Array.isArray(n) ? wu(n, t) : n && fl(n) ? wu(n.\u0275providers, t) : t(n) } class W0 { } class Up { } class K0 { resolveComponentFactory(t) { throw function q0(e) { const t = Error(`No component factory found for ${ne(e)}. Did you add it to @NgModule.entryComponents?`); return t.ngComponent = e, t }(t) } } let zo = (() => { class e { } return e.NULL = new K0, e })(); function Z0() { return xr(Pe(), _()) } function xr(e, t) { return new dt(ut(e, t)) } let dt = (() => { class e { constructor(n) { this.nativeElement = n } } return e.__NG_ELEMENT_ID__ = Z0, e })(); class Gp { } let mn = (() => { class e { } return e.__NG_ELEMENT_ID__ = () => function Q0() { const e = _(), n = tt(Pe().index, e); return (lt(n) ? n : e)[U] }(), e })(), X0 = (() => { class e { } return e.\u0275prov = A({ token: e, providedIn: "root", factory: () => null }), e })(); class Go { constructor(t) { this.full = t, this.major = t.split(".")[0], this.minor = t.split(".")[1], this.patch = t.split(".").slice(2).join(".") } } const J0 = new Go("15.2.9"), Eu = {}, bu = "ngOriginalError"; function Mu(e) { return e[bu] } class Rr { constructor() { this._console = console } handleError(t) { const n = this._findOriginalError(t); this._console.error("ERROR", t), n && this._console.error("ORIGINAL ERROR", n) } _findOriginalError(t) { let n = t && Mu(t); for (; n && Mu(n);)n = Mu(n); return n || null } } function yn(e) { return e instanceof Function ? e() : e } function qp(e, t, n) { let r = e.length; for (; ;) { const o = e.indexOf(t, n); if (-1 === o) return o; if (0 === o || e.charCodeAt(o - 1) <= 32) { const i = t.length; if (o + i === r || e.charCodeAt(o + i) <= 32) return o } n = o + 1 } } const Kp = "ng-template"; function cM(e, t, n) { let r = 0, o = !0; for (; r < e.length;) { let i = e[r++]; if ("string" == typeof i && o) { const s = e[r++]; if (n && "class" === i && -1 !== qp(s.toLowerCase(), t, 0)) return !0 } else { if (1 === i) { for (; r < e.length && "string" == typeof (i = e[r++]);)if (i.toLowerCase() === t) return !0; return !1 } "number" == typeof i && (o = !1) } } return !1 } function Zp(e) { return 4 === e.type && e.value !== Kp } function dM(e, t, n) { return t === (4 !== e.type || n ? e.value : Kp) } function fM(e, t, n) { let r = 4; const o = e.attrs || [], i = function gM(e) { for (let t = 0; t < e.length; t++)if (Eh(e[t])) return t; return e.length }(o); let s = !1; for (let a = 0; a < t.length; a++) { const l = t[a]; if ("number" != typeof l) { if (!s) if (4 & r) { if (r = 2 | 1 & r, "" !== l && !dM(e, l, n) || "" === l && 1 === t.length) { if (Ft(r)) return !1; s = !0 } } else { const u = 8 & r ? l : t[++a]; if (8 & r && null !== e.attrs) { if (!cM(e.attrs, u, n)) { if (Ft(r)) return !1; s = !0 } continue } const d = hM(8 & r ? "class" : l, o, Zp(e), n); if (-1 === d) { if (Ft(r)) return !1; s = !0; continue } if ("" !== u) { let f; f = d > i ? "" : o[d + 1].toLowerCase(); const h = 8 & r ? f : null; if (h && -1 !== qp(h, u, 0) || 2 & r && u !== f) { if (Ft(r)) return !1; s = !0 } } } } else { if (!s && !Ft(r) && !Ft(l)) return !1; if (s && Ft(l)) continue; s = !1, r = l | 1 & r } } return Ft(r) || s } function Ft(e) { return 0 == (1 & e) } function hM(e, t, n, r) { if (null === t) return -1; let o = 0; if (r || !n) { let i = !1; for (; o < t.length;) { const s = t[o]; if (s === e) return o; if (3 === s || 6 === s) i = !0; else { if (1 === s || 2 === s) { let a = t[++o]; for (; "string" == typeof a;)a = t[++o]; continue } if (4 === s) break; if (0 === s) { o += 4; continue } } o += i ? 1 : 2 } return -1 } return function mM(e, t) { let n = e.indexOf(4); if (n > -1) for (n++; n < e.length;) { const r = e[n]; if ("number" == typeof r) return -1; if (r === t) return n; n++ } return -1 }(t, e) } function Yp(e, t, n = !1) { for (let r = 0; r < t.length; r++)if (fM(e, t[r], n)) return !0; return !1 } function Qp(e, t) { return e ? ":not(" + t.trim() + ")" : t } function vM(e) { let t = e[0], n = 1, r = 2, o = "", i = !1; for (; n < e.length;) { let s = e[n]; if ("string" == typeof s) if (2 & r) { const a = e[++n]; o += "[" + s + (a.length > 0 ? '="' + a + '"' : "") + "]" } else 8 & r ? o += "." + s : 4 & r && (o += " " + s); else "" !== o && !Ft(s) && (t += Qp(i, o), o = ""), r = s, i = i || !Ft(r); n++ } return "" !== o && (t += Qp(i, o)), t } const L = {}; function qe(e) { Xp(W(), _(), We() + e, !1) } function Xp(e, t, n, r) { if (!r) if (3 == (3 & t[j])) { const i = e.preOrderCheckHooks; null !== i && ts(t, i, n) } else { const i = e.preOrderHooks; null !== i && ns(t, i, 0, n) } Zn(n) } function ng(e, t = null, n = null, r) { const o = rg(e, t, n, r); return o.resolveInjectorInitializers(), o } function rg(e, t = null, n = null, r, o = new Set) { const i = [n || q, L0(e)]; return r = r || ("object" == typeof e ? void 0 : ne(e)), new Hp(i, t || Cs(), r || null, o) } let Yt = (() => { class e { static create(n, r) { if (Array.isArray(n)) return ng({ name: "" }, r, n, ""); { const o = n.name ?? ""; return ng({ name: o }, n.parent, n.providers, o) } } } return e.THROW_IF_NOT_FOUND = yo, e.NULL = new kp, e.\u0275prov = A({ token: e, providedIn: "any", factory: () => S(Np) }), e.__NG_ELEMENT_ID__ = -1, e })(); function D(e, t = O.Default) { const n = _(); return null === n ? S(e, t) : Oh(Pe(), n, R(e), t) } function dg(e, t) { const n = e.contentQueries; if (null !== n) for (let r = 0; r < n.length; r += 2) { const i = n[r + 1]; if (-1 !== i) { const s = e.data[i]; Al(n[r]), s.contentQueries(2, t[i], i) } } } function Es(e, t, n, r, o, i, s, a, l, u, c) { const d = t.blueprint.slice(); return d[fn] = o, d[j] = 76 | r, (null !== c || e && 1024 & e[j]) && (d[j] |= 1024), uh(d), d[de] = d[pr] = e, d[ge] = n, d[Ki] = s || e && e[Ki], d[U] = a || e && e[U], d[_l] = l || e && e[_l] || null, d[qi] = u || e && e[qi] || null, d[Le] = i, d[bo] = function kb() { return Fb++ }(), d[Jf] = c, d[Ve] = 2 == t.type ? e[Ve] : d, d } function Nr(e, t, n, r, o) { let i = e.data[t]; if (null === i) i = function xu(e, t, n, r, o) { const i = fh(), s = bl(), l = e.data[t] = function zM(e, t, n, r, o, i) { return { type: n, index: r, insertBeforeIndex: null, injectorIndex: t ? t.injectorIndex : -1, directiveStart: -1, directiveEnd: -1, directiveStylingLast: -1, componentOffset: -1, propertyBindings: null, flags: 0, providerIndexes: 0, value: o, attrs: i, mergedAttrs: null, localNames: null, initialInputs: void 0, inputs: null, outputs: null, tView: null, next: null, prev: null, projectionNext: null, child: null, parent: t, projection: null, styles: null, stylesWithoutHost: null, residualStyles: void 0, classes: null, classesWithoutHost: null, residualClasses: void 0, classBindings: 0, styleBindings: 0 } }(0, s ? i : i && i.parent, n, t, r, o); return null === e.firstChild && (e.firstChild = l), null !== i && (s ? null == i.child && null !== l.parent && (i.child = l) : null === i.next && (i.next = l, l.prev = i)), l }(e, t, n, r, o), function BE() { return k.lFrame.inI18n }() && (i.flags |= 32); else if (64 & i.type) { i.type = n, i.value = r, i.attrs = o; const s = function Ao() { const e = k.lFrame, t = e.currentTNode; return e.isParent ? t : t.parent }(); i.injectorIndex = null === s ? -1 : s.injectorIndex } return qt(i, !0), i } function Wo(e, t, n, r) { if (0 === n) return -1; const o = t.length; for (let i = 0; i < n; i++)t.push(r), e.blueprint.push(r), e.data.push(null); return o } function Ru(e, t, n) { Tl(t); try { const r = e.viewQuery; null !== r && Bu(1, r, n); const o = e.template; null !== o && fg(e, t, o, 1, n), e.firstCreatePass && (e.firstCreatePass = !1), e.staticContentQueries && dg(e, t), e.staticViewQueries && Bu(2, e.viewQuery, n); const i = e.components; null !== i && function HM(e, t) { for (let n = 0; n < t.length; n++)cS(e, t[n]) }(t, i) } catch (r) { throw e.firstCreatePass && (e.incompleteFirstPass = !0, e.firstCreatePass = !1), r } finally { t[j] &= -5, xl() } } function bs(e, t, n, r) { const o = t[j]; if (128 != (128 & o)) { Tl(t); try { uh(t), function ph(e) { return k.lFrame.bindingIndex = e }(e.bindingStartIndex), null !== n && fg(e, t, n, 2, r); const s = 3 == (3 & o); if (s) { const u = e.preOrderCheckHooks; null !== u && ts(t, u, null) } else { const u = e.preOrderHooks; null !== u && ns(t, u, 0, null), Rl(t, 0) } if (function lS(e) { for (let t = Xl(e); null !== t; t = Jl(t)) { if (!t[eh]) continue; const n = t[mr]; for (let r = 0; r < n.length; r++) { const o = n[r]; 512 & o[j] || El(o[de], 1), o[j] |= 512 } } }(t), function aS(e) { for (let t = Xl(e); null !== t; t = Jl(t))for (let n = ze; n < t.length; n++) { const r = t[n], o = r[b]; Ji(r) && bs(o, r, o.template, r[ge]) } }(t), null !== e.contentQueries && dg(e, t), s) { const u = e.contentCheckHooks; null !== u && ts(t, u) } else { const u = e.contentHooks; null !== u && ns(t, u, 1), Rl(t, 1) } !function jM(e, t) { const n = e.hostBindingOpCodes; if (null !== n) try { for (let r = 0; r < n.length; r++) { const o = n[r]; if (o < 0) Zn(~o); else { const i = o, s = n[++r], a = n[++r]; HE(s, i), a(2, t[i]) } } } finally { Zn(-1) } }(e, t); const a = e.components; null !== a && function BM(e, t) { for (let n = 0; n < t.length; n++)uS(e, t[n]) }(t, a); const l = e.viewQuery; if (null !== l && Bu(2, l, r), s) { const u = e.viewCheckHooks; null !== u && ts(t, u) } else { const u = e.viewHooks; null !== u && ns(t, u, 2), Rl(t, 2) } !0 === e.firstUpdatePass && (e.firstUpdatePass = !1), t[j] &= -41, 512 & t[j] && (t[j] &= -513, El(t[de], -1)) } finally { xl() } } } function fg(e, t, n, r, o) { const i = We(), s = 2 & r; try { Zn(-1), s && t.length > ae && Xp(e, t, ae, !1), wt(s ? 2 : 0, o), n(r, o) } finally { Zn(i), wt(s ? 3 : 1, o) } } function Ou(e, t, n) { if (Cl(t)) { const o = t.directiveEnd; for (let i = t.directiveStart; i < o; i++) { const s = e.data[i]; s.contentQueries && s.contentQueries(1, n[i], i) } } } function Pu(e, t, n) { dh() && (function QM(e, t, n, r) { const o = n.directiveStart, i = n.directiveEnd; Mo(n) && function oS(e, t, n) { const r = ut(t, e), o = hg(n), i = e[Ki], s = Ms(e, Es(e, o, null, n.onPush ? 32 : 16, r, t, i, i.createRenderer(r, n), null, null, null)); e[t.index] = s }(t, n, e.data[o + n.componentOffset]), e.firstCreatePass || ss(n, t), je(r, t); const s = n.initialInputs; for (let a = o; a < i; a++) { const l = e.data[a], u = Yn(t, e, a, n); je(u, t), null !== s && iS(0, a - o, u, l, 0, s), Nt(l) && (tt(n.index, t)[ge] = Yn(t, e, a, n)) } }(e, t, n, ut(n, t)), 64 == (64 & n.flags) && vg(e, t, n)) } function Nu(e, t, n = ut) { const r = t.localNames; if (null !== r) { let o = t.index + 1; for (let i = 0; i < r.length; i += 2) { const s = r[i + 1], a = -1 === s ? n(t, e) : e[s]; e[o++] = a } } } function hg(e) { const t = e.tView; return null === t || t.incompleteFirstPass ? e.tView = Fu(1, null, e.template, e.decls, e.vars, e.directiveDefs, e.pipeDefs, e.viewQuery, e.schemas, e.consts) : t } function Fu(e, t, n, r, o, i, s, a, l, u) { const c = ae + r, d = c + o, f = function $M(e, t) { const n = []; for (let r = 0; r < t; r++)n.push(r < e ? null : L); return n }(c, d), h = "function" == typeof u ? u() : u; return f[b] = { type: e, blueprint: f, template: n, queries: null, viewQuery: a, declTNode: t, data: f.slice().fill(null, c), bindingStartIndex: c, expandoStartIndex: d, hostBindingOpCodes: null, firstCreatePass: !0, firstUpdatePass: !0, staticViewQueries: !1, staticContentQueries: !1, preOrderHooks: null, preOrderCheckHooks: null, contentHooks: null, contentCheckHooks: null, viewHooks: null, viewCheckHooks: null, destroyHooks: null, cleanup: null, contentQueries: null, components: null, directiveRegistry: "function" == typeof i ? i() : i, pipeRegistry: "function" == typeof s ? s() : s, firstChild: null, schemas: l, consts: h, incompleteFirstPass: !1 } } function gg(e, t, n, r) { for (let o in e) if (e.hasOwnProperty(o)) { n = null === n ? {} : n; const i = e[o]; null === r ? mg(n, t, o, i) : r.hasOwnProperty(o) && mg(n, t, r[o], i) } return n } function mg(e, t, n, r) { e.hasOwnProperty(n) ? e[n].push(t, r) : e[n] = [t, r] } function ku(e, t, n, r) { if (dh()) { const o = null === r ? null : { "": -1 }, i = function JM(e, t) { const n = e.directiveRegistry; let r = null, o = null; if (n) for (let i = 0; i < n.length; i++) { const s = n[i]; if (Yp(t, s.selectors, !1)) if (r || (r = []), Nt(s)) if (null !== s.findHostDirectiveDefs) { const a = []; o = o || new Map, s.findHostDirectiveDefs(s, a, o), r.unshift(...a, s), Lu(e, t, a.length) } else r.unshift(s), Lu(e, t, 0); else o = o || new Map, s.findHostDirectiveDefs?.(s, r, o), r.push(s) } return null === r ? null : [r, o] }(e, n); let s, a; null === i ? s = a = null : [s, a] = i, null !== s && yg(e, t, n, s, o, a), o && function eS(e, t, n) { if (t) { const r = e.localNames = []; for (let o = 0; o < t.length; o += 2) { const i = n[t[o + 1]]; if (null == i) throw new C(-301, !1); r.push(t[o], i) } } }(n, r, o) } n.mergedAttrs = xo(n.mergedAttrs, n.attrs) } function yg(e, t, n, r, o, i) { for (let u = 0; u < r.length; u++)Ll(ss(n, t), e, r[u].type); !function nS(e, t, n) { e.flags |= 1, e.directiveStart = t, e.directiveEnd = t + n, e.providerIndexes = t }(n, e.data.length, r.length); for (let u = 0; u < r.length; u++) { const c = r[u]; c.providersResolver && c.providersResolver(c) } let s = !1, a = !1, l = Wo(e, t, r.length, null); for (let u = 0; u < r.length; u++) { const c = r[u]; n.mergedAttrs = xo(n.mergedAttrs, c.hostAttrs), rS(e, n, t, l, c), tS(l, c, o), null !== c.contentQueries && (n.flags |= 4), (null !== c.hostBindings || null !== c.hostAttrs || 0 !== c.hostVars) && (n.flags |= 64); const d = c.type.prototype; !s && (d.ngOnChanges || d.ngOnInit || d.ngDoCheck) && ((e.preOrderHooks ?? (e.preOrderHooks = [])).push(n.index), s = !0), !a && (d.ngOnChanges || d.ngDoCheck) && ((e.preOrderCheckHooks ?? (e.preOrderCheckHooks = [])).push(n.index), a = !0), l++ } !function GM(e, t, n) { const o = t.directiveEnd, i = e.data, s = t.attrs, a = []; let l = null, u = null; for (let c = t.directiveStart; c < o; c++) { const d = i[c], f = n ? n.get(d) : null, p = f ? f.outputs : null; l = gg(d.inputs, c, l, f ? f.inputs : null), u = gg(d.outputs, c, u, p); const g = null === l || null === s || Zp(t) ? null : sS(l, c, s); a.push(g) } null !== l && (l.hasOwnProperty("class") && (t.flags |= 8), l.hasOwnProperty("style") && (t.flags |= 16)), t.initialInputs = a, t.inputs = l, t.outputs = u }(e, n, i) } function vg(e, t, n) { const r = n.directiveStart, o = n.directiveEnd, i = n.index, s = function $E() { return k.lFrame.currentDirectiveIndex }(); try { Zn(i); for (let a = r; a < o; a++) { const l = e.data[a], u = t[a]; Sl(a), (null !== l.hostBindings || 0 !== l.hostVars || null !== l.hostAttrs) && XM(l, u) } } finally { Zn(-1), Sl(s) } } function XM(e, t) { null !== e.hostBindings && e.hostBindings(1, t) } function Lu(e, t, n) { t.componentOffset = n, (e.components ?? (e.components = [])).push(t.index) } function tS(e, t, n) { if (n) { if (t.exportAs) for (let r = 0; r < t.exportAs.length; r++)n[t.exportAs[r]] = e; Nt(t) && (n[""] = e) } } function rS(e, t, n, r, o) { e.data[r] = o; const i = o.factory || (o.factory = Kn(o.type)), s = new To(i, Nt(o), D); e.blueprint[r] = s, n[r] = s, function ZM(e, t, n, r, o) { const i = o.hostBindings; if (i) { let s = e.hostBindingOpCodes; null === s && (s = e.hostBindingOpCodes = []); const a = ~t.index; (function YM(e) { let t = e.length; for (; t > 0;) { const n = e[--t]; if ("number" == typeof n && n < 0) return n } return 0 })(s) != a && s.push(a), s.push(n, r, i) } }(e, t, r, Wo(e, n, o.hostVars, L), o) } function Qt(e, t, n, r, o, i) { const s = ut(e, t); !function Vu(e, t, n, r, o, i, s) { if (null == i) e.removeAttribute(t, o, n); else { const a = null == s ? F(i) : s(i, r || "", o); e.setAttribute(t, o, a, n) } }(t[U], s, i, e.value, n, r, o) } function iS(e, t, n, r, o, i) { const s = i[t]; if (null !== s) { const a = r.setInput; for (let l = 0; l < s.length;) { const u = s[l++], c = s[l++], d = s[l++]; null !== a ? r.setInput(n, d, u, c) : n[c] = d } } } function sS(e, t, n) { let r = null, o = 0; for (; o < n.length;) { const i = n[o]; if (0 !== i) if (5 !== i) { if ("number" == typeof i) break; if (e.hasOwnProperty(i)) { null === r && (r = []); const s = e[i]; for (let a = 0; a < s.length; a += 2)if (s[a] === t) { r.push(i, s[a + 1], n[o + 1]); break } } o += 2 } else o += 2; else o += 4 } return r } function _g(e, t, n, r) { return [e, !0, !1, t, null, 0, r, n, null, null] } function uS(e, t) { const n = tt(t, e); if (Ji(n)) { const r = n[b]; 48 & n[j] ? bs(r, n, r.template, n[ge]) : n[qn] > 0 && ju(n) } } function ju(e) { for (let r = Xl(e); null !== r; r = Jl(r))for (let o = ze; o < r.length; o++) { const i = r[o]; if (Ji(i)) if (512 & i[j]) { const s = i[b]; bs(s, i, s.template, i[ge]) } else i[qn] > 0 && ju(i) } const n = e[b].components; if (null !== n) for (let r = 0; r < n.length; r++) { const o = tt(n[r], e); Ji(o) && o[qn] > 0 && ju(o) } } function cS(e, t) { const n = tt(t, e), r = n[b]; (function dS(e, t) { for (let n = t.length; n < e.blueprint.length; n++)t.push(e.blueprint[n]) })(r, n), Ru(r, n, n[ge]) } function Ms(e, t) { return e[wo] ? e[Xf][Ot] = t : e[wo] = t, e[Xf] = t, t } function Ss(e) { for (; e;) { e[j] |= 32; const t = jo(e); if (wE(e) && !t) return e; e = t } return null } function Is(e, t, n, r = !0) { const o = t[Ki]; o.begin && o.begin(); try { bs(e, t, e.template, n) } catch (s) { throw r && Eg(t, s), s } finally { o.end && o.end() } } function Bu(e, t, n) { Al(0), t(e, n) } function Dg(e) { return e[hr] || (e[hr] = []) } function Cg(e) { return e.cleanup || (e.cleanup = []) } function Eg(e, t) { const n = e[qi], r = n ? n.get(Rr, null) : null; r && r.handleError(t) } function Hu(e, t, n, r, o) { for (let i = 0; i < n.length;) { const s = n[i++], a = n[i++], l = t[s], u = e.data[s]; null !== u.setInput ? u.setInput(l, o, r, a) : l[a] = o } } function As(e, t, n) { let r = n ? e.styles : null, o = n ? e.classes : null, i = 0; if (null !== t) for (let s = 0; s < t.length; s++) { const a = t[s]; "number" == typeof a ? i = a : 1 == i ? o = cl(o, a) : 2 == i && (r = cl(r, a + ": " + t[++s] + ";")) } n ? e.styles = r : e.stylesWithoutHost = r, n ? e.classes = o : e.classesWithoutHost = o } function Ts(e, t, n, r, o = !1) { for (; null !== n;) { const i = t[n.index]; if (null !== i && r.push(Oe(i)), Pt(i)) for (let a = ze; a < i.length; a++) { const l = i[a], u = l[b].firstChild; null !== u && Ts(l[b], l, u, r) } const s = n.type; if (8 & s) Ts(e, t, n.child, r); else if (32 & s) { const a = Ql(n, t); let l; for (; l = a();)r.push(l) } else if (16 & s) { const a = yp(t, n); if (Array.isArray(a)) r.push(...a); else { const l = jo(t[Ve]); Ts(l[b], l, a, r, !0) } } n = o ? n.projectionNext : n.next } return r } class qo { get rootNodes() { const t = this._lView, n = t[b]; return Ts(n, t, n.firstChild, []) } constructor(t, n) { this._lView = t, this._cdRefInjectingView = n, this._appRef = null, this._attachedToViewContainer = !1 } get context() { return this._lView[ge] } set context(t) { this._lView[ge] = t } get destroyed() { return 128 == (128 & this._lView[j]) } destroy() { if (this._appRef) this._appRef.detachView(this); else if (this._attachedToViewContainer) { const t = this._lView[de]; if (Pt(t)) { const n = t[Yi], r = n ? n.indexOf(this) : -1; r > -1 && (nu(t, r), us(n, r)) } this._attachedToViewContainer = !1 } lp(this._lView[b], this._lView) } onDestroy(t) { !function pg(e, t, n, r) { const o = Dg(t); null === n ? o.push(r) : (o.push(n), e.firstCreatePass && Cg(e).push(r, o.length - 1)) }(this._lView[b], this._lView, null, t) } markForCheck() { Ss(this._cdRefInjectingView || this._lView) } detach() { this._lView[j] &= -65 } reattach() { this._lView[j] |= 64 } detectChanges() { Is(this._lView[b], this._lView, this.context) } checkNoChanges() { } attachToViewContainerRef() { if (this._appRef) throw new C(902, !1); this._attachedToViewContainer = !0 } detachFromAppRef() { this._appRef = null, function Qb(e, t) { Bo(e, t, t[U], 2, null, null) }(this._lView[b], this._lView) } attachToAppRef(t) { if (this._attachedToViewContainer) throw new C(902, !1); this._appRef = t } } class fS extends qo { constructor(t) { super(t), this._view = t } detectChanges() { const t = this._view; Is(t[b], t, t[ge], !1) } checkNoChanges() { } get context() { return null } } class bg extends zo { constructor(t) { super(), this.ngModule = t } resolveComponentFactory(t) { const n = Q(t); return new Ko(n, this.ngModule) } } function Mg(e) { const t = []; for (let n in e) e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n }); return t } class pS { constructor(t, n) { this.injector = t, this.parentInjector = n } get(t, n, r) { r = zi(r); const o = this.injector.get(t, Eu, r); return o !== Eu || n === Eu ? o : this.parentInjector.get(t, n, r) } } class Ko extends Up { get inputs() { return Mg(this.componentDef.inputs) } get outputs() { return Mg(this.componentDef.outputs) } constructor(t, n) { super(), this.componentDef = t, this.ngModule = n, this.componentType = t.type, this.selector = function _M(e) { return e.map(vM).join(",") }(t.selectors), this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : [], this.isBoundToModule = !!n } create(t, n, r, o) { let i = (o = o || this.ngModule) instanceof Zt ? o : o?.injector; i && null !== this.componentDef.getStandaloneInjector && (i = this.componentDef.getStandaloneInjector(i) || i); const s = i ? new pS(t, i) : t, a = s.get(Gp, null); if (null === a) throw new C(407, !1); const l = s.get(X0, null), u = a.createRenderer(null, this.componentDef), c = this.componentDef.selectors[0][0] || "div", d = r ? function UM(e, t, n) { return e.selectRootElement(t, n === Gt.ShadowDom) }(u, r, this.componentDef.encapsulation) : tu(u, c, function hS(e) { const t = e.toLowerCase(); return "svg" === t ? "svg" : "math" === t ? "math" : null }(c)), f = this.componentDef.onPush ? 288 : 272, h = Fu(0, null, null, 1, 0, null, null, null, null, null), p = Es(null, h, null, f, null, null, a, u, l, s, null); let g, m; Tl(p); try { const v = this.componentDef; let w, y = null; v.findHostDirectiveDefs ? (w = [], y = new Map, v.findHostDirectiveDefs(v, w, y), w.push(v)) : w = [v]; const I = function mS(e, t) { const n = e[b], r = ae; return e[r] = t, Nr(n, r, 2, "#host", null) }(p, d), K = function yS(e, t, n, r, o, i, s, a) { const l = o[b]; !function vS(e, t, n, r) { for (const o of e) t.mergedAttrs = xo(t.mergedAttrs, o.hostAttrs); null !== t.mergedAttrs && (As(t, t.mergedAttrs, !0), null !== n && Dp(r, n, t)) }(r, e, t, s); const u = i.createRenderer(t, n), c = Es(o, hg(n), null, n.onPush ? 32 : 16, o[e.index], e, i, u, a || null, null, null); return l.firstCreatePass && Lu(l, e, r.length - 1), Ms(o, c), o[e.index] = c }(I, d, v, w, p, a, u); m = lh(h, ae), d && function DS(e, t, n, r) { if (r) Pl(e, n, ["ng-version", J0.full]); else { const { attrs: o, classes: i } = function DM(e) { const t = [], n = []; let r = 1, o = 2; for (; r < e.length;) { let i = e[r]; if ("string" == typeof i) 2 === o ? "" !== i && t.push(i, e[++r]) : 8 === o && n.push(i); else { if (!Ft(o)) break; o = i } r++ } return { attrs: t, classes: n } }(t.selectors[0]); o && Pl(e, n, o), i && i.length > 0 && _p(e, n, i.join(" ")) } }(u, v, d, r), void 0 !== n && function CS(e, t, n) { const r = e.projection = []; for (let o = 0; o < t.length; o++) { const i = n[o]; r.push(null != i ? Array.from(i) : null) } }(m, this.ngContentSelectors, n), g = function _S(e, t, n, r, o, i) { const s = Pe(), a = o[b], l = ut(s, o); yg(a, o, s, n, null, r); for (let c = 0; c < n.length; c++)je(Yn(o, a, s.directiveStart + c, s), o); vg(a, o, s), l && je(l, o); const u = Yn(o, a, s.directiveStart + s.componentOffset, s); if (e[ge] = o[ge] = u, null !== i) for (const c of i) c(u, t); return Ou(a, s, e), u }(K, v, w, y, p, [wS]), Ru(h, p, null) } finally { xl() } return new gS(this.componentType, g, xr(m, p), p, m) } } class gS extends W0 { constructor(t, n, r, o, i) { super(), this.location = r, this._rootLView = o, this._tNode = i, this.instance = n, this.hostView = this.changeDetectorRef = new fS(o), this.componentType = t } setInput(t, n) { const r = this._tNode.inputs; let o; if (null !== r && (o = r[t])) { const i = this._rootLView; Hu(i[b], i, o, t, n), Ss(tt(this._tNode.index, i)) } } get injector() { return new Dr(this._tNode, this._rootLView) } destroy() { this.hostView.destroy() } onDestroy(t) { this.hostView.onDestroy(t) } } function wS() { const e = Pe(); es(_()[b], e) } function X(e) { let t = function Sg(e) { return Object.getPrototypeOf(e.prototype).constructor }(e.type), n = !0; const r = [e]; for (; t;) { let o; if (Nt(e)) o = t.\u0275cmp || t.\u0275dir; else { if (t.\u0275cmp) throw new C(903, !1); o = t.\u0275dir } if (o) { if (n) { r.push(o); const s = e; s.inputs = $u(e.inputs), s.declaredInputs = $u(e.declaredInputs), s.outputs = $u(e.outputs); const a = o.hostBindings; a && SS(e, a); const l = o.viewQuery, u = o.contentQueries; if (l && bS(e, l), u && MS(e, u), ul(e.inputs, o.inputs), ul(e.declaredInputs, o.declaredInputs), ul(e.outputs, o.outputs), Nt(o) && o.data.animation) { const c = e.data; c.animation = (c.animation || []).concat(o.data.animation) } } const i = o.features; if (i) for (let s = 0; s < i.length; s++) { const a = i[s]; a && a.ngInherit && a(e), a === X && (n = !1) } } t = Object.getPrototypeOf(t) } !function ES(e) { let t = 0, n = null; for (let r = e.length - 1; r >= 0; r--) { const o = e[r]; o.hostVars = t += o.hostVars, o.hostAttrs = xo(o.hostAttrs, n = xo(n, o.hostAttrs)) } }(r) } function $u(e) { return e === cn ? {} : e === q ? [] : e } function bS(e, t) { const n = e.viewQuery; e.viewQuery = n ? (r, o) => { t(r, o), n(r, o) } : t } function MS(e, t) { const n = e.contentQueries; e.contentQueries = n ? (r, o, i) => { t(r, o, i), n(r, o, i) } : t } function SS(e, t) { const n = e.hostBindings; e.hostBindings = n ? (r, o) => { t(r, o), n(r, o) } : t } function xs(e) { return !!Uu(e) && (Array.isArray(e) || !(e instanceof Map) && Symbol.iterator in e) } function Uu(e) { return null !== e && ("function" == typeof e || "object" == typeof e) } function Be(e, t, n) { return !Object.is(e[t], n) && (e[t] = n, !0) } function Jt(e, t, n, r) { const o = _(); return Be(o, vr(), t) && (W(), Qt(ue(), o, e, t, n, r)), Jt } function Mt(e, t, n, r, o, i, s, a) { const l = _(), u = W(), c = e + ae, d = u.firstCreatePass ? function kS(e, t, n, r, o, i, s, a, l) { const u = t.consts, c = Nr(t, e, 4, s || null, xn(u, a)); ku(t, n, c, xn(u, l)), es(t, c); const d = c.tView = Fu(2, c, r, o, i, t.directiveRegistry, t.pipeRegistry, null, t.schemas, u); return null !== t.queries && (t.queries.template(t, c), d.queries = t.queries.embeddedTView(c)), c }(c, u, l, t, n, r, o, i, s) : u.data[c]; qt(d, !1); const f = l[U].createComment(""); ps(u, l, f, d), je(f, l), Ms(l, l[c] = _g(f, l, f, d)), Qi(d) && Pu(u, l, d), null != s && Nu(l, d, a) } function zu(e) { return function yr(e, t) { return e[t] }(function jE() { return k.lFrame.contextLView }(), ae + e) } function ot(e, t, n) { const r = _(); return Be(r, vr(), t) && function ft(e, t, n, r, o, i, s, a) { const l = ut(t, n); let c, u = t.inputs; !a && null != u && (c = u[r]) ? (Hu(e, n, c, r, o), Mo(t) && function qM(e, t) { const n = tt(t, e); 16 & n[j] || (n[j] |= 32) }(n, t.index)) : 3 & t.type && (r = function WM(e) { return "class" === e ? "className" : "for" === e ? "htmlFor" : "formaction" === e ? "formAction" : "innerHtml" === e ? "innerHTML" : "readonly" === e ? "readOnly" : "tabindex" === e ? "tabIndex" : e }(r), o = null != s ? s(o, t.value || "", r) : o, i.setProperty(l, r, o)) }(W(), ue(), r, e, t, r[U], n, !1), ot } function Gu(e, t, n, r, o) { const s = o ? "class" : "style"; Hu(e, n, t.inputs[s], s, r) } function J(e, t, n, r) { const o = _(), i = W(), s = ae + e, a = o[U], l = i.firstCreatePass ? function VS(e, t, n, r, o, i) { const s = t.consts, l = Nr(t, e, 2, r, xn(s, o)); return ku(t, n, l, xn(s, i)), null !== l.attrs && As(l, l.attrs, !1), null !== l.mergedAttrs && As(l, l.mergedAttrs, !0), null !== t.queries && t.queries.elementStart(t, l), l }(s, i, o, t, n, r) : i.data[s], u = o[s] = tu(a, t, function YE() { return k.lFrame.currentNamespace }()), c = Qi(l); return qt(l, !0), Dp(a, u, l), 32 != (32 & l.flags) && ps(i, o, u, l), 0 === function NE() { return k.lFrame.elementDepthCount }() && je(u, o), function FE() { k.lFrame.elementDepthCount++ }(), c && (Pu(i, o, l), Ou(i, l, o)), null !== r && Nu(o, l), J } function oe() { let e = Pe(); bl() ? function Ml() { k.lFrame.isParent = !1 }() : (e = e.parent, qt(e, !1)); const t = e; !function kE() { k.lFrame.elementDepthCount-- }(); const n = W(); return n.firstCreatePass && (es(n, e), Cl(e) && n.queries.elementEnd(e)), null != t.classesWithoutHost && function eb(e) { return 0 != (8 & e.flags) }(t) && Gu(n, t, _(), t.classesWithoutHost, !0), null != t.stylesWithoutHost && function tb(e) { return 0 != (16 & e.flags) }(t) && Gu(n, t, _(), t.stylesWithoutHost, !1), oe } function ht(e, t, n, r) { return J(e, t, n, r), oe(), ht } function Os() { return _() } function Yo(e) { return !!e && "function" == typeof e.then } const Ku = function Bg(e) { return !!e && "function" == typeof e.subscribe }; function He(e, t, n, r) { const o = _(), i = W(), s = Pe(); return function $g(e, t, n, r, o, i, s) { const a = Qi(r), u = e.firstCreatePass && Cg(e), c = t[ge], d = Dg(t); let f = !0; if (3 & r.type || s) { const g = ut(r, t), m = s ? s(g) : g, v = d.length, w = s ? I => s(Oe(I[r.index])) : r.index; let y = null; if (!s && a && (y = function BS(e, t, n, r) { const o = e.cleanup; if (null != o) for (let i = 0; i < o.length - 1; i += 2) { const s = o[i]; if (s === n && o[i + 1] === r) { const a = t[hr], l = o[i + 2]; return a.length > l ? a[l] : null } "string" == typeof s && (i += 2) } return null }(e, t, o, r.index)), null !== y) (y.__ngLastListenerFn__ || y).__ngNextListenerFn__ = i, y.__ngLastListenerFn__ = i, f = !1; else { i = zg(r, t, c, i, !1); const I = n.listen(m, o, i); d.push(i, I), u && u.push(o, w, v, v + 1) } } else i = zg(r, t, c, i, !1); const h = r.outputs; let p; if (f && null !== h && (p = h[o])) { const g = p.length; if (g) for (let m = 0; m < g; m += 2) { const K = t[p[m]][p[m + 1]].subscribe(i), De = d.length; d.push(i, K), u && u.push(o, r.index, De, -(De + 1)) } } }(i, o, o[U], s, e, t, r), He } function Ug(e, t, n, r) { try { return wt(6, t, n), !1 !== n(r) } catch (o) { return Eg(e, o), !1 } finally { wt(7, t, n) } } function zg(e, t, n, r, o) { return function i(s) { if (s === Function) return r; Ss(e.componentOffset > -1 ? tt(e.index, t) : t); let l = Ug(t, n, r, s), u = i.__ngNextListenerFn__; for (; u;)l = Ug(t, n, u, s) && l, u = u.__ngNextListenerFn__; return o && !1 === l && (s.preventDefault(), s.returnValue = !1), l } } function St(e = 1) { return function zE(e) { return (k.lFrame.contextLView = function GE(e, t) { for (; e > 0;)t = t[pr], e--; return t }(e, k.lFrame.contextLView))[ge] }(e) } function Ps(e, t) { return e << 17 | t << 2 } function On(e) { return e >> 17 & 32767 } function Yu(e) { return 2 | e } function tr(e) { return (131068 & e) >> 2 } function Qu(e, t) { return -131069 & e | t << 2 } function Xu(e) { return 1 | e } function em(e, t, n, r, o) { const i = e[n + 1], s = null === t; let a = r ? On(i) : tr(i), l = !1; for (; 0 !== a && (!1 === l || s);) { const c = e[a + 1]; ZS(e[a], t) && (l = !0, e[a + 1] = r ? Xu(c) : Yu(c)), a = r ? On(c) : tr(c) } l && (e[n + 1] = r ? Yu(i) : Xu(i)) } function ZS(e, t) { return null === e || null == t || (Array.isArray(e) ? e[1] : e) === t || !(!Array.isArray(e) || "string" != typeof t) && Mr(e, t) >= 0 } const Ae = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 }; function tm(e) { return e.substring(Ae.key, Ae.keyEnd) } function YS(e) { return e.substring(Ae.value, Ae.valueEnd) } function rm(e, t) { const n = Ae.textEnd; let r = Ae.key = zr(e, t, n); return n === r ? -1 : (r = Ae.keyEnd = function eI(e, t, n) { let r; for (; t < n && (45 === (r = e.charCodeAt(t)) || 95 === r || (-33 & r) >= 65 && (-33 & r) <= 90 || r >= 48 && r <= 57);)t++; return t }(e, r, n), r = im(e, r, n), r = Ae.value = zr(e, r, n), r = Ae.valueEnd = function tI(e, t, n) { let r = -1, o = -1, i = -1, s = t, a = s; for (; s < n;) { const l = e.charCodeAt(s++); if (59 === l) return a; 34 === l || 39 === l ? a = s = sm(e, l, s, n) : t === s - 4 && 85 === i && 82 === o && 76 === r && 40 === l ? a = s = sm(e, 41, s, n) : l > 32 && (a = s), i = o, o = r, r = -33 & l } return a }(e, r, n), im(e, r, n)) } function zr(e, t, n) { for (; t < n && e.charCodeAt(t) <= 32;)t++; return t } function im(e, t, n, r) { return (t = zr(e, t, n)) < n && t++, t } function sm(e, t, n, r) { let o = -1, i = n; for (; i < r;) { const s = e.charCodeAt(i++); if (s == t && 92 !== o) return i; o = 92 == s && 92 === o ? 0 : s } throw new Error } function Ns(e, t) { return function Lt(e, t, n, r) { const o = _(), i = W(), s = pn(2); i.firstUpdatePass && um(i, e, s, r), t !== L && Be(o, s, t) && dm(i, i.data[We()], o, o[U], e, o[s + 1] = function dI(e, t) { return null == e || "" === e || ("string" == typeof t ? e += t : "object" == typeof e && (e = ne(Rn(e)))), e }(t, n), r, s) }(e, t, null, !0), Ns } function kt(e) { !function Vt(e, t, n, r) { const o = W(), i = pn(2); o.firstUpdatePass && um(o, null, i, r); const s = _(); if (n !== L && Be(s, i, n)) { const a = o.data[We()]; if (hm(a, r) && !lm(o, i)) { let l = r ? a.classesWithoutHost : a.stylesWithoutHost; null !== l && (n = cl(l, n || "")), Gu(o, a, s, n, r) } else !function cI(e, t, n, r, o, i, s, a) { o === L && (o = q); let l = 0, u = 0, c = 0 < o.length ? o[0] : null, d = 0 < i.length ? i[0] : null; for (; null !== c || null !== d;) { const f = l < o.length ? o[l + 1] : void 0, h = u < i.length ? i[u + 1] : void 0; let g, p = null; c === d ? (l += 2, u += 2, f !== h && (p = d, g = h)) : null === d || null !== c && c < d ? (l += 2, p = c) : (u += 2, p = d, g = h), null !== p && dm(e, t, n, r, p, g, s, a), c = l < o.length ? o[l] : null, d = u < i.length ? i[u] : null } }(o, a, s, s[U], s[i + 1], s[i + 1] = function lI(e, t, n) { if (null == n || "" === n) return q; const r = [], o = Rn(n); if (Array.isArray(o)) for (let i = 0; i < o.length; i++)e(r, o[i], !0); else if ("object" == typeof o) for (const i in o) o.hasOwnProperty(i) && e(r, i, o[i]); else "string" == typeof o && t(r, o); return r }(e, t, n), r, i) } }(cm, nI, e, !1) } function nI(e, t) { for (let n = function XS(e) { return function om(e) { Ae.key = 0, Ae.keyEnd = 0, Ae.value = 0, Ae.valueEnd = 0, Ae.textEnd = e.length }(e), rm(e, zr(e, 0, Ae.textEnd)) }(t); n >= 0; n = rm(t, n))cm(e, tm(t), YS(t)) } function lm(e, t) { return t >= e.expandoStartIndex } function um(e, t, n, r) { const o = e.data; if (null === o[n + 1]) { const i = o[We()], s = lm(e, n); hm(i, r) && null === t && !s && (t = !1), t = function oI(e, t, n, r) { const o = function Il(e) { const t = k.lFrame.currentDirectiveIndex; return -1 === t ? null : e[t] }(e); let i = r ? t.residualClasses : t.residualStyles; if (null === o) 0 === (r ? t.classBindings : t.styleBindings) && (n = Qo(n = Ju(null, e, t, n, r), t.attrs, r), i = null); else { const s = t.directiveStylingLast; if (-1 === s || e[s] !== o) if (n = Ju(o, e, t, n, r), null === i) { let l = function iI(e, t, n) { const r = n ? t.classBindings : t.styleBindings; if (0 !== tr(r)) return e[On(r)] }(e, t, r); void 0 !== l && Array.isArray(l) && (l = Ju(null, e, t, l[1], r), l = Qo(l, t.attrs, r), function sI(e, t, n, r) { e[On(n ? t.classBindings : t.styleBindings)] = r }(e, t, r, l)) } else i = function aI(e, t, n) { let r; const o = t.directiveEnd; for (let i = 1 + t.directiveStylingLast; i < o; i++)r = Qo(r, e[i].hostAttrs, n); return Qo(r, t.attrs, n) }(e, t, r) } return void 0 !== i && (r ? t.residualClasses = i : t.residualStyles = i), n }(o, i, t, r), function qS(e, t, n, r, o, i) { let s = i ? t.classBindings : t.styleBindings, a = On(s), l = tr(s); e[r] = n; let c, u = !1; if (Array.isArray(n) ? (c = n[1], (null === c || Mr(n, c) > 0) && (u = !0)) : c = n, o) if (0 !== l) { const f = On(e[a + 1]); e[r + 1] = Ps(f, a), 0 !== f && (e[f + 1] = Qu(e[f + 1], r)), e[a + 1] = function GS(e, t) { return 131071 & e | t << 17 }(e[a + 1], r) } else e[r + 1] = Ps(a, 0), 0 !== a && (e[a + 1] = Qu(e[a + 1], r)), a = r; else e[r + 1] = Ps(l, 0), 0 === a ? a = r : e[l + 1] = Qu(e[l + 1], r), l = r; u && (e[r + 1] = Yu(e[r + 1])), em(e, c, r, !0), em(e, c, r, !1), function KS(e, t, n, r, o) { const i = o ? e.residualClasses : e.residualStyles; null != i && "string" == typeof t && Mr(i, t) >= 0 && (n[r + 1] = Xu(n[r + 1])) }(t, c, e, r, i), s = Ps(a, l), i ? t.classBindings = s : t.styleBindings = s }(o, i, t, n, s, r) } } function Ju(e, t, n, r, o) { let i = null; const s = n.directiveEnd; let a = n.directiveStylingLast; for (-1 === a ? a = n.directiveStart : a++; a < s && (i = t[a], r = Qo(r, i.hostAttrs, o), i !== e);)a++; return null !== e && (n.directiveStylingLast = a), r } function Qo(e, t, n) { const r = n ? 1 : 2; let o = -1; if (null !== t) for (let i = 0; i < t.length; i++) { const s = t[i]; "number" == typeof s ? o = s : o === r && (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]), ct(e, s, !!n || t[++i])) } return void 0 === e ? null : e } function cm(e, t, n) { ct(e, t, Rn(n)) } function dm(e, t, n, r, o, i, s, a) { if (!(3 & t.type)) return; const l = e.data, u = l[a + 1], c = function WS(e) { return 1 == (1 & e) }(u) ? fm(l, t, n, o, tr(u), s) : void 0; Fs(c) || (Fs(i) || function zS(e) { return 2 == (2 & e) }(u) && (i = fm(l, null, n, o, a, s)), function l0(e, t, n, r, o) { if (t) o ? e.addClass(n, r) : e.removeClass(n, r); else { let i = -1 === r.indexOf("-") ? void 0 : nt.DashCase; null == o ? e.removeStyle(n, r, i) : ("string" == typeof o && o.endsWith("!important") && (o = o.slice(0, -10), i |= nt.Important), e.setStyle(n, r, o, i)) } }(r, s, Xi(We(), n), o, i)) } function fm(e, t, n, r, o, i) { const s = null === t; let a; for (; o > 0;) { const l = e[o], u = Array.isArray(l), c = u ? l[1] : l, d = null === c; let f = n[o + 1]; f === L && (f = d ? q : void 0); let h = d ? Hl(f, r) : c === r ? f : void 0; if (u && !Fs(h) && (h = Hl(l, r)), Fs(h) && (a = h, s)) return a; const p = e[o + 1]; o = s ? On(p) : tr(p) } if (null !== t) { let l = i ? t.residualClasses : t.residualStyles; null != l && (a = Hl(l, r)) } return a } function Fs(e) { return void 0 !== e } function hm(e, t) { return 0 != (e.flags & (t ? 8 : 16)) } function Ke(e, t = "") { const n = _(), r = W(), o = e + ae, i = r.firstCreatePass ? Nr(r, o, 1, t, null) : r.data[o], s = n[o] = function eu(e, t) { return e.createText(t) }(n[U], t); ps(r, n, s, i), qt(i, !1) } function Gr(e) { return ec("", e, ""), Gr } function ec(e, t, n) { const r = _(), o = function kr(e, t, n, r) { return Be(e, vr(), n) ? t + F(n) + r : L }(r, e, t, n); return o !== L && function vn(e, t, n) { const r = Xi(t, e); !function sp(e, t, n) { e.setValue(t, n) }(e[U], r, n) }(r, We(), o), ec } const qr = "en-US"; let Fm = qr; function rc(e, t, n, r, o) { if (e = R(e), Array.isArray(e)) for (let i = 0; i < e.length; i++)rc(e[i], t, n, r, o); else { const i = W(), s = _(); let a = Jn(e) ? e : R(e.provide), l = $p(e); const u = Pe(), c = 1048575 & u.providerIndexes, d = u.directiveStart, f = u.providerIndexes >> 20; if (Jn(e) || !e.multi) { const h = new To(l, o, D), p = ic(a, t, o ? c : c + f, d); -1 === p ? (Ll(ss(u, s), i, a), oc(i, e, t.length), t.push(a), u.directiveStart++, u.directiveEnd++, o && (u.providerIndexes += 1048576), n.push(h), s.push(h)) : (n[p] = h, s[p] = h) } else { const h = ic(a, t, c + f, d), p = ic(a, t, c, c + f), m = p >= 0 && n[p]; if (o && !m || !o && !(h >= 0 && n[h])) { Ll(ss(u, s), i, a); const v = function TA(e, t, n, r, o) { const i = new To(e, n, D); return i.multi = [], i.index = t, i.componentProviders = 0, sy(i, o, r && !n), i }(o ? AA : IA, n.length, o, r, l); !o && m && (n[p].providerFactory = v), oc(i, e, t.length, 0), t.push(a), u.directiveStart++, u.directiveEnd++, o && (u.providerIndexes += 1048576), n.push(v), s.push(v) } else oc(i, e, h > -1 ? h : p, sy(n[o ? p : h], l, !o && r)); !o && r && m && n[p].componentProviders++ } } } function oc(e, t, n, r) { const o = Jn(t), i = function j0(e) { return !!e.useClass }(t); if (o || i) { const l = (i ? R(t.useClass) : t).prototype.ngOnDestroy; if (l) { const u = e.destroyHooks || (e.destroyHooks = []); if (!o && t.multi) { const c = u.indexOf(n); -1 === c ? u.push(n, [r, l]) : u[c + 1].push(r, l) } else u.push(n, l) } } } function sy(e, t, n) { return n && e.componentProviders++, e.multi.push(t) - 1 } function ic(e, t, n, r) { for (let o = n; o < r; o++)if (t[o] === e) return o; return -1 } function IA(e, t, n, r) { return sc(this.multi, []) } function AA(e, t, n, r) { const o = this.multi; let i; if (this.providerFactory) { const s = this.providerFactory.componentProviders, a = Yn(n, n[b], this.providerFactory.index, r); i = a.slice(0, s), sc(o, i); for (let l = s; l < a.length; l++)i.push(a[l]) } else i = [], sc(o, i); return i } function sc(e, t) { for (let n = 0; n < e.length; n++)t.push((0, e[n])()); return t } function le(e, t = []) { return n => { n.providersResolver = (r, o) => function SA(e, t, n) { const r = W(); if (r.firstCreatePass) { const o = Nt(e); rc(n, r.data, r.blueprint, o, !0), rc(t, r.data, r.blueprint, o, !1) } }(r, o ? o(e) : e, t) } } class Kr { } class ay { } class ly extends Kr { constructor(t, n) { super(), this._parent = n, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new bg(this); const r = at(t); this._bootstrapComponents = yn(r.bootstrap), this._r3Injector = rg(t, n, [{ provide: Kr, useValue: this }, { provide: zo, useValue: this.componentFactoryResolver }], ne(t), new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(t) } get injector() { return this._r3Injector } destroy() { const t = this._r3Injector; !t.destroyed && t.destroy(), this.destroyCbs.forEach(n => n()), this.destroyCbs = null } onDestroy(t) { this.destroyCbs.push(t) } } class ac extends ay { constructor(t) { super(), this.moduleType = t } create(t) { return new ly(this.moduleType, t) } } class RA extends Kr { constructor(t, n, r) { super(), this.componentFactoryResolver = new bg(this), this.instance = null; const o = new Hp([...t, { provide: Kr, useValue: this }, { provide: zo, useValue: this.componentFactoryResolver }], n || Cs(), r, new Set(["environment"])); this.injector = o, o.resolveInjectorInitializers() } destroy() { this.injector.destroy() } onDestroy(t) { this.injector.onDestroy(t) } } function Bs(e, t, n = null) { return new RA(e, t, n).injector } let OA = (() => { class e { constructor(n) { this._injector = n, this.cachedInjectors = new Map } getOrCreateStandaloneInjector(n) { if (!n.standalone) return null; if (!this.cachedInjectors.has(n.id)) { const r = Lp(0, n.type), o = r.length > 0 ? Bs([r], this._injector, `Standalone[${n.type.name}]`) : null; this.cachedInjectors.set(n.id, o) } return this.cachedInjectors.get(n.id) } ngOnDestroy() { try { for (const n of this.cachedInjectors.values()) null !== n && n.destroy() } finally { this.cachedInjectors.clear() } } } return e.\u0275prov = A({ token: e, providedIn: "environment", factory: () => new e(S(Zt)) }), e })(); function uy(e) { e.getStandaloneInjector = t => t.get(OA).getOrCreateStandaloneInjector(e) } function my(e, t, n, r) { return function yy(e, t, n, r, o, i) { const s = t + n; return Be(e, s, o) ? function Xt(e, t, n) { return e[t] = n }(e, s + 1, i ? r.call(i, o) : r(o)) : function ri(e, t) { const n = e[t]; return n === L ? void 0 : n }(e, s + 1) }(_(), function Ge() { const e = k.lFrame; let t = e.bindingRootIndex; return -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t }(), e, t, n, r) } function uc(e) { return t => { setTimeout(e, void 0, t) } } const he = class rT extends an { constructor(t = !1) { super(), this.__isAsync = t } emit(t) { super.next(t) } subscribe(t, n, r) { let o = t, i = n || (() => null), s = r; if (t && "object" == typeof t) { const l = t; o = l.next?.bind(l), i = l.error?.bind(l), s = l.complete?.bind(l) } this.__isAsync && (i = uc(i), o && (o = uc(o)), s && (s = uc(s))); const a = super.subscribe({ next: o, error: i, complete: s }); return t instanceof mt && t.add(a), a } }; let _n = (() => { class e { } return e.__NG_ELEMENT_ID__ = aT, e })(); const iT = _n, sT = class extends iT { constructor(t, n, r) { super(), this._declarationLView = t, this._declarationTContainer = n, this.elementRef = r } createEmbeddedView(t, n) { const r = this._declarationTContainer.tView, o = Es(this._declarationLView, r, t, 16, null, r.declTNode, null, null, null, null, n || null); o[Eo] = this._declarationLView[this._declarationTContainer.index]; const s = this._declarationLView[Wt]; return null !== s && (o[Wt] = s.createEmbeddedView(r)), Ru(r, o, t), new qo(o) } }; function aT() { return Hs(Pe(), _()) } function Hs(e, t) { return 4 & e.type ? new sT(t, e, xr(e, t)) : null } let jt = (() => { class e { } return e.__NG_ELEMENT_ID__ = lT, e })(); function lT() { return function by(e, t) { let n; const r = t[e.index]; if (Pt(r)) n = r; else { let o; if (8 & e.type) o = Oe(r); else { const i = t[U]; o = i.createComment(""); const s = ut(e, t); Xn(i, hs(i, s), o, function o0(e, t) { return e.nextSibling(t) }(i, s), !1) } t[e.index] = n = _g(r, t, o, e), Ms(t, n) } return new wy(n, e, t) }(Pe(), _()) } const uT = jt, wy = class extends uT { constructor(t, n, r) { super(), this._lContainer = t, this._hostTNode = n, this._hostLView = r } get element() { return xr(this._hostTNode, this._hostLView) } get injector() { return new Dr(this._hostTNode, this._hostLView) } get parentInjector() { const t = kl(this._hostTNode, this._hostLView); if (Sh(t)) { const n = os(t, this._hostLView), r = rs(t); return new Dr(n[b].data[r + 8], n) } return new Dr(null, this._hostLView) } clear() { for (; this.length > 0;)this.remove(this.length - 1) } get(t) { const n = Ey(this._lContainer); return null !== n && n[t] || null } get length() { return this._lContainer.length - ze } createEmbeddedView(t, n, r) { let o, i; "number" == typeof r ? o = r : null != r && (o = r.index, i = r.injector); const s = t.createEmbeddedView(n || {}, i); return this.insert(s, o), s } createComponent(t, n, r, o, i) { const s = t && !function Oo(e) { return "function" == typeof e }(t); let a; if (s) a = n; else { const d = n || {}; a = d.index, r = d.injector, o = d.projectableNodes, i = d.environmentInjector || d.ngModuleRef } const l = s ? t : new Ko(Q(t)), u = r || this.parentInjector; if (!i && null == l.ngModule) { const f = (s ? u : this.parentInjector).get(Zt, null); f && (i = f) } const c = l.create(u, o, void 0, i); return this.insert(c.hostView, a), c } insert(t, n) { const r = t._lView, o = r[b]; if (function PE(e) { return Pt(e[de]) }(r)) { const c = this.indexOf(t); if (-1 !== c) this.detach(c); else { const d = r[de], f = new wy(d, d[Le], d[de]); f.detach(f.indexOf(t)) } } const i = this._adjustIndex(n), s = this._lContainer; !function Jb(e, t, n, r) { const o = ze + r, i = n.length; r > 0 && (n[o - 1][Ot] = t), r < i - ze ? (t[Ot] = n[o], Vh(n, ze + r, t)) : (n.push(t), t[Ot] = null), t[de] = n; const s = t[Eo]; null !== s && n !== s && function e0(e, t) { const n = e[mr]; t[Ve] !== t[de][de][Ve] && (e[eh] = !0), null === n ? e[mr] = [t] : n.push(t) }(s, t); const a = t[Wt]; null !== a && a.insertView(e), t[j] |= 64 }(o, r, s, i); const a = iu(i, s), l = r[U], u = hs(l, s[Zi]); return null !== u && function Yb(e, t, n, r, o, i) { r[fn] = o, r[Le] = t, Bo(e, r, n, 1, o, i) }(o, s[Le], l, r, u, a), t.attachToViewContainerRef(), Vh(dc(s), i, t), t } move(t, n) { return this.insert(t, n) } indexOf(t) { const n = Ey(this._lContainer); return null !== n ? n.indexOf(t) : -1 } remove(t) { const n = this._adjustIndex(t, -1), r = nu(this._lContainer, n); r && (us(dc(this._lContainer), n), lp(r[b], r)) } detach(t) { const n = this._adjustIndex(t, -1), r = nu(this._lContainer, n); return r && null != us(dc(this._lContainer), n) ? new qo(r) : null } _adjustIndex(t, n = 0) { return t ?? this.length + n } }; function Ey(e) { return e[Yi] } function dc(e) { return e[Yi] || (e[Yi] = []) } function yc(e, t) { return Hs(e, t) } function Us(...e) { } const zs = new M("Application Initializer"); let Gs = (() => { class e { constructor(n) { this.appInits = n, this.resolve = Us, this.reject = Us, this.initialized = !1, this.done = !1, this.donePromise = new Promise((r, o) => { this.resolve = r, this.reject = o }) } runInitializers() { if (this.initialized) return; const n = [], r = () => { this.done = !0, this.resolve() }; if (this.appInits) for (let o = 0; o < this.appInits.length; o++) { const i = this.appInits[o](); if (Yo(i)) n.push(i); else if (Ku(i)) { const s = new Promise((a, l) => { i.subscribe({ complete: a, error: l }) }); n.push(s) } } Promise.all(n).then(() => { r() }).catch(o => { this.reject(o) }), 0 === n.length && r(), this.initialized = !0 } } return e.\u0275fac = function (n) { return new (n || e)(S(zs, 8)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const si = new M("AppId", { providedIn: "root", factory: function Yy() { return `${Ec()}${Ec()}${Ec()}` } }); function Ec() { return String.fromCharCode(97 + Math.floor(25 * Math.random())) } const Qy = new M("Platform Initializer"), bc = new M("Platform ID", { providedIn: "platform", factory: () => "unknown" }); let kT = (() => { class e { log(n) { console.log(n) } warn(n) { console.warn(n) } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "platform" }), e })(); const Dn = new M("LocaleId", { providedIn: "root", factory: () => $(Dn, O.Optional | O.SkipSelf) || function LT() { return typeof $localize < "u" && $localize.locale || qr }() }); class jT { constructor(t, n) { this.ngModuleFactory = t, this.componentFactories = n } } let Xy = (() => { class e { compileModuleSync(n) { return new ac(n) } compileModuleAsync(n) { return Promise.resolve(this.compileModuleSync(n)) } compileModuleAndAllComponentsSync(n) { const r = this.compileModuleSync(n), i = yn(at(n).declarations).reduce((s, a) => { const l = Q(a); return l && s.push(new Ko(l)), s }, []); return new jT(r, i) } compileModuleAndAllComponentsAsync(n) { return Promise.resolve(this.compileModuleAndAllComponentsSync(n)) } clearCache() { } clearCacheFor(n) { } getModuleId(n) { } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const $T = (() => Promise.resolve(0))(); function Mc(e) { typeof Zone > "u" ? $T.then(() => { e && e.apply(null, null) }) : Zone.current.scheduleMicroTask("scheduleMicrotask", e) } class me { constructor({ enableLongStackTrace: t = !1, shouldCoalesceEventChangeDetection: n = !1, shouldCoalesceRunChangeDetection: r = !1 }) { if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new he(!1), this.onMicrotaskEmpty = new he(!1), this.onStable = new he(!1), this.onError = new he(!1), typeof Zone > "u") throw new C(908, !1); Zone.assertZonePatched(); const o = this; o._nesting = 0, o._outer = o._inner = Zone.current, Zone.TaskTrackingZoneSpec && (o._inner = o._inner.fork(new Zone.TaskTrackingZoneSpec)), t && Zone.longStackTraceZoneSpec && (o._inner = o._inner.fork(Zone.longStackTraceZoneSpec)), o.shouldCoalesceEventChangeDetection = !r && n, o.shouldCoalesceRunChangeDetection = r, o.lastRequestAnimationFrameId = -1, o.nativeRequestAnimationFrame = function UT() { let e = se.requestAnimationFrame, t = se.cancelAnimationFrame; if (typeof Zone < "u" && e && t) { const n = e[Zone.__symbol__("OriginalDelegate")]; n && (e = n); const r = t[Zone.__symbol__("OriginalDelegate")]; r && (t = r) } return { nativeRequestAnimationFrame: e, nativeCancelAnimationFrame: t } }().nativeRequestAnimationFrame, function WT(e) { const t = () => { !function GT(e) { e.isCheckStableRunning || -1 !== e.lastRequestAnimationFrameId || (e.lastRequestAnimationFrameId = e.nativeRequestAnimationFrame.call(se, () => { e.fakeTopEventTask || (e.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => { e.lastRequestAnimationFrameId = -1, Ic(e), e.isCheckStableRunning = !0, Sc(e), e.isCheckStableRunning = !1 }, void 0, () => { }, () => { })), e.fakeTopEventTask.invoke() }), Ic(e)) }(e) }; e._inner = e._inner.fork({ name: "angular", properties: { isAngularZone: !0 }, onInvokeTask: (n, r, o, i, s, a) => { try { return tv(e), n.invokeTask(o, i, s, a) } finally { (e.shouldCoalesceEventChangeDetection && "eventTask" === i.type || e.shouldCoalesceRunChangeDetection) && t(), nv(e) } }, onInvoke: (n, r, o, i, s, a, l) => { try { return tv(e), n.invoke(o, i, s, a, l) } finally { e.shouldCoalesceRunChangeDetection && t(), nv(e) } }, onHasTask: (n, r, o, i) => { n.hasTask(o, i), r === o && ("microTask" == i.change ? (e._hasPendingMicrotasks = i.microTask, Ic(e), Sc(e)) : "macroTask" == i.change && (e.hasPendingMacrotasks = i.macroTask)) }, onHandleError: (n, r, o, i) => (n.handleError(o, i), e.runOutsideAngular(() => e.onError.emit(i)), !1) }) }(o) } static isInAngularZone() { return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone") } static assertInAngularZone() { if (!me.isInAngularZone()) throw new C(909, !1) } static assertNotInAngularZone() { if (me.isInAngularZone()) throw new C(909, !1) } run(t, n, r) { return this._inner.run(t, n, r) } runTask(t, n, r, o) { const i = this._inner, s = i.scheduleEventTask("NgZoneEvent: " + o, t, zT, Us, Us); try { return i.runTask(s, n, r) } finally { i.cancelTask(s) } } runGuarded(t, n, r) { return this._inner.runGuarded(t, n, r) } runOutsideAngular(t) { return this._outer.run(t) } } const zT = {}; function Sc(e) { if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable) try { e._nesting++, e.onMicrotaskEmpty.emit(null) } finally { if (e._nesting--, !e.hasPendingMicrotasks) try { e.runOutsideAngular(() => e.onStable.emit(null)) } finally { e.isStable = !0 } } } function Ic(e) { e.hasPendingMicrotasks = !!(e._hasPendingMicrotasks || (e.shouldCoalesceEventChangeDetection || e.shouldCoalesceRunChangeDetection) && -1 !== e.lastRequestAnimationFrameId) } function tv(e) { e._nesting++, e.isStable && (e.isStable = !1, e.onUnstable.emit(null)) } function nv(e) { e._nesting--, Sc(e) } class qT { constructor() { this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new he, this.onMicrotaskEmpty = new he, this.onStable = new he, this.onError = new he } run(t, n, r) { return t.apply(n, r) } runGuarded(t, n, r) { return t.apply(n, r) } runOutsideAngular(t) { return t() } runTask(t, n, r, o) { return t.apply(n, r) } } const rv = new M(""), Ws = new M(""); let xc, Ac = (() => { class e { constructor(n, r, o) { this._ngZone = n, this.registry = r, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, xc || (function KT(e) { xc = e }(o), o.addToWindow(r)), this._watchAngularEvents(), n.run(() => { this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone") }) } _watchAngularEvents() { this._ngZone.onUnstable.subscribe({ next: () => { this._didWork = !0, this._isZoneStable = !1 } }), this._ngZone.runOutsideAngular(() => { this._ngZone.onStable.subscribe({ next: () => { me.assertNotInAngularZone(), Mc(() => { this._isZoneStable = !0, this._runCallbacksIfReady() }) } }) }) } increasePendingRequestCount() { return this._pendingCount += 1, this._didWork = !0, this._pendingCount } decreasePendingRequestCount() { if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero"); return this._runCallbacksIfReady(), this._pendingCount } isStable() { return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks } _runCallbacksIfReady() { if (this.isStable()) Mc(() => { for (; 0 !== this._callbacks.length;) { let n = this._callbacks.pop(); clearTimeout(n.timeoutId), n.doneCb(this._didWork) } this._didWork = !1 }); else { let n = this.getPendingTasks(); this._callbacks = this._callbacks.filter(r => !r.updateCb || !r.updateCb(n) || (clearTimeout(r.timeoutId), !1)), this._didWork = !0 } } getPendingTasks() { return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(n => ({ source: n.source, creationLocation: n.creationLocation, data: n.data })) : [] } addCallback(n, r, o) { let i = -1; r && r > 0 && (i = setTimeout(() => { this._callbacks = this._callbacks.filter(s => s.timeoutId !== i), n(this._didWork, this.getPendingTasks()) }, r)), this._callbacks.push({ doneCb: n, timeoutId: i, updateCb: o }) } whenStable(n, r, o) { if (o && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'); this.addCallback(n, r, o), this._runCallbacksIfReady() } getPendingRequestCount() { return this._pendingCount } registerApplication(n) { this.registry.registerApplication(n, this) } unregisterApplication(n) { this.registry.unregisterApplication(n) } findProviders(n, r, o) { return [] } } return e.\u0275fac = function (n) { return new (n || e)(S(me), S(Tc), S(Ws)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(), Tc = (() => { class e { constructor() { this._applications = new Map } registerApplication(n, r) { this._applications.set(n, r) } unregisterApplication(n) { this._applications.delete(n) } unregisterAllApplications() { this._applications.clear() } getTestability(n) { return this._applications.get(n) || null } getAllTestabilities() { return Array.from(this._applications.values()) } getAllRootElements() { return Array.from(this._applications.keys()) } findTestabilityInTree(n, r = !0) { return xc?.findTestabilityInTree(this, n, r) ?? null } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "platform" }), e })(); const Cn = !1; let Pn = null; const ov = new M("AllowMultipleToken"), Rc = new M("PlatformDestroyListeners"), iv = new M("appBootstrapListener"); class sv { constructor(t, n) { this.name = t, this.token = n } } function lv(e, t, n = []) { const r = `Platform: ${t}`, o = new M(r); return (i = []) => { let s = Oc(); if (!s || s.injector.get(ov, !1)) { const a = [...n, ...i, { provide: o, useValue: !0 }]; e ? e(a) : function QT(e) { if (Pn && !Pn.get(ov, !1)) throw new C(400, !1); Pn = e; const t = e.get(cv); (function av(e) { const t = e.get(Qy, null); t && t.forEach(n => n()) })(e) }(function uv(e = [], t) { return Yt.create({ name: t, providers: [{ provide: _u, useValue: "platform" }, { provide: Rc, useValue: new Set([() => Pn = null]) }, ...e] }) }(a, r)) } return function JT(e) { const t = Oc(); if (!t) throw new C(401, !1); return t }() } } function Oc() { return Pn?.get(cv) ?? null } let cv = (() => { class e { constructor(n) { this._injector = n, this._modules = [], this._destroyListeners = [], this._destroyed = !1 } bootstrapModuleFactory(n, r) { const o = function fv(e, t) { let n; return n = "noop" === e ? new qT : ("zone.js" === e ? void 0 : e) || new me(t), n }(r?.ngZone, function dv(e) { return { enableLongStackTrace: !1, shouldCoalesceEventChangeDetection: !(!e || !e.ngZoneEventCoalescing) || !1, shouldCoalesceRunChangeDetection: !(!e || !e.ngZoneRunCoalescing) || !1 } }(r)), i = [{ provide: me, useValue: o }]; return o.run(() => { const s = Yt.create({ providers: i, parent: this.injector, name: n.moduleType.name }), a = n.create(s), l = a.injector.get(Rr, null); if (!l) throw new C(402, !1); return o.runOutsideAngular(() => { const u = o.onError.subscribe({ next: c => { l.handleError(c) } }); a.onDestroy(() => { Ks(this._modules, a), u.unsubscribe() }) }), function hv(e, t, n) { try { const r = n(); return Yo(r) ? r.catch(o => { throw t.runOutsideAngular(() => e.handleError(o)), o }) : r } catch (r) { throw t.runOutsideAngular(() => e.handleError(r)), r } }(l, o, () => { const u = a.injector.get(Gs); return u.runInitializers(), u.donePromise.then(() => (function km(e) { vt(e, "Expected localeId to be defined"), "string" == typeof e && (Fm = e.toLowerCase().replace(/_/g, "-")) }(a.injector.get(Dn, qr) || qr), this._moduleDoBootstrap(a), a)) }) }) } bootstrapModule(n, r = []) { const o = pv({}, r); return function ZT(e, t, n) { const r = new ac(n); return Promise.resolve(r) }(0, 0, n).then(i => this.bootstrapModuleFactory(i, o)) } _moduleDoBootstrap(n) { const r = n.injector.get(qs); if (n._bootstrapComponents.length > 0) n._bootstrapComponents.forEach(o => r.bootstrap(o)); else { if (!n.instance.ngDoBootstrap) throw new C(-403, !1); n.instance.ngDoBootstrap(r) } this._modules.push(n) } onDestroy(n) { this._destroyListeners.push(n) } get injector() { return this._injector } destroy() { if (this._destroyed) throw new C(404, !1); this._modules.slice().forEach(r => r.destroy()), this._destroyListeners.forEach(r => r()); const n = this._injector.get(Rc, null); n && (n.forEach(r => r()), n.clear()), this._destroyed = !0 } get destroyed() { return this._destroyed } } return e.\u0275fac = function (n) { return new (n || e)(S(Yt)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "platform" }), e })(); function pv(e, t) { return Array.isArray(t) ? t.reduce(pv, e) : { ...e, ...t } } let qs = (() => { class e { get destroyed() { return this._destroyed } get injector() { return this._injector } constructor(n, r, o) { this._zone = n, this._injector = r, this._exceptionHandler = o, this._bootstrapListeners = [], this._views = [], this._runningTick = !1, this._stable = !0, this._destroyed = !1, this._destroyListeners = [], this.componentTypes = [], this.components = [], this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({ next: () => { this._zone.run(() => { this.tick() }) } }); const i = new pe(a => { this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks, this._zone.runOutsideAngular(() => { a.next(this._stable), a.complete() }) }), s = new pe(a => { let l; this._zone.runOutsideAngular(() => { l = this._zone.onStable.subscribe(() => { me.assertNotInAngularZone(), Mc(() => { !this._stable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks && (this._stable = !0, a.next(!0)) }) }) }); const u = this._zone.onUnstable.subscribe(() => { me.assertInAngularZone(), this._stable && (this._stable = !1, this._zone.runOutsideAngular(() => { a.next(!1) })) }); return () => { l.unsubscribe(), u.unsubscribe() } }); this.isStable = function Xw(...e) { const t = mo(e), n = function Gw(e, t) { return "number" == typeof al(e) ? e.pop() : t }(e, 1 / 0), r = e; return r.length ? 1 === r.length ? yt(r[0]) : cr(n)(Ce(r, t)) : xt }(i, s.pipe(function Jw(e = {}) { const { connector: t = (() => new an), resetOnError: n = !0, resetOnComplete: r = !0, resetOnRefCountZero: o = !0 } = e; return i => { let s, a, l, u = 0, c = !1, d = !1; const f = () => { a?.unsubscribe(), a = void 0 }, h = () => { f(), s = l = void 0, c = d = !1 }, p = () => { const g = s; h(), g?.unsubscribe() }; return xe((g, m) => { u++, !d && !c && f(); const v = l = l ?? t(); m.add(() => { u--, 0 === u && !d && !c && (a = ll(p, o)) }), v.subscribe(m), !s && u > 0 && (s = new go({ next: w => v.next(w), error: w => { d = !0, f(), a = ll(h, n, w), v.error(w) }, complete: () => { c = !0, f(), a = ll(h, r), v.complete() } }), yt(g).subscribe(s)) })(i) } }())) } bootstrap(n, r) { const o = n instanceof Up; if (!this._injector.get(Gs).done) { !o && function fr(e) { const t = Q(e) || ke(e) || et(e); return null !== t && t.standalone }(n); throw new C(405, Cn) } let s; s = o ? n : this._injector.get(zo).resolveComponentFactory(n), this.componentTypes.push(s.componentType); const a = function YT(e) { return e.isBoundToModule }(s) ? void 0 : this._injector.get(Kr), u = s.create(Yt.NULL, [], r || s.selector, a), c = u.location.nativeElement, d = u.injector.get(rv, null); return d?.registerApplication(c), u.onDestroy(() => { this.detachView(u.hostView), Ks(this.components, u), d?.unregisterApplication(c) }), this._loadComponent(u), u } tick() { if (this._runningTick) throw new C(101, !1); try { this._runningTick = !0; for (let n of this._views) n.detectChanges() } catch (n) { this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(n)) } finally { this._runningTick = !1 } } attachView(n) { const r = n; this._views.push(r), r.attachToAppRef(this) } detachView(n) { const r = n; Ks(this._views, r), r.detachFromAppRef() } _loadComponent(n) { this.attachView(n.hostView), this.tick(), this.components.push(n); const r = this._injector.get(iv, []); r.push(...this._bootstrapListeners), r.forEach(o => o(n)) } ngOnDestroy() { if (!this._destroyed) try { this._destroyListeners.forEach(n => n()), this._views.slice().forEach(n => n.destroy()), this._onMicrotaskEmptySubscription.unsubscribe() } finally { this._destroyed = !0, this._views = [], this._bootstrapListeners = [], this._destroyListeners = [] } } onDestroy(n) { return this._destroyListeners.push(n), () => Ks(this._destroyListeners, n) } destroy() { if (this._destroyed) throw new C(406, !1); const n = this._injector; n.destroy && !n.destroyed && n.destroy() } get viewCount() { return this._views.length } warnIfDestroyed() { } } return e.\u0275fac = function (n) { return new (n || e)(S(me), S(Zt), S(Rr)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); function Ks(e, t) { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } let Zs = (() => { class e { } return e.__NG_ELEMENT_ID__ = tx, e })(); function tx(e) { return function nx(e, t, n) { if (Mo(e) && !n) { const r = tt(e.index, t); return new qo(r, r) } return 47 & e.type ? new qo(t[Ve], t) : null }(Pe(), _(), 16 == (16 & e)) } class _v { constructor() { } supports(t) { return xs(t) } create(t) { return new lx(t) } } const ax = (e, t) => t; class lx { constructor(t) { this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = t || ax } forEachItem(t) { let n; for (n = this._itHead; null !== n; n = n._next)t(n) } forEachOperation(t) { let n = this._itHead, r = this._removalsHead, o = 0, i = null; for (; n || r;) { const s = !r || n && n.currentIndex < Cv(r, o, i) ? n : r, a = Cv(s, o, i), l = s.currentIndex; if (s === r) o--, r = r._nextRemoved; else if (n = n._next, null == s.previousIndex) o++; else { i || (i = []); const u = a - o, c = l - o; if (u != c) { for (let f = 0; f < u; f++) { const h = f < i.length ? i[f] : i[f] = 0, p = h + f; c <= p && p < u && (i[f] = h + 1) } i[s.previousIndex] = c - u } } a !== l && t(s, a, l) } } forEachPreviousItem(t) { let n; for (n = this._previousItHead; null !== n; n = n._nextPrevious)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachMovedItem(t) { let n; for (n = this._movesHead; null !== n; n = n._nextMoved)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } forEachIdentityChange(t) { let n; for (n = this._identityChangesHead; null !== n; n = n._nextIdentityChange)t(n) } diff(t) { if (null == t && (t = []), !xs(t)) throw new C(900, !1); return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let o, i, s, n = this._itHead, r = !1; if (Array.isArray(t)) { this.length = t.length; for (let a = 0; a < this.length; a++)i = t[a], s = this._trackByFn(a, i), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, i, s, a)), Object.is(n.item, i) || this._addIdentityChange(n, i)) : (n = this._mismatch(n, i, s, a), r = !0), n = n._next } else o = 0, function PS(e, t) { if (Array.isArray(e)) for (let n = 0; n < e.length; n++)t(e[n]); else { const n = e[Symbol.iterator](); let r; for (; !(r = n.next()).done;)t(r.value) } }(t, a => { s = this._trackByFn(o, a), null !== n && Object.is(n.trackById, s) ? (r && (n = this._verifyReinsertion(n, a, s, o)), Object.is(n.item, a) || this._addIdentityChange(n, a)) : (n = this._mismatch(n, a, s, o), r = !0), n = n._next, o++ }), this.length = o; return this._truncate(n), this.collection = t, this.isDirty } get isDirty() { return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead } _reset() { if (this.isDirty) { let t; for (t = this._previousItHead = this._itHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._additionsHead; null !== t; t = t._nextAdded)t.previousIndex = t.currentIndex; for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = t._nextMoved)t.previousIndex = t.currentIndex; this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null } } _mismatch(t, n, r, o) { let i; return null === t ? i = this._itTail : (i = t._prev, this._remove(t)), null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._reinsertAfter(t, i, o)) : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(r, o)) ? (Object.is(t.item, n) || this._addIdentityChange(t, n), this._moveAfter(t, i, o)) : t = this._addAfter(new ux(n, r), i, o), t } _verifyReinsertion(t, n, r, o) { let i = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(r, null); return null !== i ? t = this._reinsertAfter(i, t._prev, o) : t.currentIndex != o && (t.currentIndex = o, this._addToMoves(t, o)), t } _truncate(t) { for (; null !== t;) { const n = t._next; this._addToRemovals(this._unlink(t)), t = n } null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null) } _reinsertAfter(t, n, r) { null !== this._unlinkedRecords && this._unlinkedRecords.remove(t); const o = t._prevRemoved, i = t._nextRemoved; return null === o ? this._removalsHead = i : o._nextRemoved = i, null === i ? this._removalsTail = o : i._prevRemoved = o, this._insertAfter(t, n, r), this._addToMoves(t, r), t } _moveAfter(t, n, r) { return this._unlink(t), this._insertAfter(t, n, r), this._addToMoves(t, r), t } _addAfter(t, n, r) { return this._insertAfter(t, n, r), this._additionsTail = null === this._additionsTail ? this._additionsHead = t : this._additionsTail._nextAdded = t, t } _insertAfter(t, n, r) { const o = null === n ? this._itHead : n._next; return t._next = o, t._prev = n, null === o ? this._itTail = t : o._prev = t, null === n ? this._itHead = t : n._next = t, null === this._linkedRecords && (this._linkedRecords = new Dv), this._linkedRecords.put(t), t.currentIndex = r, t } _remove(t) { return this._addToRemovals(this._unlink(t)) } _unlink(t) { null !== this._linkedRecords && this._linkedRecords.remove(t); const n = t._prev, r = t._next; return null === n ? this._itHead = r : n._next = r, null === r ? this._itTail = n : r._prev = n, t } _addToMoves(t, n) { return t.previousIndex === n || (this._movesTail = null === this._movesTail ? this._movesHead = t : this._movesTail._nextMoved = t), t } _addToRemovals(t) { return null === this._unlinkedRecords && (this._unlinkedRecords = new Dv), this._unlinkedRecords.put(t), t.currentIndex = null, t._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = t, t._prevRemoved = null) : (t._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = t), t } _addIdentityChange(t, n) { return t.item = n, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = t : this._identityChangesTail._nextIdentityChange = t, t } } class ux { constructor(t, n) { this.item = t, this.trackById = n, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null } } class cx { constructor() { this._head = null, this._tail = null } add(t) { null === this._head ? (this._head = this._tail = t, t._nextDup = null, t._prevDup = null) : (this._tail._nextDup = t, t._prevDup = this._tail, t._nextDup = null, this._tail = t) } get(t, n) { let r; for (r = this._head; null !== r; r = r._nextDup)if ((null === n || n <= r.currentIndex) && Object.is(r.trackById, t)) return r; return null } remove(t) { const n = t._prevDup, r = t._nextDup; return null === n ? this._head = r : n._nextDup = r, null === r ? this._tail = n : r._prevDup = n, null === this._head } } class Dv { constructor() { this.map = new Map } put(t) { const n = t.trackById; let r = this.map.get(n); r || (r = new cx, this.map.set(n, r)), r.add(t) } get(t, n) { const o = this.map.get(t); return o ? o.get(t, n) : null } remove(t) { const n = t.trackById; return this.map.get(n).remove(t) && this.map.delete(n), t } get isEmpty() { return 0 === this.map.size } clear() { this.map.clear() } } function Cv(e, t, n) { const r = e.previousIndex; if (null === r) return r; let o = 0; return n && r < n.length && (o = n[r]), r + t + o } class wv { constructor() { } supports(t) { return t instanceof Map || Uu(t) } create() { return new dx } } class dx { constructor() { this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null } get isDirty() { return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead } forEachItem(t) { let n; for (n = this._mapHead; null !== n; n = n._next)t(n) } forEachPreviousItem(t) { let n; for (n = this._previousMapHead; null !== n; n = n._nextPrevious)t(n) } forEachChangedItem(t) { let n; for (n = this._changesHead; null !== n; n = n._nextChanged)t(n) } forEachAddedItem(t) { let n; for (n = this._additionsHead; null !== n; n = n._nextAdded)t(n) } forEachRemovedItem(t) { let n; for (n = this._removalsHead; null !== n; n = n._nextRemoved)t(n) } diff(t) { if (t) { if (!(t instanceof Map || Uu(t))) throw new C(900, !1) } else t = new Map; return this.check(t) ? this : null } onDestroy() { } check(t) { this._reset(); let n = this._mapHead; if (this._appendAfter = null, this._forEach(t, (r, o) => { if (n && n.key === o) this._maybeAddToChanges(n, r), this._appendAfter = n, n = n._next; else { const i = this._getOrCreateRecordForKey(o, r); n = this._insertBeforeOrAppend(n, i) } }), n) { n._prev && (n._prev._next = null), this._removalsHead = n; for (let r = n; null !== r; r = r._nextRemoved)r === this._mapHead && (this._mapHead = null), this._records.delete(r.key), r._nextRemoved = r._next, r.previousValue = r.currentValue, r.currentValue = null, r._prev = null, r._next = null } return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty } _insertBeforeOrAppend(t, n) { if (t) { const r = t._prev; return n._next = t, n._prev = r, t._prev = n, r && (r._next = n), t === this._mapHead && (this._mapHead = n), this._appendAfter = t, t } return this._appendAfter ? (this._appendAfter._next = n, n._prev = this._appendAfter) : this._mapHead = n, this._appendAfter = n, null } _getOrCreateRecordForKey(t, n) { if (this._records.has(t)) { const o = this._records.get(t); this._maybeAddToChanges(o, n); const i = o._prev, s = o._next; return i && (i._next = s), s && (s._prev = i), o._next = null, o._prev = null, o } const r = new fx(t); return this._records.set(t, r), r.currentValue = n, this._addToAdditions(r), r } _reset() { if (this.isDirty) { let t; for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)t._nextPrevious = t._next; for (t = this._changesHead; null !== t; t = t._nextChanged)t.previousValue = t.currentValue; for (t = this._additionsHead; null != t; t = t._nextAdded)t.previousValue = t.currentValue; this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null } } _maybeAddToChanges(t, n) { Object.is(n, t.currentValue) || (t.previousValue = t.currentValue, t.currentValue = n, this._addToChanges(t)) } _addToAdditions(t) { null === this._additionsHead ? this._additionsHead = this._additionsTail = t : (this._additionsTail._nextAdded = t, this._additionsTail = t) } _addToChanges(t) { null === this._changesHead ? this._changesHead = this._changesTail = t : (this._changesTail._nextChanged = t, this._changesTail = t) } _forEach(t, n) { t instanceof Map ? t.forEach(n) : Object.keys(t).forEach(r => n(t[r], r)) } } class fx { constructor(t) { this.key = t, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null } } function Ev() { return new Xs([new _v]) } let Xs = (() => { class e { constructor(n) { this.factories = n } static create(n, r) { if (null != r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || Ev()), deps: [[e, new Fo, new No]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (null != r) return r; throw new C(901, !1) } } return e.\u0275prov = A({ token: e, providedIn: "root", factory: Ev }), e })(); function bv() { return new ai([new wv]) } let ai = (() => { class e { constructor(n) { this.factories = n } static create(n, r) { if (r) { const o = r.factories.slice(); n = n.concat(o) } return new e(n) } static extend(n) { return { provide: e, useFactory: r => e.create(n, r || bv()), deps: [[e, new Fo, new No]] } } find(n) { const r = this.factories.find(o => o.supports(n)); if (r) return r; throw new C(901, !1) } } return e.\u0275prov = A({ token: e, providedIn: "root", factory: bv }), e })(); const gx = lv(null, "core", []); let mx = (() => { class e { constructor(n) { } } return e.\u0275fac = function (n) { return new (n || e)(S(qs)) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({}), e })(); function Qr(e) { return "boolean" == typeof e ? e : null != e && "false" !== e } let Lc = null; function wn() { return Lc } class _x { } const Qe = new M("DocumentToken"); let Vc = (() => { class e { historyGo(n) { throw new Error("Not implemented") } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return function Dx() { return S(Mv) }() }, providedIn: "platform" }), e })(); const Cx = new M("Location Initialized"); let Mv = (() => { class e extends Vc { constructor(n) { super(), this._doc = n, this._location = window.location, this._history = window.history } getBaseHrefFromDOM() { return wn().getBaseHref(this._doc) } onPopState(n) { const r = wn().getGlobalEventTarget(this._doc, "window"); return r.addEventListener("popstate", n, !1), () => r.removeEventListener("popstate", n) } onHashChange(n) { const r = wn().getGlobalEventTarget(this._doc, "window"); return r.addEventListener("hashchange", n, !1), () => r.removeEventListener("hashchange", n) } get href() { return this._location.href } get protocol() { return this._location.protocol } get hostname() { return this._location.hostname } get port() { return this._location.port } get pathname() { return this._location.pathname } get search() { return this._location.search } get hash() { return this._location.hash } set pathname(n) { this._location.pathname = n } pushState(n, r, o) { Sv() ? this._history.pushState(n, r, o) : this._location.hash = o } replaceState(n, r, o) { Sv() ? this._history.replaceState(n, r, o) : this._location.hash = o } forward() { this._history.forward() } back() { this._history.back() } historyGo(n = 0) { this._history.go(n) } getState() { return this._history.state } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe)) }, e.\u0275prov = A({ token: e, factory: function () { return function wx() { return new Mv(S(Qe)) }() }, providedIn: "platform" }), e })(); function Sv() { return !!window.history.pushState } function jc(e, t) { if (0 == e.length) return t; if (0 == t.length) return e; let n = 0; return e.endsWith("/") && n++, t.startsWith("/") && n++, 2 == n ? e + t.substring(1) : 1 == n ? e + t : e + "/" + t } function Iv(e) { const t = e.match(/#|\?|$/), n = t && t.index || e.length; return e.slice(0, n - ("/" === e[n - 1] ? 1 : 0)) + e.slice(n) } function En(e) { return e && "?" !== e[0] ? "?" + e : e } let or = (() => { class e { historyGo(n) { throw new Error("Not implemented") } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return $(Tv) }, providedIn: "root" }), e })(); const Av = new M("appBaseHref"); let Tv = (() => { class e extends or { constructor(n, r) { super(), this._platformLocation = n, this._removeListenerFns = [], this._baseHref = r ?? this._platformLocation.getBaseHrefFromDOM() ?? $(Qe).location?.origin ?? "" } ngOnDestroy() { for (; this._removeListenerFns.length;)this._removeListenerFns.pop()() } onPopState(n) { this._removeListenerFns.push(this._platformLocation.onPopState(n), this._platformLocation.onHashChange(n)) } getBaseHref() { return this._baseHref } prepareExternalUrl(n) { return jc(this._baseHref, n) } path(n = !1) { const r = this._platformLocation.pathname + En(this._platformLocation.search), o = this._platformLocation.hash; return o && n ? `${r}${o}` : r } pushState(n, r, o, i) { const s = this.prepareExternalUrl(o + En(i)); this._platformLocation.pushState(n, r, s) } replaceState(n, r, o, i) { const s = this.prepareExternalUrl(o + En(i)); this._platformLocation.replaceState(n, r, s) } forward() { this._platformLocation.forward() } back() { this._platformLocation.back() } getState() { return this._platformLocation.getState() } historyGo(n = 0) { this._platformLocation.historyGo?.(n) } } return e.\u0275fac = function (n) { return new (n || e)(S(Vc), S(Av, 8)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(), Ex = (() => { class e extends or { constructor(n, r) { super(), this._platformLocation = n, this._baseHref = "", this._removeListenerFns = [], null != r && (this._baseHref = r) } ngOnDestroy() { for (; this._removeListenerFns.length;)this._removeListenerFns.pop()() } onPopState(n) { this._removeListenerFns.push(this._platformLocation.onPopState(n), this._platformLocation.onHashChange(n)) } getBaseHref() { return this._baseHref } path(n = !1) { let r = this._platformLocation.hash; return null == r && (r = "#"), r.length > 0 ? r.substring(1) : r } prepareExternalUrl(n) { const r = jc(this._baseHref, n); return r.length > 0 ? "#" + r : r } pushState(n, r, o, i) { let s = this.prepareExternalUrl(o + En(i)); 0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.pushState(n, r, s) } replaceState(n, r, o, i) { let s = this.prepareExternalUrl(o + En(i)); 0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.replaceState(n, r, s) } forward() { this._platformLocation.forward() } back() { this._platformLocation.back() } getState() { return this._platformLocation.getState() } historyGo(n = 0) { this._platformLocation.historyGo?.(n) } } return e.\u0275fac = function (n) { return new (n || e)(S(Vc), S(Av, 8)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(), Bc = (() => { class e { constructor(n) { this._subject = new he, this._urlChangeListeners = [], this._urlChangeSubscription = null, this._locationStrategy = n; const r = this._locationStrategy.getBaseHref(); this._basePath = function Sx(e) { if (new RegExp("^(https?:)?//").test(e)) { const [, n] = e.split(/\/\/[^\/]+/); return n } return e }(Iv(xv(r))), this._locationStrategy.onPopState(o => { this._subject.emit({ url: this.path(!0), pop: !0, state: o.state, type: o.type }) }) } ngOnDestroy() { this._urlChangeSubscription?.unsubscribe(), this._urlChangeListeners = [] } path(n = !1) { return this.normalize(this._locationStrategy.path(n)) } getState() { return this._locationStrategy.getState() } isCurrentPathEqualTo(n, r = "") { return this.path() == this.normalize(n + En(r)) } normalize(n) { return e.stripTrailingSlash(function Mx(e, t) { if (!e || !t.startsWith(e)) return t; const n = t.substring(e.length); return "" === n || ["/", ";", "?", "#"].includes(n[0]) ? n : t }(this._basePath, xv(n))) } prepareExternalUrl(n) { return n && "/" !== n[0] && (n = "/" + n), this._locationStrategy.prepareExternalUrl(n) } go(n, r = "", o = null) { this._locationStrategy.pushState(o, "", n, r), this._notifyUrlChangeListeners(this.prepareExternalUrl(n + En(r)), o) } replaceState(n, r = "", o = null) { this._locationStrategy.replaceState(o, "", n, r), this._notifyUrlChangeListeners(this.prepareExternalUrl(n + En(r)), o) } forward() { this._locationStrategy.forward() } back() { this._locationStrategy.back() } historyGo(n = 0) { this._locationStrategy.historyGo?.(n) } onUrlChange(n) { return this._urlChangeListeners.push(n), this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(r => { this._notifyUrlChangeListeners(r.url, r.state) })), () => { const r = this._urlChangeListeners.indexOf(n); this._urlChangeListeners.splice(r, 1), 0 === this._urlChangeListeners.length && (this._urlChangeSubscription?.unsubscribe(), this._urlChangeSubscription = null) } } _notifyUrlChangeListeners(n = "", r) { this._urlChangeListeners.forEach(o => o(n, r)) } subscribe(n, r, o) { return this._subject.subscribe({ next: n, error: r, complete: o }) } } return e.normalizeQueryParams = En, e.joinWithSlash = jc, e.stripTrailingSlash = Iv, e.\u0275fac = function (n) { return new (n || e)(S(or)) }, e.\u0275prov = A({ token: e, factory: function () { return function bx() { return new Bc(S(or)) }() }, providedIn: "root" }), e })(); function xv(e) { return e.replace(/\/index.html$/, "") } function jv(e, t) { t = encodeURIComponent(t); for (const n of e.split(";")) { const r = n.indexOf("="), [o, i] = -1 == r ? [n, ""] : [n.slice(0, r), n.slice(r + 1)]; if (o.trim() === t) return decodeURIComponent(i) } return null } const Yc = /\s+/, Bv = []; let Hv = (() => { class e { constructor(n, r, o, i) { this._iterableDiffers = n, this._keyValueDiffers = r, this._ngEl = o, this._renderer = i, this.initialClasses = Bv, this.stateMap = new Map } set klass(n) { this.initialClasses = null != n ? n.trim().split(Yc) : Bv } set ngClass(n) { this.rawClass = "string" == typeof n ? n.trim().split(Yc) : n } ngDoCheck() { for (const r of this.initialClasses) this._updateState(r, !0); const n = this.rawClass; if (Array.isArray(n) || n instanceof Set) for (const r of n) this._updateState(r, !0); else if (null != n) for (const r of Object.keys(n)) this._updateState(r, Boolean(n[r])); this._applyStateDiff() } _updateState(n, r) { const o = this.stateMap.get(n); void 0 !== o ? (o.enabled !== r && (o.changed = !0, o.enabled = r), o.touched = !0) : this.stateMap.set(n, { enabled: r, changed: !0, touched: !0 }) } _applyStateDiff() { for (const n of this.stateMap) { const r = n[0], o = n[1]; o.changed ? (this._toggleClass(r, o.enabled), o.changed = !1) : o.touched || (o.enabled && this._toggleClass(r, !1), this.stateMap.delete(r)), o.touched = !1 } } _toggleClass(n, r) { (n = n.trim()).length > 0 && n.split(Yc).forEach(o => { r ? this._renderer.addClass(this._ngEl.nativeElement, o) : this._renderer.removeClass(this._ngEl.nativeElement, o) }) } } return e.\u0275fac = function (n) { return new (n || e)(D(Xs), D(ai), D(dt), D(mn)) }, e.\u0275dir = N({ type: e, selectors: [["", "ngClass", ""]], inputs: { klass: ["class", "klass"], ngClass: "ngClass" }, standalone: !0 }), e })(); class cR { constructor(t, n, r, o) { this.$implicit = t, this.ngForOf = n, this.index = r, this.count = o } get first() { return 0 === this.index } get last() { return this.index === this.count - 1 } get even() { return this.index % 2 == 0 } get odd() { return !this.even } } let zv = (() => { class e { set ngForOf(n) { this._ngForOf = n, this._ngForOfDirty = !0 } set ngForTrackBy(n) { this._trackByFn = n } get ngForTrackBy() { return this._trackByFn } constructor(n, r, o) { this._viewContainer = n, this._template = r, this._differs = o, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null } set ngForTemplate(n) { n && (this._template = n) } ngDoCheck() { if (this._ngForOfDirty) { this._ngForOfDirty = !1; const n = this._ngForOf; !this._differ && n && (this._differ = this._differs.find(n).create(this.ngForTrackBy)) } if (this._differ) { const n = this._differ.diff(this._ngForOf); n && this._applyChanges(n) } } _applyChanges(n) { const r = this._viewContainer; n.forEachOperation((o, i, s) => { if (null == o.previousIndex) r.createEmbeddedView(this._template, new cR(o.item, this._ngForOf, -1, -1), null === s ? void 0 : s); else if (null == s) r.remove(null === i ? void 0 : i); else if (null !== i) { const a = r.get(i); r.move(a, s), Gv(a, o) } }); for (let o = 0, i = r.length; o < i; o++) { const a = r.get(o).context; a.index = o, a.count = i, a.ngForOf = this._ngForOf } n.forEachIdentityChange(o => { Gv(r.get(o.currentIndex), o) }) } static ngTemplateContextGuard(n, r) { return !0 } } return e.\u0275fac = function (n) { return new (n || e)(D(jt), D(_n), D(Xs)) }, e.\u0275dir = N({ type: e, selectors: [["", "ngFor", "", "ngForOf", ""]], inputs: { ngForOf: "ngForOf", ngForTrackBy: "ngForTrackBy", ngForTemplate: "ngForTemplate" }, standalone: !0 }), e })(); function Gv(e, t) { e.context.$implicit = t.item } let Wv = (() => { class e { constructor(n, r) { this._viewContainer = n, this._context = new fR, this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = r } set ngIf(n) { this._context.$implicit = this._context.ngIf = n, this._updateView() } set ngIfThen(n) { qv("ngIfThen", n), this._thenTemplateRef = n, this._thenViewRef = null, this._updateView() } set ngIfElse(n) { qv("ngIfElse", n), this._elseTemplateRef = n, this._elseViewRef = null, this._updateView() } _updateView() { this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context))) } static ngTemplateContextGuard(n, r) { return !0 } } return e.\u0275fac = function (n) { return new (n || e)(D(jt), D(_n)) }, e.\u0275dir = N({ type: e, selectors: [["", "ngIf", ""]], inputs: { ngIf: "ngIf", ngIfThen: "ngIfThen", ngIfElse: "ngIfElse" }, standalone: !0 }), e })(); class fR { constructor() { this.$implicit = null, this.ngIf = null } } function qv(e, t) { if (t && !t.createEmbeddedView) throw new Error(`${e} must be a TemplateRef, but received '${ne(t)}'.`) } let LR = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({}), e })(); let HR = (() => { class e { } return e.\u0275prov = A({ token: e, providedIn: "root", factory: () => new $R(S(Qe), window) }), e })(); class $R { constructor(t, n) { this.document = t, this.window = n, this.offset = () => [0, 0] } setOffset(t) { this.offset = Array.isArray(t) ? () => t : t } getScrollPosition() { return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0] } scrollToPosition(t) { this.supportsScrolling() && this.window.scrollTo(t[0], t[1]) } scrollToAnchor(t) { if (!this.supportsScrolling()) return; const n = function UR(e, t) { const n = e.getElementById(t) || e.getElementsByName(t)[0]; if (n) return n; if ("function" == typeof e.createTreeWalker && e.body && (e.body.createShadowRoot || e.body.attachShadow)) { const r = e.createTreeWalker(e.body, NodeFilter.SHOW_ELEMENT); let o = r.currentNode; for (; o;) { const i = o.shadowRoot; if (i) { const s = i.getElementById(t) || i.querySelector(`[name="${t}"]`); if (s) return s } o = r.nextNode() } } return null }(this.document, t); n && (this.scrollToElement(n), n.focus()) } setHistoryScrollRestoration(t) { if (this.supportScrollRestoration()) { const n = this.window.history; n && n.scrollRestoration && (n.scrollRestoration = t) } } scrollToElement(t) { const n = t.getBoundingClientRect(), r = n.left + this.window.pageXOffset, o = n.top + this.window.pageYOffset, i = this.offset(); this.window.scrollTo(r - i[0], o - i[1]) } supportScrollRestoration() { try { if (!this.supportsScrolling()) return !1; const t = Qv(this.window.history) || Qv(Object.getPrototypeOf(this.window.history)); return !(!t || !t.writable && !t.set) } catch { return !1 } } supportsScrolling() { try { return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window } catch { return !1 } } } function Qv(e) { return Object.getOwnPropertyDescriptor(e, "scrollRestoration") } class Xv { } class mO extends _x { constructor() { super(...arguments), this.supportsDOMEvents = !0 } } class rd extends mO { static makeCurrent() { !function vx(e) { Lc || (Lc = e) }(new rd) } onAndCancel(t, n, r) { return t.addEventListener(n, r, !1), () => { t.removeEventListener(n, r, !1) } } dispatchEvent(t, n) { t.dispatchEvent(n) } remove(t) { t.parentNode && t.parentNode.removeChild(t) } createElement(t, n) { return (n = n || this.getDefaultDocument()).createElement(t) } createHtmlDocument() { return document.implementation.createHTMLDocument("fakeTitle") } getDefaultDocument() { return document } isElementNode(t) { return t.nodeType === Node.ELEMENT_NODE } isShadowRoot(t) { return t instanceof DocumentFragment } getGlobalEventTarget(t, n) { return "window" === n ? window : "document" === n ? t : "body" === n ? t.body : null } getBaseHref(t) { const n = function yO() { return di = di || document.querySelector("base"), di ? di.getAttribute("href") : null }(); return null == n ? null : function vO(e) { ca = ca || document.createElement("a"), ca.setAttribute("href", e); const t = ca.pathname; return "/" === t.charAt(0) ? t : `/${t}` }(n) } resetBaseElement() { di = null } getUserAgent() { return window.navigator.userAgent } getCookie(t) { return jv(document.cookie, t) } } let ca, di = null; const r_ = new M("TRANSITION_ID"), DO = [{ provide: zs, useFactory: function _O(e, t, n) { return () => { n.get(Gs).donePromise.then(() => { const r = wn(), o = t.querySelectorAll(`style[ng-transition="${e}"]`); for (let i = 0; i < o.length; i++)r.remove(o[i]) }) } }, deps: [r_, Qe, Yt], multi: !0 }]; let wO = (() => { class e { build() { return new XMLHttpRequest } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const da = new M("EventManagerPlugins"); let fa = (() => { class e { constructor(n, r) { this._zone = r, this._eventNameToPlugin = new Map, n.forEach(o => { o.manager = this }), this._plugins = n.slice().reverse() } addEventListener(n, r, o) { return this._findPluginFor(r).addEventListener(n, r, o) } addGlobalEventListener(n, r, o) { return this._findPluginFor(r).addGlobalEventListener(n, r, o) } getZone() { return this._zone } _findPluginFor(n) { const r = this._eventNameToPlugin.get(n); if (r) return r; const o = this._plugins; for (let i = 0; i < o.length; i++) { const s = o[i]; if (s.supports(n)) return this._eventNameToPlugin.set(n, s), s } throw new Error(`No event manager plugin found for event ${n}`) } } return e.\u0275fac = function (n) { return new (n || e)(S(da), S(me)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); class o_ { constructor(t) { this._doc = t } addGlobalEventListener(t, n, r) { const o = wn().getGlobalEventTarget(this._doc, t); if (!o) throw new Error(`Unsupported event target ${o} for event ${n}`); return this.addEventListener(o, n, r) } } let i_ = (() => { class e { constructor() { this.usageCount = new Map } addStyles(n) { for (const r of n) 1 === this.changeUsageCount(r, 1) && this.onStyleAdded(r) } removeStyles(n) { for (const r of n) 0 === this.changeUsageCount(r, -1) && this.onStyleRemoved(r) } onStyleRemoved(n) { } onStyleAdded(n) { } getAllStyles() { return this.usageCount.keys() } changeUsageCount(n, r) { const o = this.usageCount; let i = o.get(n) ?? 0; return i += r, i > 0 ? o.set(n, i) : o.delete(n), i } ngOnDestroy() { for (const n of this.getAllStyles()) this.onStyleRemoved(n); this.usageCount.clear() } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(), fi = (() => { class e extends i_ { constructor(n) { super(), this.doc = n, this.styleRef = new Map, this.hostNodes = new Set, this.resetHostNodes() } onStyleAdded(n) { for (const r of this.hostNodes) this.addStyleToHost(r, n) } onStyleRemoved(n) { const r = this.styleRef; r.get(n)?.forEach(i => i.remove()), r.delete(n) } ngOnDestroy() { super.ngOnDestroy(), this.styleRef.clear(), this.resetHostNodes() } addHost(n) { this.hostNodes.add(n); for (const r of this.getAllStyles()) this.addStyleToHost(n, r) } removeHost(n) { this.hostNodes.delete(n) } addStyleToHost(n, r) { const o = this.doc.createElement("style"); o.textContent = r, n.appendChild(o); const i = this.styleRef.get(r); i ? i.push(o) : this.styleRef.set(r, [o]) } resetHostNodes() { const n = this.hostNodes; n.clear(), n.add(this.doc.head) } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const od = { svg: "http://www.w3.org/2000/svg", xhtml: "http://www.w3.org/1999/xhtml", xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace", xmlns: "http://www.w3.org/2000/xmlns/", math: "http://www.w3.org/1998/MathML/" }, id = /%COMP%/g, l_ = new M("RemoveStylesOnCompDestory", { providedIn: "root", factory: () => !1 }); function u_(e, t) { return t.flat(100).map(n => n.replace(id, e)) } function c_(e) { return t => { if ("__ngUnwrap__" === t) return e; !1 === e(t) && (t.preventDefault(), t.returnValue = !1) } } let sd = (() => { class e { constructor(n, r, o, i) { this.eventManager = n, this.sharedStylesHost = r, this.appId = o, this.removeStylesOnCompDestory = i, this.rendererByCompId = new Map, this.defaultRenderer = new ad(n) } createRenderer(n, r) { if (!n || !r) return this.defaultRenderer; const o = this.getOrCreateRenderer(n, r); return o instanceof h_ ? o.applyToHost(n) : o instanceof ld && o.applyStyles(), o } getOrCreateRenderer(n, r) { const o = this.rendererByCompId; let i = o.get(r.id); if (!i) { const s = this.eventManager, a = this.sharedStylesHost, l = this.removeStylesOnCompDestory; switch (r.encapsulation) { case Gt.Emulated: i = new h_(s, a, r, this.appId, l); break; case Gt.ShadowDom: return new TO(s, a, n, r); default: i = new ld(s, a, r, l) }i.onDestroy = () => o.delete(r.id), o.set(r.id, i) } return i } ngOnDestroy() { this.rendererByCompId.clear() } begin() { } end() { } } return e.\u0275fac = function (n) { return new (n || e)(S(fa), S(fi), S(si), S(l_)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); class ad { constructor(t) { this.eventManager = t, this.data = Object.create(null), this.destroyNode = null } destroy() { } createElement(t, n) { return n ? document.createElementNS(od[n] || n, t) : document.createElement(t) } createComment(t) { return document.createComment(t) } createText(t) { return document.createTextNode(t) } appendChild(t, n) { (f_(t) ? t.content : t).appendChild(n) } insertBefore(t, n, r) { t && (f_(t) ? t.content : t).insertBefore(n, r) } removeChild(t, n) { t && t.removeChild(n) } selectRootElement(t, n) { let r = "string" == typeof t ? document.querySelector(t) : t; if (!r) throw new Error(`The selector "${t}" did not match any elements`); return n || (r.textContent = ""), r } parentNode(t) { return t.parentNode } nextSibling(t) { return t.nextSibling } setAttribute(t, n, r, o) { if (o) { n = o + ":" + n; const i = od[o]; i ? t.setAttributeNS(i, n, r) : t.setAttribute(n, r) } else t.setAttribute(n, r) } removeAttribute(t, n, r) { if (r) { const o = od[r]; o ? t.removeAttributeNS(o, n) : t.removeAttribute(`${r}:${n}`) } else t.removeAttribute(n) } addClass(t, n) { t.classList.add(n) } removeClass(t, n) { t.classList.remove(n) } setStyle(t, n, r, o) { o & (nt.DashCase | nt.Important) ? t.style.setProperty(n, r, o & nt.Important ? "important" : "") : t.style[n] = r } removeStyle(t, n, r) { r & nt.DashCase ? t.style.removeProperty(n) : t.style[n] = "" } setProperty(t, n, r) { t[n] = r } setValue(t, n) { t.nodeValue = n } listen(t, n, r) { return "string" == typeof t ? this.eventManager.addGlobalEventListener(t, n, c_(r)) : this.eventManager.addEventListener(t, n, c_(r)) } } function f_(e) { return "TEMPLATE" === e.tagName && void 0 !== e.content } class TO extends ad { constructor(t, n, r, o) { super(t), this.sharedStylesHost = n, this.hostEl = r, this.shadowRoot = r.attachShadow({ mode: "open" }), this.sharedStylesHost.addHost(this.shadowRoot); const i = u_(o.id, o.styles); for (const s of i) { const a = document.createElement("style"); a.textContent = s, this.shadowRoot.appendChild(a) } } nodeOrShadowRoot(t) { return t === this.hostEl ? this.shadowRoot : t } appendChild(t, n) { return super.appendChild(this.nodeOrShadowRoot(t), n) } insertBefore(t, n, r) { return super.insertBefore(this.nodeOrShadowRoot(t), n, r) } removeChild(t, n) { return super.removeChild(this.nodeOrShadowRoot(t), n) } parentNode(t) { return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t))) } destroy() { this.sharedStylesHost.removeHost(this.shadowRoot) } } class ld extends ad { constructor(t, n, r, o, i = r.id) { super(t), this.sharedStylesHost = n, this.removeStylesOnCompDestory = o, this.rendererUsageCount = 0, this.styles = u_(i, r.styles) } applyStyles() { this.sharedStylesHost.addStyles(this.styles), this.rendererUsageCount++ } destroy() { this.removeStylesOnCompDestory && (this.sharedStylesHost.removeStyles(this.styles), this.rendererUsageCount--, 0 === this.rendererUsageCount && this.onDestroy?.()) } } class h_ extends ld { constructor(t, n, r, o, i) { const s = o + "-" + r.id; super(t, n, r, i, s), this.contentAttr = function SO(e) { return "_ngcontent-%COMP%".replace(id, e) }(s), this.hostAttr = function IO(e) { return "_nghost-%COMP%".replace(id, e) }(s) } applyToHost(t) { this.applyStyles(), this.setAttribute(t, this.hostAttr, "") } createElement(t, n) { const r = super.createElement(t, n); return super.setAttribute(r, this.contentAttr, ""), r } } let xO = (() => { class e extends o_ { constructor(n) { super(n) } supports(n) { return !0 } addEventListener(n, r, o) { return n.addEventListener(r, o, !1), () => this.removeEventListener(n, r, o) } removeEventListener(n, r, o) { return n.removeEventListener(r, o) } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const p_ = ["alt", "control", "meta", "shift"], RO = { "\b": "Backspace", "\t": "Tab", "\x7f": "Delete", "\x1b": "Escape", Del: "Delete", Esc: "Escape", Left: "ArrowLeft", Right: "ArrowRight", Up: "ArrowUp", Down: "ArrowDown", Menu: "ContextMenu", Scroll: "ScrollLock", Win: "OS" }, OO = { alt: e => e.altKey, control: e => e.ctrlKey, meta: e => e.metaKey, shift: e => e.shiftKey }; let PO = (() => { class e extends o_ { constructor(n) { super(n) } supports(n) { return null != e.parseEventName(n) } addEventListener(n, r, o) { const i = e.parseEventName(r), s = e.eventCallback(i.fullKey, o, this.manager.getZone()); return this.manager.getZone().runOutsideAngular(() => wn().onAndCancel(n, i.domEventName, s)) } static parseEventName(n) { const r = n.toLowerCase().split("."), o = r.shift(); if (0 === r.length || "keydown" !== o && "keyup" !== o) return null; const i = e._normalizeKey(r.pop()); let s = "", a = r.indexOf("code"); if (a > -1 && (r.splice(a, 1), s = "code."), p_.forEach(u => { const c = r.indexOf(u); c > -1 && (r.splice(c, 1), s += u + ".") }), s += i, 0 != r.length || 0 === i.length) return null; const l = {}; return l.domEventName = o, l.fullKey = s, l } static matchEventFullKeyCode(n, r) { let o = RO[n.key] || n.key, i = ""; return r.indexOf("code.") > -1 && (o = n.code, i = "code."), !(null == o || !o) && (o = o.toLowerCase(), " " === o ? o = "space" : "." === o && (o = "dot"), p_.forEach(s => { s !== o && (0, OO[s])(n) && (i += s + ".") }), i += o, i === r) } static eventCallback(n, r, o) { return i => { e.matchEventFullKeyCode(i, n) && o.runGuarded(() => r(i)) } } static _normalizeKey(n) { return "esc" === n ? "escape" : n } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const LO = lv(gx, "browser", [{ provide: bc, useValue: "browser" }, { provide: Qy, useValue: function NO() { rd.makeCurrent() }, multi: !0 }, { provide: Qe, useFactory: function kO() { return function h0(e) { uu = e }(document), document }, deps: [] }]), y_ = new M(""), v_ = [{ provide: Ws, useClass: class CO { addToWindow(t) { se.getAngularTestability = (r, o = !0) => { const i = t.findTestabilityInTree(r, o); if (null == i) throw new Error("Could not find testability for element."); return i }, se.getAllAngularTestabilities = () => t.getAllTestabilities(), se.getAllAngularRootElements = () => t.getAllRootElements(), se.frameworkStabilizers || (se.frameworkStabilizers = []), se.frameworkStabilizers.push(r => { const o = se.getAllAngularTestabilities(); let i = o.length, s = !1; const a = function (l) { s = s || l, i--, 0 == i && r(s) }; o.forEach(function (l) { l.whenStable(a) }) }) } findTestabilityInTree(t, n, r) { return null == n ? null : t.getTestability(n) ?? (r ? wn().isShadowRoot(n) ? this.findTestabilityInTree(t, n.host, !0) : this.findTestabilityInTree(t, n.parentElement, !0) : null) } }, deps: [] }, { provide: rv, useClass: Ac, deps: [me, Tc, Ws] }, { provide: Ac, useClass: Ac, deps: [me, Tc, Ws] }], __ = [{ provide: _u, useValue: "root" }, { provide: Rr, useFactory: function FO() { return new Rr }, deps: [] }, { provide: da, useClass: xO, multi: !0, deps: [Qe, me, bc] }, { provide: da, useClass: PO, multi: !0, deps: [Qe] }, { provide: sd, useClass: sd, deps: [fa, fi, si, l_] }, { provide: Gp, useExisting: sd }, { provide: i_, useExisting: fi }, { provide: fi, useClass: fi, deps: [Qe] }, { provide: fa, useClass: fa, deps: [da, me] }, { provide: Xv, useClass: wO, deps: [] }, []]; let VO = (() => { class e { constructor(n) { } static withServerTransition(n) { return { ngModule: e, providers: [{ provide: si, useValue: n.appId }, { provide: r_, useExisting: si }, DO] } } } return e.\u0275fac = function (n) { return new (n || e)(S(y_, 12)) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ providers: [...__, ...v_], imports: [LR, mx] }), e })(), D_ = (() => { class e { constructor(n) { this._doc = n } getTitle() { return this._doc.title } setTitle(n) { this._doc.title = n || "" } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe)) }, e.\u0275prov = A({ token: e, factory: function (n) { let r = null; return r = n ? new n : function BO() { return new D_(S(Qe)) }(), r }, providedIn: "root" }), e })(); function T(...e) { return Ce(e, mo(e)) } typeof window < "u" && window; class Ut extends an { constructor(t) { super(), this._value = t } get value() { return this.getValue() } _subscribe(t) { const n = super._subscribe(t); return !n.closed && t.next(this._value), n } getValue() { const { hasError: t, thrownError: n, _value: r } = this; if (t) throw n; return this._throwIfClosed(), r } next(t) { super.next(this._value = t) } } const ha = ho(e => function () { e(this), this.name = "EmptyError", this.message = "no elements in sequence" }), { isArray: WO } = Array, { getPrototypeOf: qO, prototype: KO, keys: ZO } = Object; function E_(e) { if (1 === e.length) { const t = e[0]; if (WO(t)) return { args: t, keys: null }; if (function YO(e) { return e && "object" == typeof e && qO(e) === KO }(t)) { const n = ZO(t); return { args: n.map(r => t[r]), keys: n } } } return { args: e, keys: null } } const { isArray: QO } = Array; function b_(e) { return H(t => function XO(e, t) { return QO(t) ? e(...t) : e(t) }(e, t)) } function M_(e, t) { return e.reduce((n, r, o) => (n[r] = t[o], n), {}) } function S_(...e) { const t = mo(e), n = Lf(e), { args: r, keys: o } = E_(e); if (0 === r.length) return Ce([], t); const i = new pe(function JO(e, t, n = Wn) { return r => { I_(t, () => { const { length: o } = e, i = new Array(o); let s = o, a = o; for (let l = 0; l < o; l++)I_(t, () => { const u = Ce(e[l], t); let c = !1; u.subscribe(Se(r, d => { i[l] = d, c || (c = !0, a--), a || r.next(n(i.slice())) }, () => { --s || r.complete() })) }, r) }, r) } }(r, t, o ? s => M_(o, s) : Wn)); return n ? i.pipe(b_(n)) : i } function I_(e, t, n) { e ? ln(n, e, t) : t() } function dd(...e) { return function eP() { return cr(1) }()(Ce(e, mo(e))) } function A_(e) { return new pe(t => { yt(e()).subscribe(t) }) } function hi(e, t) { const n = te(e) ? e : () => e, r = o => o.error(n()); return new pe(t ? o => t.schedule(r, 0, o) : r) } function fd() { return xe((e, t) => { let n = null; e._refCount++; const r = Se(t, void 0, void 0, void 0, () => { if (!e || e._refCount <= 0 || 0 < --e._refCount) return void (n = null); const o = e._connection, i = n; n = null, o && (!i || o === i) && o.unsubscribe(), t.unsubscribe() }); e.subscribe(r), r.closed || (n = e.connect()) }) } class T_ extends pe { constructor(t, n) { super(), this.source = t, this.subjectFactory = n, this._subject = null, this._refCount = 0, this._connection = null, wf(t) && (this.lift = t.lift) } _subscribe(t) { return this.getSubject().subscribe(t) } getSubject() { const t = this._subject; return (!t || t.isStopped) && (this._subject = this.subjectFactory()), this._subject } _teardown() { this._refCount = 0; const { _connection: t } = this; this._subject = this._connection = null, t?.unsubscribe() } connect() { let t = this._connection; if (!t) { t = this._connection = new mt; const n = this.getSubject(); t.add(this.source.subscribe(Se(n, void 0, () => { this._teardown(), n.complete() }, r => { this._teardown(), n.error(r) }, () => this._teardown()))), t.closed && (this._connection = null, t = mt.EMPTY) } return t } refCount() { return fd()(this) } } function tn(e, t) { return xe((n, r) => { let o = null, i = 0, s = !1; const a = () => s && !o && r.complete(); n.subscribe(Se(r, l => { o?.unsubscribe(); let u = 0; const c = i++; yt(e(l, c)).subscribe(o = Se(r, d => r.next(t ? t(l, d, c, u++) : d), () => { o = null, a() })) }, () => { s = !0, a() })) }) } function Xr(e) { return e <= 0 ? () => xt : xe((t, n) => { let r = 0; t.subscribe(Se(n, o => { ++r <= e && (n.next(o), e <= r && n.complete()) })) }) } function Mn(e, t) { return xe((n, r) => { let o = 0; n.subscribe(Se(r, i => e.call(t, i, o++) && r.next(i))) }) } function pa(e) { return xe((t, n) => { let r = !1; t.subscribe(Se(n, o => { r = !0, n.next(o) }, () => { r || n.next(e), n.complete() })) }) } function x_(e = nP) { return xe((t, n) => { let r = !1; t.subscribe(Se(n, o => { r = !0, n.next(o) }, () => r ? n.complete() : n.error(e()))) }) } function nP() { return new ha } function Fn(e, t) { const n = arguments.length >= 2; return r => r.pipe(e ? Mn((o, i) => e(o, i, r)) : Wn, Xr(1), n ? pa(t) : x_(() => new ha)) } function kn(e, t) { return te(t) ? Re(e, t, 1) : Re(e, 1) } function $e(e, t, n) { const r = te(e) || t || n ? { next: e, error: t, complete: n } : e; return r ? xe((o, i) => { var s; null === (s = r.subscribe) || void 0 === s || s.call(r); let a = !0; o.subscribe(Se(i, l => { var u; null === (u = r.next) || void 0 === u || u.call(r, l), i.next(l) }, () => { var l; a = !1, null === (l = r.complete) || void 0 === l || l.call(r), i.complete() }, l => { var u; a = !1, null === (u = r.error) || void 0 === u || u.call(r, l), i.error(l) }, () => { var l, u; a && (null === (l = r.unsubscribe) || void 0 === l || l.call(r)), null === (u = r.finalize) || void 0 === u || u.call(r) })) }) : Wn } function Sn(e) { return xe((t, n) => { let i, r = null, o = !1; r = t.subscribe(Se(n, void 0, void 0, s => { i = yt(e(s, Sn(e)(t))), r ? (r.unsubscribe(), r = null, i.subscribe(n)) : o = !0 })), o && (r.unsubscribe(), r = null, i.subscribe(n)) }) } function R_(e, t) { return xe(function rP(e, t, n, r, o) { return (i, s) => { let a = n, l = t, u = 0; i.subscribe(Se(s, c => { const d = u++; l = a ? e(l, c, d) : (a = !0, c), r && s.next(l) }, o && (() => { a && s.next(l), s.complete() }))) } }(e, t, arguments.length >= 2, !0)) } function hd(e) { return e <= 0 ? () => xt : xe((t, n) => { let r = []; t.subscribe(Se(n, o => { r.push(o), e < r.length && r.shift() }, () => { for (const o of r) n.next(o); n.complete() }, void 0, () => { r = null })) }) } function O_(e, t) { const n = arguments.length >= 2; return r => r.pipe(e ? Mn((o, i) => e(o, i, r)) : Wn, hd(1), n ? pa(t) : x_(() => new ha)) } function pd(e) { return xe((t, n) => { try { t.subscribe(n) } finally { n.add(e) } }) } const V = "primary", pi = Symbol("RouteTitle"); class sP { constructor(t) { this.params = t || {} } has(t) { return Object.prototype.hasOwnProperty.call(this.params, t) } get(t) { if (this.has(t)) { const n = this.params[t]; return Array.isArray(n) ? n[0] : n } return null } getAll(t) { if (this.has(t)) { const n = this.params[t]; return Array.isArray(n) ? n : [n] } return [] } get keys() { return Object.keys(this.params) } } function Jr(e) { return new sP(e) } function aP(e, t, n) { const r = n.path.split("/"); if (r.length > e.length || "full" === n.pathMatch && (t.hasChildren() || r.length < e.length)) return null; const o = {}; for (let i = 0; i < r.length; i++) { const s = r[i], a = e[i]; if (s.startsWith(":")) o[s.substring(1)] = a; else if (s !== a.path) return null } return { consumed: e.slice(0, r.length), posParams: o } } function nn(e, t) { const n = e ? Object.keys(e) : void 0, r = t ? Object.keys(t) : void 0; if (!n || !r || n.length != r.length) return !1; let o; for (let i = 0; i < n.length; i++)if (o = n[i], !P_(e[o], t[o])) return !1; return !0 } function P_(e, t) { if (Array.isArray(e) && Array.isArray(t)) { if (e.length !== t.length) return !1; const n = [...e].sort(), r = [...t].sort(); return n.every((o, i) => r[i] === o) } return e === t } function N_(e) { return Array.prototype.concat.apply([], e) } function F_(e) { return e.length > 0 ? e[e.length - 1] : null } function Fe(e, t) { for (const n in e) e.hasOwnProperty(n) && t(e[n], n) } function Ln(e) { return Ku(e) ? e : Yo(e) ? Ce(Promise.resolve(e)) : T(e) } const ga = !1, uP = { exact: function V_(e, t, n) { if (!ir(e.segments, t.segments) || !ma(e.segments, t.segments, n) || e.numberOfChildren !== t.numberOfChildren) return !1; for (const r in t.children) if (!e.children[r] || !V_(e.children[r], t.children[r], n)) return !1; return !0 }, subset: j_ }, k_ = { exact: function cP(e, t) { return nn(e, t) }, subset: function dP(e, t) { return Object.keys(t).length <= Object.keys(e).length && Object.keys(t).every(n => P_(e[n], t[n])) }, ignored: () => !0 }; function L_(e, t, n) { return uP[n.paths](e.root, t.root, n.matrixParams) && k_[n.queryParams](e.queryParams, t.queryParams) && !("exact" === n.fragment && e.fragment !== t.fragment) } function j_(e, t, n) { return B_(e, t, t.segments, n) } function B_(e, t, n, r) { if (e.segments.length > n.length) { const o = e.segments.slice(0, n.length); return !(!ir(o, n) || t.hasChildren() || !ma(o, n, r)) } if (e.segments.length === n.length) { if (!ir(e.segments, n) || !ma(e.segments, n, r)) return !1; for (const o in t.children) if (!e.children[o] || !j_(e.children[o], t.children[o], r)) return !1; return !0 } { const o = n.slice(0, e.segments.length), i = n.slice(e.segments.length); return !!(ir(e.segments, o) && ma(e.segments, o, r) && e.children[V]) && B_(e.children[V], t, i, r) } } function ma(e, t, n) { return t.every((r, o) => k_[n](e[o].parameters, r.parameters)) } class Vn { constructor(t = new z([], {}), n = {}, r = null) { this.root = t, this.queryParams = n, this.fragment = r } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = Jr(this.queryParams)), this._queryParamMap } toString() { return pP.serialize(this) } } class z { constructor(t, n) { this.segments = t, this.children = n, this.parent = null, Fe(n, (r, o) => r.parent = this) } hasChildren() { return this.numberOfChildren > 0 } get numberOfChildren() { return Object.keys(this.children).length } toString() { return ya(this) } } class gi { constructor(t, n) { this.path = t, this.parameters = n } get parameterMap() { return this._parameterMap || (this._parameterMap = Jr(this.parameters)), this._parameterMap } toString() { return U_(this) } } function ir(e, t) { return e.length === t.length && e.every((n, r) => n.path === t[r].path) } let mi = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return new gd }, providedIn: "root" }), e })(); class gd { parse(t) { const n = new EP(t); return new Vn(n.parseRootSegment(), n.parseQueryParams(), n.parseFragment()) } serialize(t) { const n = `/${yi(t.root, !0)}`, r = function yP(e) { const t = Object.keys(e).map(n => { const r = e[n]; return Array.isArray(r) ? r.map(o => `${va(n)}=${va(o)}`).join("&") : `${va(n)}=${va(r)}` }).filter(n => !!n); return t.length ? `?${t.join("&")}` : "" }(t.queryParams); return `${n}${r}${"string" == typeof t.fragment ? `#${function gP(e) { return encodeURI(e) }(t.fragment)}` : ""}` } } const pP = new gd; function ya(e) { return e.segments.map(t => U_(t)).join("/") } function yi(e, t) { if (!e.hasChildren()) return ya(e); if (t) { const n = e.children[V] ? yi(e.children[V], !1) : "", r = []; return Fe(e.children, (o, i) => { i !== V && r.push(`${i}:${yi(o, !1)}`) }), r.length > 0 ? `${n}(${r.join("//")})` : n } { const n = function hP(e, t) { let n = []; return Fe(e.children, (r, o) => { o === V && (n = n.concat(t(r, o))) }), Fe(e.children, (r, o) => { o !== V && (n = n.concat(t(r, o))) }), n }(e, (r, o) => o === V ? [yi(e.children[V], !1)] : [`${o}:${yi(r, !1)}`]); return 1 === Object.keys(e.children).length && null != e.children[V] ? `${ya(e)}/${n[0]}` : `${ya(e)}/(${n.join("//")})` } } function H_(e) { return encodeURIComponent(e).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",") } function va(e) { return H_(e).replace(/%3B/gi, ";") } function md(e) { return H_(e).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&") } function _a(e) { return decodeURIComponent(e) } function $_(e) { return _a(e.replace(/\+/g, "%20")) } function U_(e) { return `${md(e.path)}${function mP(e) { return Object.keys(e).map(t => `;${md(t)}=${md(e[t])}`).join("") }(e.parameters)}` } const vP = /^[^\/()?;=#]+/; function Da(e) { const t = e.match(vP); return t ? t[0] : "" } const _P = /^[^=?&#]+/, CP = /^[^&#]+/; class EP { constructor(t) { this.url = t, this.remaining = t } parseRootSegment() { return this.consumeOptional("/"), "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new z([], {}) : new z([], this.parseChildren()) } parseQueryParams() { const t = {}; if (this.consumeOptional("?")) do { this.parseQueryParam(t) } while (this.consumeOptional("&")); return t } parseFragment() { return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null } parseChildren() { if ("" === this.remaining) return {}; this.consumeOptional("/"); const t = []; for (this.peekStartsWith("(") || t.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/(");)this.capture("/"), t.push(this.parseSegment()); let n = {}; this.peekStartsWith("/(") && (this.capture("/"), n = this.parseParens(!0)); let r = {}; return this.peekStartsWith("(") && (r = this.parseParens(!1)), (t.length > 0 || Object.keys(n).length > 0) && (r[V] = new z(t, n)), r } parseSegment() { const t = Da(this.remaining); if ("" === t && this.peekStartsWith(";")) throw new C(4009, ga); return this.capture(t), new gi(_a(t), this.parseMatrixParams()) } parseMatrixParams() { const t = {}; for (; this.consumeOptional(";");)this.parseParam(t); return t } parseParam(t) { const n = Da(this.remaining); if (!n) return; this.capture(n); let r = ""; if (this.consumeOptional("=")) { const o = Da(this.remaining); o && (r = o, this.capture(r)) } t[_a(n)] = _a(r) } parseQueryParam(t) { const n = function DP(e) { const t = e.match(_P); return t ? t[0] : "" }(this.remaining); if (!n) return; this.capture(n); let r = ""; if (this.consumeOptional("=")) { const s = function wP(e) { const t = e.match(CP); return t ? t[0] : "" }(this.remaining); s && (r = s, this.capture(r)) } const o = $_(n), i = $_(r); if (t.hasOwnProperty(o)) { let s = t[o]; Array.isArray(s) || (s = [s], t[o] = s), s.push(i) } else t[o] = i } parseParens(t) { const n = {}; for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0;) { const r = Da(this.remaining), o = this.remaining[r.length]; if ("/" !== o && ")" !== o && ";" !== o) throw new C(4010, ga); let i; r.indexOf(":") > -1 ? (i = r.slice(0, r.indexOf(":")), this.capture(i), this.capture(":")) : t && (i = V); const s = this.parseChildren(); n[i] = 1 === Object.keys(s).length ? s[V] : new z([], s), this.consumeOptional("//") } return n } peekStartsWith(t) { return this.remaining.startsWith(t) } consumeOptional(t) { return !!this.peekStartsWith(t) && (this.remaining = this.remaining.substring(t.length), !0) } capture(t) { if (!this.consumeOptional(t)) throw new C(4011, ga) } } function yd(e) { return e.segments.length > 0 ? new z([], { [V]: e }) : e } function Ca(e) { const t = {}; for (const r of Object.keys(e.children)) { const i = Ca(e.children[r]); (i.segments.length > 0 || i.hasChildren()) && (t[r] = i) } return function bP(e) { if (1 === e.numberOfChildren && e.children[V]) { const t = e.children[V]; return new z(e.segments.concat(t.segments), t.children) } return e }(new z(e.segments, t)) } function sr(e) { return e instanceof Vn } const vd = !1; function MP(e, t, n, r, o) { if (0 === n.length) return eo(t.root, t.root, t.root, r, o); const i = function K_(e) { if ("string" == typeof e[0] && 1 === e.length && "/" === e[0]) return new q_(!0, 0, e); let t = 0, n = !1; const r = e.reduce((o, i, s) => { if ("object" == typeof i && null != i) { if (i.outlets) { const a = {}; return Fe(i.outlets, (l, u) => { a[u] = "string" == typeof l ? l.split("/") : l }), [...o, { outlets: a }] } if (i.segmentPath) return [...o, i.segmentPath] } return "string" != typeof i ? [...o, i] : 0 === s ? (i.split("/").forEach((a, l) => { 0 == l && "." === a || (0 == l && "" === a ? n = !0 : ".." === a ? t++ : "" != a && o.push(a)) }), o) : [...o, i] }, []); return new q_(n, t, r) }(n); return i.toRoot() ? eo(t.root, t.root, new z([], {}), r, o) : function s(l) { const u = function IP(e, t, n, r) { if (e.isAbsolute) return new to(t.root, !0, 0); if (-1 === r) return new to(n, n === t.root, 0); return function Z_(e, t, n) { let r = e, o = t, i = n; for (; i > o;) { if (i -= o, r = r.parent, !r) throw new C(4005, vd && "Invalid number of '../'"); o = r.segments.length } return new to(r, !1, o - i) }(n, r + (vi(e.commands[0]) ? 0 : 1), e.numberOfDoubleDots) }(i, t, e.snapshot?._urlSegment, l), c = u.processChildren ? no(u.segmentGroup, u.index, i.commands) : _d(u.segmentGroup, u.index, i.commands); return eo(t.root, u.segmentGroup, c, r, o) }(e.snapshot?._lastPathIndex) } function vi(e) { return "object" == typeof e && null != e && !e.outlets && !e.segmentPath } function _i(e) { return "object" == typeof e && null != e && e.outlets } function eo(e, t, n, r, o) { let s, i = {}; r && Fe(r, (l, u) => { i[u] = Array.isArray(l) ? l.map(c => `${c}`) : `${l}` }), s = e === t ? n : W_(e, t, n); const a = yd(Ca(s)); return new Vn(a, i, o) } function W_(e, t, n) { const r = {}; return Fe(e.children, (o, i) => { r[i] = o === t ? n : W_(o, t, n) }), new z(e.segments, r) } class q_ { constructor(t, n, r) { if (this.isAbsolute = t, this.numberOfDoubleDots = n, this.commands = r, t && r.length > 0 && vi(r[0])) throw new C(4003, vd && "Root segment cannot have matrix parameters"); const o = r.find(_i); if (o && o !== F_(r)) throw new C(4004, vd && "{outlets:{}} has to be the last command") } toRoot() { return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0] } } class to { constructor(t, n, r) { this.segmentGroup = t, this.processChildren = n, this.index = r } } function _d(e, t, n) { if (e || (e = new z([], {})), 0 === e.segments.length && e.hasChildren()) return no(e, t, n); const r = function TP(e, t, n) { let r = 0, o = t; const i = { match: !1, pathIndex: 0, commandIndex: 0 }; for (; o < e.segments.length;) { if (r >= n.length) return i; const s = e.segments[o], a = n[r]; if (_i(a)) break; const l = `${a}`, u = r < n.length - 1 ? n[r + 1] : null; if (o > 0 && void 0 === l) break; if (l && u && "object" == typeof u && void 0 === u.outlets) { if (!Q_(l, u, s)) return i; r += 2 } else { if (!Q_(l, {}, s)) return i; r++ } o++ } return { match: !0, pathIndex: o, commandIndex: r } }(e, t, n), o = n.slice(r.commandIndex); if (r.match && r.pathIndex < e.segments.length) { const i = new z(e.segments.slice(0, r.pathIndex), {}); return i.children[V] = new z(e.segments.slice(r.pathIndex), e.children), no(i, 0, o) } return r.match && 0 === o.length ? new z(e.segments, {}) : r.match && !e.hasChildren() ? Dd(e, t, n) : r.match ? no(e, 0, o) : Dd(e, t, n) } function no(e, t, n) { if (0 === n.length) return new z(e.segments, {}); { const r = function AP(e) { return _i(e[0]) ? e[0].outlets : { [V]: e } }(n), o = {}; if (!r[V] && e.children[V] && 1 === e.numberOfChildren && 0 === e.children[V].segments.length) { const i = no(e.children[V], t, n); return new z(e.segments, i.children) } return Fe(r, (i, s) => { "string" == typeof i && (i = [i]), null !== i && (o[s] = _d(e.children[s], t, i)) }), Fe(e.children, (i, s) => { void 0 === r[s] && (o[s] = i) }), new z(e.segments, o) } } function Dd(e, t, n) { const r = e.segments.slice(0, t); let o = 0; for (; o < n.length;) { const i = n[o]; if (_i(i)) { const l = xP(i.outlets); return new z(r, l) } if (0 === o && vi(n[0])) { r.push(new gi(e.segments[t].path, Y_(n[0]))), o++; continue } const s = _i(i) ? i.outlets[V] : `${i}`, a = o < n.length - 1 ? n[o + 1] : null; s && a && vi(a) ? (r.push(new gi(s, Y_(a))), o += 2) : (r.push(new gi(s, {})), o++) } return new z(r, {}) } function xP(e) { const t = {}; return Fe(e, (n, r) => { "string" == typeof n && (n = [n]), null !== n && (t[r] = Dd(new z([], {}), 0, n)) }), t } function Y_(e) { const t = {}; return Fe(e, (n, r) => t[r] = `${n}`), t } function Q_(e, t, n) { return e == n.path && nn(t, n.parameters) } const Di = "imperative"; class rn { constructor(t, n) { this.id = t, this.url = n } } class Cd extends rn { constructor(t, n, r = "imperative", o = null) { super(t, n), this.type = 0, this.navigationTrigger = r, this.restoredState = o } toString() { return `NavigationStart(id: ${this.id}, url: '${this.url}')` } } class ar extends rn { constructor(t, n, r) { super(t, n), this.urlAfterRedirects = r, this.type = 1 } toString() { return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')` } } class wa extends rn { constructor(t, n, r, o) { super(t, n), this.reason = r, this.code = o, this.type = 2 } toString() { return `NavigationCancel(id: ${this.id}, url: '${this.url}')` } } class Ea extends rn { constructor(t, n, r, o) { super(t, n), this.reason = r, this.code = o, this.type = 16 } } class wd extends rn { constructor(t, n, r, o) { super(t, n), this.error = r, this.target = o, this.type = 3 } toString() { return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})` } } class RP extends rn { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 4 } toString() { return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class OP extends rn { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 7 } toString() { return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class PP extends rn { constructor(t, n, r, o, i) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.shouldActivate = i, this.type = 8 } toString() { return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})` } } class NP extends rn { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 5 } toString() { return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class FP extends rn { constructor(t, n, r, o) { super(t, n), this.urlAfterRedirects = r, this.state = o, this.type = 6 } toString() { return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})` } } class kP { constructor(t) { this.route = t, this.type = 9 } toString() { return `RouteConfigLoadStart(path: ${this.route.path})` } } class LP { constructor(t) { this.route = t, this.type = 10 } toString() { return `RouteConfigLoadEnd(path: ${this.route.path})` } } class VP { constructor(t) { this.snapshot = t, this.type = 11 } toString() { return `ChildActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class jP { constructor(t) { this.snapshot = t, this.type = 12 } toString() { return `ChildActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class BP { constructor(t) { this.snapshot = t, this.type = 13 } toString() { return `ActivationStart(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class HP { constructor(t) { this.snapshot = t, this.type = 14 } toString() { return `ActivationEnd(path: '${this.snapshot.routeConfig && this.snapshot.routeConfig.path || ""}')` } } class X_ { constructor(t, n, r) { this.routerEvent = t, this.position = n, this.anchor = r, this.type = 15 } toString() { return `Scroll(anchor: '${this.anchor}', position: '${this.position ? `${this.position[0]}, ${this.position[1]}` : null}')` } } let zP = (() => { class e { createUrlTree(n, r, o, i, s, a) { return MP(n || r.root, o, i, s, a) } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(), WP = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function (t) { return zP.\u0275fac(t) }, providedIn: "root" }), e })(); class J_ { constructor(t) { this._root = t } get root() { return this._root.value } parent(t) { const n = this.pathFromRoot(t); return n.length > 1 ? n[n.length - 2] : null } children(t) { const n = Ed(t, this._root); return n ? n.children.map(r => r.value) : [] } firstChild(t) { const n = Ed(t, this._root); return n && n.children.length > 0 ? n.children[0].value : null } siblings(t) { const n = bd(t, this._root); return n.length < 2 ? [] : n[n.length - 2].children.map(o => o.value).filter(o => o !== t) } pathFromRoot(t) { return bd(t, this._root).map(n => n.value) } } function Ed(e, t) { if (e === t.value) return t; for (const n of t.children) { const r = Ed(e, n); if (r) return r } return null } function bd(e, t) { if (e === t.value) return [t]; for (const n of t.children) { const r = bd(e, n); if (r.length) return r.unshift(t), r } return [] } class In { constructor(t, n) { this.value = t, this.children = n } toString() { return `TreeNode(${this.value})` } } function ro(e) { const t = {}; return e && e.children.forEach(n => t[n.value.outlet] = n), t } class eD extends J_ { constructor(t, n) { super(t), this.snapshot = n, Md(this, t) } toString() { return this.snapshot.toString() } } function tD(e, t) { const n = function qP(e, t) { const s = new ba([], {}, {}, "", {}, V, t, null, e.root, -1, {}); return new rD("", new In(s, [])) }(e, t), r = new Ut([new gi("", {})]), o = new Ut({}), i = new Ut({}), s = new Ut({}), a = new Ut(""), l = new oo(r, o, s, a, i, V, t, n.root); return l.snapshot = n.root, new eD(new In(l, []), n) } class oo { constructor(t, n, r, o, i, s, a, l) { this.url = t, this.params = n, this.queryParams = r, this.fragment = o, this.data = i, this.outlet = s, this.component = a, this.title = this.data?.pipe(H(u => u[pi])) ?? T(void 0), this._futureSnapshot = l } get routeConfig() { return this._futureSnapshot.routeConfig } get root() { return this._routerState.root } get parent() { return this._routerState.parent(this) } get firstChild() { return this._routerState.firstChild(this) } get children() { return this._routerState.children(this) } get pathFromRoot() { return this._routerState.pathFromRoot(this) } get paramMap() { return this._paramMap || (this._paramMap = this.params.pipe(H(t => Jr(t)))), this._paramMap } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(H(t => Jr(t)))), this._queryParamMap } toString() { return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})` } } function nD(e, t = "emptyOnly") { const n = e.pathFromRoot; let r = 0; if ("always" !== t) for (r = n.length - 1; r >= 1;) { const o = n[r], i = n[r - 1]; if (o.routeConfig && "" === o.routeConfig.path) r--; else { if (i.component) break; r-- } } return function KP(e) { return e.reduce((t, n) => ({ params: { ...t.params, ...n.params }, data: { ...t.data, ...n.data }, resolve: { ...n.data, ...t.resolve, ...n.routeConfig?.data, ...n._resolvedData } }), { params: {}, data: {}, resolve: {} }) }(n.slice(r)) } class ba { get title() { return this.data?.[pi] } constructor(t, n, r, o, i, s, a, l, u, c, d) { this.url = t, this.params = n, this.queryParams = r, this.fragment = o, this.data = i, this.outlet = s, this.component = a, this.routeConfig = l, this._urlSegment = u, this._lastPathIndex = c, this._resolve = d } get root() { return this._routerState.root } get parent() { return this._routerState.parent(this) } get firstChild() { return this._routerState.firstChild(this) } get children() { return this._routerState.children(this) } get pathFromRoot() { return this._routerState.pathFromRoot(this) } get paramMap() { return this._paramMap || (this._paramMap = Jr(this.params)), this._paramMap } get queryParamMap() { return this._queryParamMap || (this._queryParamMap = Jr(this.queryParams)), this._queryParamMap } toString() { return `Route(url:'${this.url.map(r => r.toString()).join("/")}', path:'${this.routeConfig ? this.routeConfig.path : ""}')` } } class rD extends J_ { constructor(t, n) { super(n), this.url = t, Md(this, n) } toString() { return oD(this._root) } } function Md(e, t) { t.value._routerState = e, t.children.forEach(n => Md(e, n)) } function oD(e) { const t = e.children.length > 0 ? ` { ${e.children.map(oD).join(", ")} } ` : ""; return `${e.value}${t}` } function Sd(e) { if (e.snapshot) { const t = e.snapshot, n = e._futureSnapshot; e.snapshot = n, nn(t.queryParams, n.queryParams) || e.queryParams.next(n.queryParams), t.fragment !== n.fragment && e.fragment.next(n.fragment), nn(t.params, n.params) || e.params.next(n.params), function lP(e, t) { if (e.length !== t.length) return !1; for (let n = 0; n < e.length; ++n)if (!nn(e[n], t[n])) return !1; return !0 }(t.url, n.url) || e.url.next(n.url), nn(t.data, n.data) || e.data.next(n.data) } else e.snapshot = e._futureSnapshot, e.data.next(e._futureSnapshot.data) } function Id(e, t) { const n = nn(e.params, t.params) && function fP(e, t) { return ir(e, t) && e.every((n, r) => nn(n.parameters, t[r].parameters)) }(e.url, t.url); return n && !(!e.parent != !t.parent) && (!e.parent || Id(e.parent, t.parent)) } function Ci(e, t, n) { if (n && e.shouldReuseRoute(t.value, n.value.snapshot)) { const r = n.value; r._futureSnapshot = t.value; const o = function YP(e, t, n) { return t.children.map(r => { for (const o of n.children) if (e.shouldReuseRoute(r.value, o.value.snapshot)) return Ci(e, r, o); return Ci(e, r) }) }(e, t, n); return new In(r, o) } { if (e.shouldAttach(t.value)) { const i = e.retrieve(t.value); if (null !== i) { const s = i.route; return s.value._futureSnapshot = t.value, s.children = t.children.map(a => Ci(e, a)), s } } const r = function QP(e) { return new oo(new Ut(e.url), new Ut(e.params), new Ut(e.queryParams), new Ut(e.fragment), new Ut(e.data), e.outlet, e.component, e) }(t.value), o = t.children.map(i => Ci(e, i)); return new In(r, o) } } const Ad = "ngNavigationCancelingError"; function iD(e, t) { const { redirectTo: n, navigationBehaviorOptions: r } = sr(t) ? { redirectTo: t, navigationBehaviorOptions: void 0 } : t, o = sD(!1, 0, t); return o.url = n, o.navigationBehaviorOptions = r, o } function sD(e, t, n) { const r = new Error("NavigationCancelingError: " + (e || "")); return r[Ad] = !0, r.cancellationCode = t, n && (r.url = n), r } function aD(e) { return lD(e) && sr(e.url) } function lD(e) { return e && e[Ad] } class XP { constructor() { this.outlet = null, this.route = null, this.resolver = null, this.injector = null, this.children = new wi, this.attachRef = null } } let wi = (() => { class e { constructor() { this.contexts = new Map } onChildOutletCreated(n, r) { const o = this.getOrCreateContext(n); o.outlet = r, this.contexts.set(n, o) } onChildOutletDestroyed(n) { const r = this.getContext(n); r && (r.outlet = null, r.attachRef = null) } onOutletDeactivated() { const n = this.contexts; return this.contexts = new Map, n } onOutletReAttached(n) { this.contexts = n } getOrCreateContext(n) { let r = this.getContext(n); return r || (r = new XP, this.contexts.set(n, r)), r } getContext(n) { return this.contexts.get(n) || null } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const Ma = !1; let Td = (() => { class e { constructor() { this.activated = null, this._activatedRoute = null, this.name = V, this.activateEvents = new he, this.deactivateEvents = new he, this.attachEvents = new he, this.detachEvents = new he, this.parentContexts = $(wi), this.location = $(jt), this.changeDetector = $(Zs), this.environmentInjector = $(Zt) } ngOnChanges(n) { if (n.name) { const { firstChange: r, previousValue: o } = n.name; if (r) return; this.isTrackedInParentContexts(o) && (this.deactivate(), this.parentContexts.onChildOutletDestroyed(o)), this.initializeOutletWithName() } } ngOnDestroy() { this.isTrackedInParentContexts(this.name) && this.parentContexts.onChildOutletDestroyed(this.name) } isTrackedInParentContexts(n) { return this.parentContexts.getContext(n)?.outlet === this } ngOnInit() { this.initializeOutletWithName() } initializeOutletWithName() { if (this.parentContexts.onChildOutletCreated(this.name, this), this.activated) return; const n = this.parentContexts.getContext(this.name); n?.route && (n.attachRef ? this.attach(n.attachRef, n.route) : this.activateWith(n.route, n.injector)) } get isActivated() { return !!this.activated } get component() { if (!this.activated) throw new C(4012, Ma); return this.activated.instance } get activatedRoute() { if (!this.activated) throw new C(4012, Ma); return this._activatedRoute } get activatedRouteData() { return this._activatedRoute ? this._activatedRoute.snapshot.data : {} } detach() { if (!this.activated) throw new C(4012, Ma); this.location.detach(); const n = this.activated; return this.activated = null, this._activatedRoute = null, this.detachEvents.emit(n.instance), n } attach(n, r) { this.activated = n, this._activatedRoute = r, this.location.insert(n.hostView), this.attachEvents.emit(n.instance) } deactivate() { if (this.activated) { const n = this.component; this.activated.destroy(), this.activated = null, this._activatedRoute = null, this.deactivateEvents.emit(n) } } activateWith(n, r) { if (this.isActivated) throw new C(4013, Ma); this._activatedRoute = n; const o = this.location, s = n.snapshot.component, a = this.parentContexts.getOrCreateContext(this.name).children, l = new JP(n, a, o.injector); if (r && function eN(e) { return !!e.resolveComponentFactory }(r)) { const u = r.resolveComponentFactory(s); this.activated = o.createComponent(u, o.length, l) } else this.activated = o.createComponent(s, { index: o.length, injector: l, environmentInjector: r ?? this.environmentInjector }); this.changeDetector.markForCheck(), this.activateEvents.emit(this.activated.instance) } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275dir = N({ type: e, selectors: [["router-outlet"]], inputs: { name: "name" }, outputs: { activateEvents: "activate", deactivateEvents: "deactivate", attachEvents: "attach", detachEvents: "detach" }, exportAs: ["outlet"], standalone: !0, features: [Ct] }), e })(); class JP { constructor(t, n, r) { this.route = t, this.childContexts = n, this.parent = r } get(t, n) { return t === oo ? this.route : t === wi ? this.childContexts : this.parent.get(t, n) } } let xd = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275cmp = Co({ type: e, selectors: [["ng-component"]], standalone: !0, features: [uy], decls: 1, vars: 0, template: function (n, r) { 1 & n && ht(0, "router-outlet") }, dependencies: [Td], encapsulation: 2 }), e })(); function uD(e, t) { return e.providers && !e._injector && (e._injector = Bs(e.providers, t, `Route: ${e.path}`)), e._injector ?? t } function Od(e) { const t = e.children && e.children.map(Od), n = t ? { ...e, children: t } : { ...e }; return !n.component && !n.loadComponent && (t || n.loadChildren) && n.outlet && n.outlet !== V && (n.component = xd), n } function Tt(e) { return e.outlet || V } function cD(e, t) { const n = e.filter(r => Tt(r) === t); return n.push(...e.filter(r => Tt(r) !== t)), n } function Ei(e) { if (!e) return null; if (e.routeConfig?._injector) return e.routeConfig._injector; for (let t = e.parent; t; t = t.parent) { const n = t.routeConfig; if (n?._loadedInjector) return n._loadedInjector; if (n?._injector) return n._injector } return null } class iN { constructor(t, n, r, o) { this.routeReuseStrategy = t, this.futureState = n, this.currState = r, this.forwardEvent = o } activate(t) { const n = this.futureState._root, r = this.currState ? this.currState._root : null; this.deactivateChildRoutes(n, r, t), Sd(this.futureState.root), this.activateChildRoutes(n, r, t) } deactivateChildRoutes(t, n, r) { const o = ro(n); t.children.forEach(i => { const s = i.value.outlet; this.deactivateRoutes(i, o[s], r), delete o[s] }), Fe(o, (i, s) => { this.deactivateRouteAndItsChildren(i, r) }) } deactivateRoutes(t, n, r) { const o = t.value, i = n ? n.value : null; if (o === i) if (o.component) { const s = r.getContext(o.outlet); s && this.deactivateChildRoutes(t, n, s.children) } else this.deactivateChildRoutes(t, n, r); else i && this.deactivateRouteAndItsChildren(n, r) } deactivateRouteAndItsChildren(t, n) { t.value.component && this.routeReuseStrategy.shouldDetach(t.value.snapshot) ? this.detachAndStoreRouteSubtree(t, n) : this.deactivateRouteAndOutlet(t, n) } detachAndStoreRouteSubtree(t, n) { const r = n.getContext(t.value.outlet), o = r && t.value.component ? r.children : n, i = ro(t); for (const s of Object.keys(i)) this.deactivateRouteAndItsChildren(i[s], o); if (r && r.outlet) { const s = r.outlet.detach(), a = r.children.onOutletDeactivated(); this.routeReuseStrategy.store(t.value.snapshot, { componentRef: s, route: t, contexts: a }) } } deactivateRouteAndOutlet(t, n) { const r = n.getContext(t.value.outlet), o = r && t.value.component ? r.children : n, i = ro(t); for (const s of Object.keys(i)) this.deactivateRouteAndItsChildren(i[s], o); r && (r.outlet && (r.outlet.deactivate(), r.children.onOutletDeactivated()), r.attachRef = null, r.resolver = null, r.route = null) } activateChildRoutes(t, n, r) { const o = ro(n); t.children.forEach(i => { this.activateRoutes(i, o[i.value.outlet], r), this.forwardEvent(new HP(i.value.snapshot)) }), t.children.length && this.forwardEvent(new jP(t.value.snapshot)) } activateRoutes(t, n, r) { const o = t.value, i = n ? n.value : null; if (Sd(o), o === i) if (o.component) { const s = r.getOrCreateContext(o.outlet); this.activateChildRoutes(t, n, s.children) } else this.activateChildRoutes(t, n, r); else if (o.component) { const s = r.getOrCreateContext(o.outlet); if (this.routeReuseStrategy.shouldAttach(o.snapshot)) { const a = this.routeReuseStrategy.retrieve(o.snapshot); this.routeReuseStrategy.store(o.snapshot, null), s.children.onOutletReAttached(a.contexts), s.attachRef = a.componentRef, s.route = a.route.value, s.outlet && s.outlet.attach(a.componentRef, a.route.value), Sd(a.route.value), this.activateChildRoutes(t, null, s.children) } else { const a = Ei(o.snapshot), l = a?.get(zo) ?? null; s.attachRef = null, s.route = o, s.resolver = l, s.injector = a, s.outlet && s.outlet.activateWith(o, s.injector), this.activateChildRoutes(t, null, s.children) } } else this.activateChildRoutes(t, null, r) } } class dD { constructor(t) { this.path = t, this.route = this.path[this.path.length - 1] } } class Sa { constructor(t, n) { this.component = t, this.route = n } } function sN(e, t, n) { const r = e._root; return bi(r, t ? t._root : null, n, [r.value]) } function io(e, t) { const n = Symbol(), r = t.get(e, n); return r === n ? "function" != typeof e || function sE(e) { return null !== Hi(e) }(e) ? t.get(e) : e : r } function bi(e, t, n, r, o = { canDeactivateChecks: [], canActivateChecks: [] }) { const i = ro(t); return e.children.forEach(s => { (function lN(e, t, n, r, o = { canDeactivateChecks: [], canActivateChecks: [] }) { const i = e.value, s = t ? t.value : null, a = n ? n.getContext(e.value.outlet) : null; if (s && i.routeConfig === s.routeConfig) { const l = function uN(e, t, n) { if ("function" == typeof n) return n(e, t); switch (n) { case "pathParamsChange": return !ir(e.url, t.url); case "pathParamsOrQueryParamsChange": return !ir(e.url, t.url) || !nn(e.queryParams, t.queryParams); case "always": return !0; case "paramsOrQueryParamsChange": return !Id(e, t) || !nn(e.queryParams, t.queryParams); default: return !Id(e, t) } }(s, i, i.routeConfig.runGuardsAndResolvers); l ? o.canActivateChecks.push(new dD(r)) : (i.data = s.data, i._resolvedData = s._resolvedData), bi(e, t, i.component ? a ? a.children : null : n, r, o), l && a && a.outlet && a.outlet.isActivated && o.canDeactivateChecks.push(new Sa(a.outlet.component, s)) } else s && Mi(t, a, o), o.canActivateChecks.push(new dD(r)), bi(e, null, i.component ? a ? a.children : null : n, r, o) })(s, i[s.value.outlet], n, r.concat([s.value]), o), delete i[s.value.outlet] }), Fe(i, (s, a) => Mi(s, n.getContext(a), o)), o } function Mi(e, t, n) { const r = ro(e), o = e.value; Fe(r, (i, s) => { Mi(i, o.component ? t ? t.children.getContext(s) : null : t, n) }), n.canDeactivateChecks.push(new Sa(o.component && t && t.outlet && t.outlet.isActivated ? t.outlet.component : null, o)) } function Si(e) { return "function" == typeof e } function Pd(e) { return e instanceof ha || "EmptyError" === e?.name } const Ia = Symbol("INITIAL_VALUE"); function so() { return tn(e => S_(e.map(t => t.pipe(Xr(1), function tP(...e) { const t = mo(e); return xe((n, r) => { (t ? dd(e, n, t) : dd(e, n)).subscribe(r) }) }(Ia)))).pipe(H(t => { for (const n of t) if (!0 !== n) { if (n === Ia) return Ia; if (!1 === n || n instanceof Vn) return n } return !0 }), Mn(t => t !== Ia), Xr(1))) } function fD(e) { return function fw(...e) { return _f(e) }($e(t => { if (sr(t)) throw iD(0, t) }), H(t => !0 === t)) } const Nd = { matched: !1, consumedSegments: [], remainingSegments: [], parameters: {}, positionalParamSegments: {} }; function hD(e, t, n, r, o) { const i = Fd(e, t, n); return i.matched ? function SN(e, t, n, r) { const o = t.canMatch; return o && 0 !== o.length ? T(o.map(s => { const a = io(s, e); return Ln(function gN(e) { return e && Si(e.canMatch) }(a) ? a.canMatch(t, n) : e.runInContext(() => a(t, n))) })).pipe(so(), fD()) : T(!0) }(r = uD(t, r), t, n).pipe(H(s => !0 === s ? i : { ...Nd })) : T(i) } function Fd(e, t, n) { if ("" === t.path) return "full" === t.pathMatch && (e.hasChildren() || n.length > 0) ? { ...Nd } : { matched: !0, consumedSegments: [], remainingSegments: n, parameters: {}, positionalParamSegments: {} }; const o = (t.matcher || aP)(n, e, t); if (!o) return { ...Nd }; const i = {}; Fe(o.posParams, (a, l) => { i[l] = a.path }); const s = o.consumed.length > 0 ? { ...i, ...o.consumed[o.consumed.length - 1].parameters } : i; return { matched: !0, consumedSegments: o.consumed, remainingSegments: n.slice(o.consumed.length), parameters: s, positionalParamSegments: o.posParams ?? {} } } function Aa(e, t, n, r) { if (n.length > 0 && function TN(e, t, n) { return n.some(r => Ta(e, t, r) && Tt(r) !== V) }(e, n, r)) { const i = new z(t, function AN(e, t, n, r) { const o = {}; o[V] = r, r._sourceSegment = e, r._segmentIndexShift = t.length; for (const i of n) if ("" === i.path && Tt(i) !== V) { const s = new z([], {}); s._sourceSegment = e, s._segmentIndexShift = t.length, o[Tt(i)] = s } return o }(e, t, r, new z(n, e.children))); return i._sourceSegment = e, i._segmentIndexShift = t.length, { segmentGroup: i, slicedSegments: [] } } if (0 === n.length && function xN(e, t, n) { return n.some(r => Ta(e, t, r)) }(e, n, r)) { const i = new z(e.segments, function IN(e, t, n, r, o) { const i = {}; for (const s of r) if (Ta(e, n, s) && !o[Tt(s)]) { const a = new z([], {}); a._sourceSegment = e, a._segmentIndexShift = t.length, i[Tt(s)] = a } return { ...o, ...i } }(e, t, n, r, e.children)); return i._sourceSegment = e, i._segmentIndexShift = t.length, { segmentGroup: i, slicedSegments: n } } const o = new z(e.segments, e.children); return o._sourceSegment = e, o._segmentIndexShift = t.length, { segmentGroup: o, slicedSegments: n } } function Ta(e, t, n) { return (!(e.hasChildren() || t.length > 0) || "full" !== n.pathMatch) && "" === n.path } function pD(e, t, n, r) { return !!(Tt(e) === r || r !== V && Ta(t, n, e)) && ("**" === e.path || Fd(t, e, n).matched) } function gD(e, t, n) { return 0 === t.length && !e.children[n] } const xa = !1; class Ra { constructor(t) { this.segmentGroup = t || null } } class mD { constructor(t) { this.urlTree = t } } function Ii(e) { return hi(new Ra(e)) } function yD(e) { return hi(new mD(e)) } class NN { constructor(t, n, r, o, i) { this.injector = t, this.configLoader = n, this.urlSerializer = r, this.urlTree = o, this.config = i, this.allowRedirects = !0 } apply() { const t = Aa(this.urlTree.root, [], [], this.config).segmentGroup, n = new z(t.segments, t.children); return this.expandSegmentGroup(this.injector, this.config, n, V).pipe(H(i => this.createUrlTree(Ca(i), this.urlTree.queryParams, this.urlTree.fragment))).pipe(Sn(i => { if (i instanceof mD) return this.allowRedirects = !1, this.match(i.urlTree); throw i instanceof Ra ? this.noMatchError(i) : i })) } match(t) { return this.expandSegmentGroup(this.injector, this.config, t.root, V).pipe(H(o => this.createUrlTree(Ca(o), t.queryParams, t.fragment))).pipe(Sn(o => { throw o instanceof Ra ? this.noMatchError(o) : o })) } noMatchError(t) { return new C(4002, xa) } createUrlTree(t, n, r) { const o = yd(t); return new Vn(o, n, r) } expandSegmentGroup(t, n, r, o) { return 0 === r.segments.length && r.hasChildren() ? this.expandChildren(t, n, r).pipe(H(i => new z([], i))) : this.expandSegment(t, r, n, r.segments, o, !0) } expandChildren(t, n, r) { const o = []; for (const i of Object.keys(r.children)) "primary" === i ? o.unshift(i) : o.push(i); return Ce(o).pipe(kn(i => { const s = r.children[i], a = cD(n, i); return this.expandSegmentGroup(t, a, s, i).pipe(H(l => ({ segment: l, outlet: i }))) }), R_((i, s) => (i[s.outlet] = s.segment, i), {}), O_()) } expandSegment(t, n, r, o, i, s) { return Ce(r).pipe(kn(a => this.expandSegmentAgainstRoute(t, n, r, a, o, i, s).pipe(Sn(u => { if (u instanceof Ra) return T(null); throw u }))), Fn(a => !!a), Sn((a, l) => { if (Pd(a)) return gD(n, o, i) ? T(new z([], {})) : Ii(n); throw a })) } expandSegmentAgainstRoute(t, n, r, o, i, s, a) { return pD(o, n, i, s) ? void 0 === o.redirectTo ? this.matchSegmentAgainstRoute(t, n, o, i, s) : a && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) : Ii(n) : Ii(n) } expandSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) { return "**" === o.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, r, o, s) : this.expandRegularSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) } expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, r, o) { const i = this.applyRedirectCommands([], r.redirectTo, {}); return r.redirectTo.startsWith("/") ? yD(i) : this.lineralizeSegments(r, i).pipe(Re(s => { const a = new z(s, {}); return this.expandSegment(t, a, n, s, o, !1) })) } expandRegularSegmentAgainstRouteUsingRedirect(t, n, r, o, i, s) { const { matched: a, consumedSegments: l, remainingSegments: u, positionalParamSegments: c } = Fd(n, o, i); if (!a) return Ii(n); const d = this.applyRedirectCommands(l, o.redirectTo, c); return o.redirectTo.startsWith("/") ? yD(d) : this.lineralizeSegments(o, d).pipe(Re(f => this.expandSegment(t, n, r, f.concat(u), s, !1))) } matchSegmentAgainstRoute(t, n, r, o, i) { return "**" === r.path ? (t = uD(r, t), r.loadChildren ? (r._loadedRoutes ? T({ routes: r._loadedRoutes, injector: r._loadedInjector }) : this.configLoader.loadChildren(t, r)).pipe(H(a => (r._loadedRoutes = a.routes, r._loadedInjector = a.injector, new z(o, {})))) : T(new z(o, {}))) : hD(n, r, o, t).pipe(tn(({ matched: s, consumedSegments: a, remainingSegments: l }) => s ? this.getChildConfig(t = r._injector ?? t, r, o).pipe(Re(c => { const d = c.injector ?? t, f = c.routes, { segmentGroup: h, slicedSegments: p } = Aa(n, a, l, f), g = new z(h.segments, h.children); if (0 === p.length && g.hasChildren()) return this.expandChildren(d, f, g).pipe(H(y => new z(a, y))); if (0 === f.length && 0 === p.length) return T(new z(a, {})); const m = Tt(r) === i; return this.expandSegment(d, g, f, p, m ? V : i, !0).pipe(H(w => new z(a.concat(w.segments), w.children))) })) : Ii(n))) } getChildConfig(t, n, r) { return n.children ? T({ routes: n.children, injector: t }) : n.loadChildren ? void 0 !== n._loadedRoutes ? T({ routes: n._loadedRoutes, injector: n._loadedInjector }) : function MN(e, t, n, r) { const o = t.canLoad; return void 0 === o || 0 === o.length ? T(!0) : T(o.map(s => { const a = io(s, e); return Ln(function dN(e) { return e && Si(e.canLoad) }(a) ? a.canLoad(t, n) : e.runInContext(() => a(t, n))) })).pipe(so(), fD()) }(t, n, r).pipe(Re(o => o ? this.configLoader.loadChildren(t, n).pipe($e(i => { n._loadedRoutes = i.routes, n._loadedInjector = i.injector })) : function ON(e) { return hi(sD(xa, 3)) }())) : T({ routes: [], injector: t }) } lineralizeSegments(t, n) { let r = [], o = n.root; for (; ;) { if (r = r.concat(o.segments), 0 === o.numberOfChildren) return T(r); if (o.numberOfChildren > 1 || !o.children[V]) return t.redirectTo, hi(new C(4e3, xa)); o = o.children[V] } } applyRedirectCommands(t, n, r) { return this.applyRedirectCreateUrlTree(n, this.urlSerializer.parse(n), t, r) } applyRedirectCreateUrlTree(t, n, r, o) { const i = this.createSegmentGroup(t, n.root, r, o); return new Vn(i, this.createQueryParams(n.queryParams, this.urlTree.queryParams), n.fragment) } createQueryParams(t, n) { const r = {}; return Fe(t, (o, i) => { if ("string" == typeof o && o.startsWith(":")) { const a = o.substring(1); r[i] = n[a] } else r[i] = o }), r } createSegmentGroup(t, n, r, o) { const i = this.createSegments(t, n.segments, r, o); let s = {}; return Fe(n.children, (a, l) => { s[l] = this.createSegmentGroup(t, a, r, o) }), new z(i, s) } createSegments(t, n, r, o) { return n.map(i => i.path.startsWith(":") ? this.findPosParam(t, i, o) : this.findOrReturn(i, r)) } findPosParam(t, n, r) { const o = r[n.path.substring(1)]; if (!o) throw new C(4001, xa); return o } findOrReturn(t, n) { let r = 0; for (const o of n) { if (o.path === t.path) return n.splice(r), o; r++ } return t } } class kN { } class jN { constructor(t, n, r, o, i, s, a) { this.injector = t, this.rootComponentType = n, this.config = r, this.urlTree = o, this.url = i, this.paramsInheritanceStrategy = s, this.urlSerializer = a } recognize() { const t = Aa(this.urlTree.root, [], [], this.config.filter(n => void 0 === n.redirectTo)).segmentGroup; return this.processSegmentGroup(this.injector, this.config, t, V).pipe(H(n => { if (null === n) return null; const r = new ba([], Object.freeze({}), Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, {}, V, this.rootComponentType, null, this.urlTree.root, -1, {}), o = new In(r, n), i = new rD(this.url, o); return this.inheritParamsAndData(i._root), i })) } inheritParamsAndData(t) { const n = t.value, r = nD(n, this.paramsInheritanceStrategy); n.params = Object.freeze(r.params), n.data = Object.freeze(r.data), t.children.forEach(o => this.inheritParamsAndData(o)) } processSegmentGroup(t, n, r, o) { return 0 === r.segments.length && r.hasChildren() ? this.processChildren(t, n, r) : this.processSegment(t, n, r, r.segments, o) } processChildren(t, n, r) { return Ce(Object.keys(r.children)).pipe(kn(o => { const i = r.children[o], s = cD(n, o); return this.processSegmentGroup(t, s, i, o) }), R_((o, i) => o && i ? (o.push(...i), o) : null), function oP(e, t = !1) { return xe((n, r) => { let o = 0; n.subscribe(Se(r, i => { const s = e(i, o++); (s || t) && r.next(i), !s && r.complete() })) }) }(o => null !== o), pa(null), O_(), H(o => { if (null === o) return null; const i = _D(o); return function BN(e) { e.sort((t, n) => t.value.outlet === V ? -1 : n.value.outlet === V ? 1 : t.value.outlet.localeCompare(n.value.outlet)) }(i), i })) } processSegment(t, n, r, o, i) { return Ce(n).pipe(kn(s => this.processSegmentAgainstRoute(s._injector ?? t, s, r, o, i)), Fn(s => !!s), Sn(s => { if (Pd(s)) return gD(r, o, i) ? T([]) : T(null); throw s })) } processSegmentAgainstRoute(t, n, r, o, i) { if (n.redirectTo || !pD(n, r, o, i)) return T(null); let s; if ("**" === n.path) { const a = o.length > 0 ? F_(o).parameters : {}, l = CD(r) + o.length; s = T({ snapshot: new ba(o, a, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, wD(n), Tt(n), n.component ?? n._loadedComponent ?? null, n, DD(r), l, ED(n)), consumedSegments: [], remainingSegments: [] }) } else s = hD(r, n, o, t).pipe(H(({ matched: a, consumedSegments: l, remainingSegments: u, parameters: c }) => { if (!a) return null; const d = CD(r) + l.length; return { snapshot: new ba(l, c, Object.freeze({ ...this.urlTree.queryParams }), this.urlTree.fragment, wD(n), Tt(n), n.component ?? n._loadedComponent ?? null, n, DD(r), d, ED(n)), consumedSegments: l, remainingSegments: u } })); return s.pipe(tn(a => { if (null === a) return T(null); const { snapshot: l, consumedSegments: u, remainingSegments: c } = a; t = n._injector ?? t; const d = n._loadedInjector ?? t, f = function HN(e) { return e.children ? e.children : e.loadChildren ? e._loadedRoutes : [] }(n), { segmentGroup: h, slicedSegments: p } = Aa(r, u, c, f.filter(m => void 0 === m.redirectTo)); if (0 === p.length && h.hasChildren()) return this.processChildren(d, f, h).pipe(H(m => null === m ? null : [new In(l, m)])); if (0 === f.length && 0 === p.length) return T([new In(l, [])]); const g = Tt(n) === i; return this.processSegment(d, f, h, p, g ? V : i).pipe(H(m => null === m ? null : [new In(l, m)])) })) } } function $N(e) { const t = e.value.routeConfig; return t && "" === t.path && void 0 === t.redirectTo } function _D(e) { const t = [], n = new Set; for (const r of e) { if (!$N(r)) { t.push(r); continue } const o = t.find(i => r.value.routeConfig === i.value.routeConfig); void 0 !== o ? (o.children.push(...r.children), n.add(o)) : t.push(r) } for (const r of n) { const o = _D(r.children); t.push(new In(r.value, o)) } return t.filter(r => !n.has(r)) } function DD(e) { let t = e; for (; t._sourceSegment;)t = t._sourceSegment; return t } function CD(e) { let t = e, n = t._segmentIndexShift ?? 0; for (; t._sourceSegment;)t = t._sourceSegment, n += t._segmentIndexShift ?? 0; return n - 1 } function wD(e) { return e.data || {} } function ED(e) { return e.resolve || {} } function bD(e) { return "string" == typeof e.title || null === e.title } function kd(e) { return tn(t => { const n = e(t); return n ? Ce(n).pipe(H(() => t)) : T(t) }) } const ao = new M("ROUTES"); let Ld = (() => { class e { constructor() { this.componentLoaders = new WeakMap, this.childrenLoaders = new WeakMap, this.compiler = $(Xy) } loadComponent(n) { if (this.componentLoaders.get(n)) return this.componentLoaders.get(n); if (n._loadedComponent) return T(n._loadedComponent); this.onLoadStartListener && this.onLoadStartListener(n); const r = Ln(n.loadComponent()).pipe(H(SD), $e(i => { this.onLoadEndListener && this.onLoadEndListener(n), n._loadedComponent = i }), pd(() => { this.componentLoaders.delete(n) })), o = new T_(r, () => new an).pipe(fd()); return this.componentLoaders.set(n, o), o } loadChildren(n, r) { if (this.childrenLoaders.get(r)) return this.childrenLoaders.get(r); if (r._loadedRoutes) return T({ routes: r._loadedRoutes, injector: r._loadedInjector }); this.onLoadStartListener && this.onLoadStartListener(r); const i = this.loadModuleFactoryOrRoutes(r.loadChildren).pipe(H(a => { this.onLoadEndListener && this.onLoadEndListener(r); let l, u, c = !1; Array.isArray(a) ? u = a : (l = a.create(n).injector, u = N_(l.get(ao, [], O.Self | O.Optional))); return { routes: u.map(Od), injector: l } }), pd(() => { this.childrenLoaders.delete(r) })), s = new T_(i, () => new an).pipe(fd()); return this.childrenLoaders.set(r, s), s } loadModuleFactoryOrRoutes(n) { return Ln(n()).pipe(H(SD), Re(r => r instanceof ay || Array.isArray(r) ? T(r) : Ce(this.compiler.compileModuleAsync(r)))) } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); function SD(e) { return function YN(e) { return e && "object" == typeof e && "default" in e }(e) ? e.default : e } let Pa = (() => { class e { get hasRequestedNavigation() { return 0 !== this.navigationId } constructor() { this.currentNavigation = null, this.lastSuccessfulNavigation = null, this.events = new an, this.configLoader = $(Ld), this.environmentInjector = $(Zt), this.urlSerializer = $(mi), this.rootContexts = $(wi), this.navigationId = 0, this.afterPreactivation = () => T(void 0), this.rootComponentType = null, this.configLoader.onLoadEndListener = o => this.events.next(new LP(o)), this.configLoader.onLoadStartListener = o => this.events.next(new kP(o)) } complete() { this.transitions?.complete() } handleNavigationRequest(n) { const r = ++this.navigationId; this.transitions?.next({ ...this.transitions.value, ...n, id: r }) } setupNavigations(n) { return this.transitions = new Ut({ id: 0, targetPageId: 0, currentUrlTree: n.currentUrlTree, currentRawUrl: n.currentUrlTree, extractedUrl: n.urlHandlingStrategy.extract(n.currentUrlTree), urlAfterRedirects: n.urlHandlingStrategy.extract(n.currentUrlTree), rawUrl: n.currentUrlTree, extras: {}, resolve: null, reject: null, promise: Promise.resolve(!0), source: Di, restoredState: null, currentSnapshot: n.routerState.snapshot, targetSnapshot: null, currentRouterState: n.routerState, targetRouterState: null, guards: { canActivateChecks: [], canDeactivateChecks: [] }, guardsResult: null }), this.transitions.pipe(Mn(r => 0 !== r.id), H(r => ({ ...r, extractedUrl: n.urlHandlingStrategy.extract(r.rawUrl) })), tn(r => { let o = !1, i = !1; return T(r).pipe($e(s => { this.currentNavigation = { id: s.id, initialUrl: s.rawUrl, extractedUrl: s.extractedUrl, trigger: s.source, extras: s.extras, previousNavigation: this.lastSuccessfulNavigation ? { ...this.lastSuccessfulNavigation, previousNavigation: null } : null } }), tn(s => { const a = n.browserUrlTree.toString(), l = !n.navigated || s.extractedUrl.toString() !== a || a !== n.currentUrlTree.toString(); if (!l && "reload" !== (s.extras.onSameUrlNavigation ?? n.onSameUrlNavigation)) { const c = ""; return this.events.next(new Ea(s.id, n.serializeUrl(r.rawUrl), c, 0)), n.rawUrlTree = s.rawUrl, s.resolve(null), xt } if (n.urlHandlingStrategy.shouldProcessUrl(s.rawUrl)) return ID(s.source) && (n.browserUrlTree = s.extractedUrl), T(s).pipe(tn(c => { const d = this.transitions?.getValue(); return this.events.next(new Cd(c.id, this.urlSerializer.serialize(c.extractedUrl), c.source, c.restoredState)), d !== this.transitions?.getValue() ? xt : Promise.resolve(c) }), function FN(e, t, n, r) { return tn(o => function PN(e, t, n, r, o) { return new NN(e, t, n, r, o).apply() }(e, t, n, o.extractedUrl, r).pipe(H(i => ({ ...o, urlAfterRedirects: i })))) }(this.environmentInjector, this.configLoader, this.urlSerializer, n.config), $e(c => { this.currentNavigation = { ...this.currentNavigation, finalUrl: c.urlAfterRedirects }, r.urlAfterRedirects = c.urlAfterRedirects }), function zN(e, t, n, r, o) { return Re(i => function VN(e, t, n, r, o, i, s = "emptyOnly") { return new jN(e, t, n, r, o, s, i).recognize().pipe(tn(a => null === a ? function LN(e) { return new pe(t => t.error(e)) }(new kN) : T(a))) }(e, t, n, i.urlAfterRedirects, r.serialize(i.urlAfterRedirects), r, o).pipe(H(s => ({ ...i, targetSnapshot: s })))) }(this.environmentInjector, this.rootComponentType, n.config, this.urlSerializer, n.paramsInheritanceStrategy), $e(c => { if (r.targetSnapshot = c.targetSnapshot, "eager" === n.urlUpdateStrategy) { if (!c.extras.skipLocationChange) { const f = n.urlHandlingStrategy.merge(c.urlAfterRedirects, c.rawUrl); n.setBrowserUrl(f, c) } n.browserUrlTree = c.urlAfterRedirects } const d = new RP(c.id, this.urlSerializer.serialize(c.extractedUrl), this.urlSerializer.serialize(c.urlAfterRedirects), c.targetSnapshot); this.events.next(d) })); if (l && n.urlHandlingStrategy.shouldProcessUrl(n.rawUrlTree)) { const { id: c, extractedUrl: d, source: f, restoredState: h, extras: p } = s, g = new Cd(c, this.urlSerializer.serialize(d), f, h); this.events.next(g); const m = tD(d, this.rootComponentType).snapshot; return T(r = { ...s, targetSnapshot: m, urlAfterRedirects: d, extras: { ...p, skipLocationChange: !1, replaceUrl: !1 } }) } { const c = ""; return this.events.next(new Ea(s.id, n.serializeUrl(r.extractedUrl), c, 1)), n.rawUrlTree = s.rawUrl, s.resolve(null), xt } }), $e(s => { const a = new OP(s.id, this.urlSerializer.serialize(s.extractedUrl), this.urlSerializer.serialize(s.urlAfterRedirects), s.targetSnapshot); this.events.next(a) }), H(s => r = { ...s, guards: sN(s.targetSnapshot, s.currentSnapshot, this.rootContexts) }), function yN(e, t) { return Re(n => { const { targetSnapshot: r, currentSnapshot: o, guards: { canActivateChecks: i, canDeactivateChecks: s } } = n; return 0 === s.length && 0 === i.length ? T({ ...n, guardsResult: !0 }) : function vN(e, t, n, r) { return Ce(e).pipe(Re(o => function bN(e, t, n, r, o) { const i = t && t.routeConfig ? t.routeConfig.canDeactivate : null; return i && 0 !== i.length ? T(i.map(a => { const l = Ei(t) ?? o, u = io(a, l); return Ln(function pN(e) { return e && Si(e.canDeactivate) }(u) ? u.canDeactivate(e, t, n, r) : l.runInContext(() => u(e, t, n, r))).pipe(Fn()) })).pipe(so()) : T(!0) }(o.component, o.route, n, t, r)), Fn(o => !0 !== o, !0)) }(s, r, o, e).pipe(Re(a => a && function cN(e) { return "boolean" == typeof e }(a) ? function _N(e, t, n, r) { return Ce(t).pipe(kn(o => dd(function CN(e, t) { return null !== e && t && t(new VP(e)), T(!0) }(o.route.parent, r), function DN(e, t) { return null !== e && t && t(new BP(e)), T(!0) }(o.route, r), function EN(e, t, n) { const r = t[t.length - 1], i = t.slice(0, t.length - 1).reverse().map(s => function aN(e) { const t = e.routeConfig ? e.routeConfig.canActivateChild : null; return t && 0 !== t.length ? { node: e, guards: t } : null }(s)).filter(s => null !== s).map(s => A_(() => T(s.guards.map(l => { const u = Ei(s.node) ?? n, c = io(l, u); return Ln(function hN(e) { return e && Si(e.canActivateChild) }(c) ? c.canActivateChild(r, e) : u.runInContext(() => c(r, e))).pipe(Fn()) })).pipe(so()))); return T(i).pipe(so()) }(e, o.path, n), function wN(e, t, n) { const r = t.routeConfig ? t.routeConfig.canActivate : null; if (!r || 0 === r.length) return T(!0); const o = r.map(i => A_(() => { const s = Ei(t) ?? n, a = io(i, s); return Ln(function fN(e) { return e && Si(e.canActivate) }(a) ? a.canActivate(t, e) : s.runInContext(() => a(t, e))).pipe(Fn()) })); return T(o).pipe(so()) }(e, o.route, n))), Fn(o => !0 !== o, !0)) }(r, i, e, t) : T(a)), H(a => ({ ...n, guardsResult: a }))) }) }(this.environmentInjector, s => this.events.next(s)), $e(s => { if (r.guardsResult = s.guardsResult, sr(s.guardsResult)) throw iD(0, s.guardsResult); const a = new PP(s.id, this.urlSerializer.serialize(s.extractedUrl), this.urlSerializer.serialize(s.urlAfterRedirects), s.targetSnapshot, !!s.guardsResult); this.events.next(a) }), Mn(s => !!s.guardsResult || (n.restoreHistory(s), this.cancelNavigationTransition(s, "", 3), !1)), kd(s => { if (s.guards.canActivateChecks.length) return T(s).pipe($e(a => { const l = new NP(a.id, this.urlSerializer.serialize(a.extractedUrl), this.urlSerializer.serialize(a.urlAfterRedirects), a.targetSnapshot); this.events.next(l) }), tn(a => { let l = !1; return T(a).pipe(function GN(e, t) { return Re(n => { const { targetSnapshot: r, guards: { canActivateChecks: o } } = n; if (!o.length) return T(n); let i = 0; return Ce(o).pipe(kn(s => function WN(e, t, n, r) { const o = e.routeConfig, i = e._resolve; return void 0 !== o?.title && !bD(o) && (i[pi] = o.title), function qN(e, t, n, r) { const o = function KN(e) { return [...Object.keys(e), ...Object.getOwnPropertySymbols(e)] }(e); if (0 === o.length) return T({}); const i = {}; return Ce(o).pipe(Re(s => function ZN(e, t, n, r) { const o = Ei(t) ?? r, i = io(e, o); return Ln(i.resolve ? i.resolve(t, n) : o.runInContext(() => i(t, n))) }(e[s], t, n, r).pipe(Fn(), $e(a => { i[s] = a }))), hd(1), function iP(e) { return H(() => e) }(i), Sn(s => Pd(s) ? xt : hi(s))) }(i, e, t, r).pipe(H(s => (e._resolvedData = s, e.data = nD(e, n).resolve, o && bD(o) && (e.data[pi] = o.title), null))) }(s.route, r, e, t)), $e(() => i++), hd(1), Re(s => i === o.length ? T(n) : xt)) }) }(n.paramsInheritanceStrategy, this.environmentInjector), $e({ next: () => l = !0, complete: () => { l || (n.restoreHistory(a), this.cancelNavigationTransition(a, "", 2)) } })) }), $e(a => { const l = new FP(a.id, this.urlSerializer.serialize(a.extractedUrl), this.urlSerializer.serialize(a.urlAfterRedirects), a.targetSnapshot); this.events.next(l) })) }), kd(s => { const a = l => { const u = []; l.routeConfig?.loadComponent && !l.routeConfig._loadedComponent && u.push(this.configLoader.loadComponent(l.routeConfig).pipe($e(c => { l.component = c }), H(() => { }))); for (const c of l.children) u.push(...a(c)); return u }; return S_(a(s.targetSnapshot.root)).pipe(pa(), Xr(1)) }), kd(() => this.afterPreactivation()), H(s => { const a = function ZP(e, t, n) { const r = Ci(e, t._root, n ? n._root : void 0); return new eD(r, t) }(n.routeReuseStrategy, s.targetSnapshot, s.currentRouterState); return r = { ...s, targetRouterState: a } }), $e(s => { n.currentUrlTree = s.urlAfterRedirects, n.rawUrlTree = n.urlHandlingStrategy.merge(s.urlAfterRedirects, s.rawUrl), n.routerState = s.targetRouterState, "deferred" === n.urlUpdateStrategy && (s.extras.skipLocationChange || n.setBrowserUrl(n.rawUrlTree, s), n.browserUrlTree = s.urlAfterRedirects) }), ((e, t, n) => H(r => (new iN(t, r.targetRouterState, r.currentRouterState, n).activate(e), r)))(this.rootContexts, n.routeReuseStrategy, s => this.events.next(s)), Xr(1), $e({ next: s => { o = !0, this.lastSuccessfulNavigation = this.currentNavigation, n.navigated = !0, this.events.next(new ar(s.id, this.urlSerializer.serialize(s.extractedUrl), this.urlSerializer.serialize(n.currentUrlTree))), n.titleStrategy?.updateTitle(s.targetRouterState.snapshot), s.resolve(!0) }, complete: () => { o = !0 } }), pd(() => { o || i || this.cancelNavigationTransition(r, "", 1), this.currentNavigation?.id === r.id && (this.currentNavigation = null) }), Sn(s => { if (i = !0, lD(s)) { aD(s) || (n.navigated = !0, n.restoreHistory(r, !0)); const a = new wa(r.id, this.urlSerializer.serialize(r.extractedUrl), s.message, s.cancellationCode); if (this.events.next(a), aD(s)) { const l = n.urlHandlingStrategy.merge(s.url, n.rawUrlTree), u = { skipLocationChange: r.extras.skipLocationChange, replaceUrl: "eager" === n.urlUpdateStrategy || ID(r.source) }; n.scheduleNavigation(l, Di, null, u, { resolve: r.resolve, reject: r.reject, promise: r.promise }) } else r.resolve(!1) } else { n.restoreHistory(r, !0); const a = new wd(r.id, this.urlSerializer.serialize(r.extractedUrl), s, r.targetSnapshot ?? void 0); this.events.next(a); try { r.resolve(n.errorHandler(s)) } catch (l) { r.reject(l) } } return xt })) })) } cancelNavigationTransition(n, r, o) { const i = new wa(n.id, this.urlSerializer.serialize(n.extractedUrl), r, o); this.events.next(i), n.resolve(!1) } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); function ID(e) { return e !== Di } let AD = (() => { class e { buildTitle(n) { let r, o = n.root; for (; void 0 !== o;)r = this.getResolvedTitleForRoute(o) ?? r, o = o.children.find(i => i.outlet === V); return r } getResolvedTitleForRoute(n) { return n.data[pi] } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return $(QN) }, providedIn: "root" }), e })(), QN = (() => { class e extends AD { constructor(n) { super(), this.title = n } updateTitle(n) { const r = this.buildTitle(n); void 0 !== r && this.title.setTitle(r) } } return e.\u0275fac = function (n) { return new (n || e)(S(D_)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(), XN = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return $(eF) }, providedIn: "root" }), e })(); class JN { shouldDetach(t) { return !1 } store(t, n) { } shouldAttach(t) { return !1 } retrieve(t) { return null } shouldReuseRoute(t, n) { return t.routeConfig === n.routeConfig } } let eF = (() => { class e extends JN { } return e.\u0275fac = function () { let t; return function (r) { return (t || (t = Ne(e)))(r || e) } }(), e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const Na = new M("", { providedIn: "root", factory: () => ({}) }); let nF = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: function () { return $(rF) }, providedIn: "root" }), e })(), rF = (() => { class e { shouldProcessUrl(n) { return !0 } extract(n) { return n } merge(n, r) { return n } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); function oF(e) { throw e } function iF(e, t, n) { return t.parse("/") } const sF = { paths: "exact", fragment: "ignored", matrixParams: "ignored", queryParams: "exact" }, aF = { paths: "subset", fragment: "ignored", matrixParams: "ignored", queryParams: "subset" }; let pt = (() => { class e { get navigationId() { return this.navigationTransitions.navigationId } get browserPageId() { if ("computed" === this.canceledNavigationResolution) return this.location.getState()?.\u0275routerPageId } get events() { return this.navigationTransitions.events } constructor() { this.disposed = !1, this.currentPageId = 0, this.console = $(kT), this.isNgZoneEnabled = !1, this.options = $(Na, { optional: !0 }) || {}, this.errorHandler = this.options.errorHandler || oF, this.malformedUriErrorHandler = this.options.malformedUriErrorHandler || iF, this.navigated = !1, this.lastSuccessfulId = -1, this.urlHandlingStrategy = $(nF), this.routeReuseStrategy = $(XN), this.urlCreationStrategy = $(WP), this.titleStrategy = $(AD), this.onSameUrlNavigation = this.options.onSameUrlNavigation || "ignore", this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || "emptyOnly", this.urlUpdateStrategy = this.options.urlUpdateStrategy || "deferred", this.canceledNavigationResolution = this.options.canceledNavigationResolution || "replace", this.config = N_($(ao, { optional: !0 }) ?? []), this.navigationTransitions = $(Pa), this.urlSerializer = $(mi), this.location = $(Bc), this.isNgZoneEnabled = $(me) instanceof me && me.isInAngularZone(), this.resetConfig(this.config), this.currentUrlTree = new Vn, this.rawUrlTree = this.currentUrlTree, this.browserUrlTree = this.currentUrlTree, this.routerState = tD(this.currentUrlTree, null), this.navigationTransitions.setupNavigations(this).subscribe(n => { this.lastSuccessfulId = n.id, this.currentPageId = this.browserPageId ?? 0 }, n => { this.console.warn(`Unhandled Navigation Error: ${n}`) }) } resetRootComponentType(n) { this.routerState.root.component = n, this.navigationTransitions.rootComponentType = n } initialNavigation() { if (this.setUpLocationChangeListener(), !this.navigationTransitions.hasRequestedNavigation) { const n = this.location.getState(); this.navigateToSyncWithBrowser(this.location.path(!0), Di, n) } } setUpLocationChangeListener() { this.locationSubscription || (this.locationSubscription = this.location.subscribe(n => { const r = "popstate" === n.type ? "popstate" : "hashchange"; "popstate" === r && setTimeout(() => { this.navigateToSyncWithBrowser(n.url, r, n.state) }, 0) })) } navigateToSyncWithBrowser(n, r, o) { const i = { replaceUrl: !0 }, s = o?.navigationId ? o : null; if (o) { const l = { ...o }; delete l.navigationId, delete l.\u0275routerPageId, 0 !== Object.keys(l).length && (i.state = l) } const a = this.parseUrl(n); this.scheduleNavigation(a, r, s, i) } get url() { return this.serializeUrl(this.currentUrlTree) } getCurrentNavigation() { return this.navigationTransitions.currentNavigation } resetConfig(n) { this.config = n.map(Od), this.navigated = !1, this.lastSuccessfulId = -1 } ngOnDestroy() { this.dispose() } dispose() { this.navigationTransitions.complete(), this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0), this.disposed = !0 } createUrlTree(n, r = {}) { const { relativeTo: o, queryParams: i, fragment: s, queryParamsHandling: a, preserveFragment: l } = r, u = l ? this.currentUrlTree.fragment : s; let c = null; switch (a) { case "merge": c = { ...this.currentUrlTree.queryParams, ...i }; break; case "preserve": c = this.currentUrlTree.queryParams; break; default: c = i || null }return null !== c && (c = this.removeEmptyProps(c)), this.urlCreationStrategy.createUrlTree(o, this.routerState, this.currentUrlTree, n, c, u ?? null) } navigateByUrl(n, r = { skipLocationChange: !1 }) { const o = sr(n) ? n : this.parseUrl(n), i = this.urlHandlingStrategy.merge(o, this.rawUrlTree); return this.scheduleNavigation(i, Di, null, r) } navigate(n, r = { skipLocationChange: !1 }) { return function lF(e) { for (let t = 0; t < e.length; t++) { const n = e[t]; if (null == n) throw new C(4008, false) } }(n), this.navigateByUrl(this.createUrlTree(n, r), r) } serializeUrl(n) { return this.urlSerializer.serialize(n) } parseUrl(n) { let r; try { r = this.urlSerializer.parse(n) } catch (o) { r = this.malformedUriErrorHandler(o, this.urlSerializer, n) } return r } isActive(n, r) { let o; if (o = !0 === r ? { ...sF } : !1 === r ? { ...aF } : r, sr(n)) return L_(this.currentUrlTree, n, o); const i = this.parseUrl(n); return L_(this.currentUrlTree, i, o) } removeEmptyProps(n) { return Object.keys(n).reduce((r, o) => { const i = n[o]; return null != i && (r[o] = i), r }, {}) } scheduleNavigation(n, r, o, i, s) { if (this.disposed) return Promise.resolve(!1); let a, l, u, c; return s ? (a = s.resolve, l = s.reject, u = s.promise) : u = new Promise((d, f) => { a = d, l = f }), c = "computed" === this.canceledNavigationResolution ? o && o.\u0275routerPageId ? o.\u0275routerPageId : (this.browserPageId ?? 0) + 1 : 0, this.navigationTransitions.handleNavigationRequest({ targetPageId: c, source: r, restoredState: o, currentUrlTree: this.currentUrlTree, currentRawUrl: this.currentUrlTree, rawUrl: n, extras: i, resolve: a, reject: l, promise: u, currentSnapshot: this.routerState.snapshot, currentRouterState: this.routerState }), u.catch(d => Promise.reject(d)) } setBrowserUrl(n, r) { const o = this.urlSerializer.serialize(n); if (this.location.isCurrentPathEqualTo(o) || r.extras.replaceUrl) { const s = { ...r.extras.state, ...this.generateNgRouterState(r.id, this.browserPageId) }; this.location.replaceState(o, "", s) } else { const i = { ...r.extras.state, ...this.generateNgRouterState(r.id, r.targetPageId) }; this.location.go(o, "", i) } } restoreHistory(n, r = !1) { if ("computed" === this.canceledNavigationResolution) { const i = this.currentPageId - (this.browserPageId ?? this.currentPageId); 0 !== i ? this.location.historyGo(i) : this.currentUrlTree === this.getCurrentNavigation()?.finalUrl && 0 === i && (this.resetState(n), this.browserUrlTree = n.currentUrlTree, this.resetUrlToCurrentUrlTree()) } else "replace" === this.canceledNavigationResolution && (r && this.resetState(n), this.resetUrlToCurrentUrlTree()) } resetState(n) { this.routerState = n.currentRouterState, this.currentUrlTree = n.currentUrlTree, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n.rawUrl) } resetUrlToCurrentUrlTree() { this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId)) } generateNgRouterState(n, r) { return "computed" === this.canceledNavigationResolution ? { navigationId: n, \u0275routerPageId: r } : { navigationId: n } } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(), Fa = (() => { class e { constructor(n, r, o, i, s, a) { this.router = n, this.route = r, this.tabIndexAttribute = o, this.renderer = i, this.el = s, this.locationStrategy = a, this._preserveFragment = !1, this._skipLocationChange = !1, this._replaceUrl = !1, this.href = null, this.commands = null, this.onChanges = new an; const l = s.nativeElement.tagName?.toLowerCase(); this.isAnchorElement = "a" === l || "area" === l, this.isAnchorElement ? this.subscription = n.events.subscribe(u => { u instanceof ar && this.updateHref() }) : this.setTabIndexIfNotOnNativeEl("0") } set preserveFragment(n) { this._preserveFragment = Qr(n) } get preserveFragment() { return this._preserveFragment } set skipLocationChange(n) { this._skipLocationChange = Qr(n) } get skipLocationChange() { return this._skipLocationChange } set replaceUrl(n) { this._replaceUrl = Qr(n) } get replaceUrl() { return this._replaceUrl } setTabIndexIfNotOnNativeEl(n) { null != this.tabIndexAttribute || this.isAnchorElement || this.applyAttributeValue("tabindex", n) } ngOnChanges(n) { this.isAnchorElement && this.updateHref(), this.onChanges.next(this) } set routerLink(n) { null != n ? (this.commands = Array.isArray(n) ? n : [n], this.setTabIndexIfNotOnNativeEl("0")) : (this.commands = null, this.setTabIndexIfNotOnNativeEl(null)) } onClick(n, r, o, i, s) { return !!(null === this.urlTree || this.isAnchorElement && (0 !== n || r || o || i || s || "string" == typeof this.target && "_self" != this.target)) || (this.router.navigateByUrl(this.urlTree, { skipLocationChange: this.skipLocationChange, replaceUrl: this.replaceUrl, state: this.state }), !this.isAnchorElement) } ngOnDestroy() { this.subscription?.unsubscribe() } updateHref() { this.href = null !== this.urlTree && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(this.urlTree)) : null; const n = null === this.href ? null : function Pp(e, t, n) { return function F0(e, t) { return "src" === t && ("embed" === e || "frame" === e || "iframe" === e || "media" === e || "script" === e) || "href" === t && ("base" === e || "link" === e) ? Op : gu }(t, n)(e) }(this.href, this.el.nativeElement.tagName.toLowerCase(), "href"); this.applyAttributeValue("href", n) } applyAttributeValue(n, r) { const o = this.renderer, i = this.el.nativeElement; null !== r ? o.setAttribute(i, n, r) : o.removeAttribute(i, n) } get urlTree() { return null === this.commands ? null : this.router.createUrlTree(this.commands, { relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route, queryParams: this.queryParams, fragment: this.fragment, queryParamsHandling: this.queryParamsHandling, preserveFragment: this.preserveFragment }) } } return e.\u0275fac = function (n) { return new (n || e)(D(pt), D(oo), function ls(e) { return function ib(e, t) { if ("class" === t) return e.classes; if ("style" === t) return e.styles; const n = e.attrs; if (n) { const r = n.length; let o = 0; for (; o < r;) { const i = n[o]; if (Eh(i)) break; if (0 === i) o += 2; else if ("number" == typeof i) for (o++; o < r && "string" == typeof n[o];)o++; else { if (i === t) return n[o + 1]; o += 2 } } } return null }(Pe(), e) }("tabindex"), D(mn), D(dt), D(or)) }, e.\u0275dir = N({ type: e, selectors: [["", "routerLink", ""]], hostVars: 1, hostBindings: function (n, r) { 1 & n && He("click", function (i) { return r.onClick(i.button, i.ctrlKey, i.shiftKey, i.altKey, i.metaKey) }), 2 & n && Jt("target", r.target) }, inputs: { target: "target", queryParams: "queryParams", fragment: "fragment", queryParamsHandling: "queryParamsHandling", state: "state", relativeTo: "relativeTo", preserveFragment: "preserveFragment", skipLocationChange: "skipLocationChange", replaceUrl: "replaceUrl", routerLink: "routerLink" }, standalone: !0, features: [Ct] }), e })(); class TD { } let dF = (() => { class e { constructor(n, r, o, i, s) { this.router = n, this.injector = o, this.preloadingStrategy = i, this.loader = s } setUpPreloading() { this.subscription = this.router.events.pipe(Mn(n => n instanceof ar), kn(() => this.preload())).subscribe(() => { }) } preload() { return this.processRoutes(this.injector, this.router.config) } ngOnDestroy() { this.subscription && this.subscription.unsubscribe() } processRoutes(n, r) { const o = []; for (const i of r) { i.providers && !i._injector && (i._injector = Bs(i.providers, n, `Route: ${i.path}`)); const s = i._injector ?? n, a = i._loadedInjector ?? s; (i.loadChildren && !i._loadedRoutes && void 0 === i.canLoad || i.loadComponent && !i._loadedComponent) && o.push(this.preloadConfig(s, i)), (i.children || i._loadedRoutes) && o.push(this.processRoutes(a, i.children ?? i._loadedRoutes)) } return Ce(o).pipe(cr()) } preloadConfig(n, r) { return this.preloadingStrategy.preload(r, () => { let o; o = r.loadChildren && void 0 === r.canLoad ? this.loader.loadChildren(n, r) : T(null); const i = o.pipe(Re(s => null === s ? T(void 0) : (r._loadedRoutes = s.routes, r._loadedInjector = s.injector, this.processRoutes(s.injector ?? n, s.routes)))); return r.loadComponent && !r._loadedComponent ? Ce([i, this.loader.loadComponent(r)]).pipe(cr()) : i }) } } return e.\u0275fac = function (n) { return new (n || e)(S(pt), S(Xy), S(Zt), S(TD), S(Ld)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(); const jd = new M(""); let xD = (() => { class e { constructor(n, r, o, i, s = {}) { this.urlSerializer = n, this.transitions = r, this.viewportScroller = o, this.zone = i, this.options = s, this.lastId = 0, this.lastSource = "imperative", this.restoredId = 0, this.store = {}, s.scrollPositionRestoration = s.scrollPositionRestoration || "disabled", s.anchorScrolling = s.anchorScrolling || "disabled" } init() { "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"), this.routerEventsSubscription = this.createScrollEvents(), this.scrollEventsSubscription = this.consumeScrollEvents() } createScrollEvents() { return this.transitions.events.subscribe(n => { n instanceof Cd ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = n.navigationTrigger, this.restoredId = n.restoredState ? n.restoredState.navigationId : 0) : n instanceof ar && (this.lastId = n.id, this.scheduleScrollEvent(n, this.urlSerializer.parse(n.urlAfterRedirects).fragment)) }) } consumeScrollEvents() { return this.transitions.events.subscribe(n => { n instanceof X_ && (n.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(n.position) : n.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(n.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0])) }) } scheduleScrollEvent(n, r) { this.zone.runOutsideAngular(() => { setTimeout(() => { this.zone.run(() => { this.transitions.events.next(new X_(n, "popstate" === this.lastSource ? this.store[this.restoredId] : null, r)) }) }, 0) }) } ngOnDestroy() { this.routerEventsSubscription?.unsubscribe(), this.scrollEventsSubscription?.unsubscribe() } } return e.\u0275fac = function (n) { !function cg() { throw new Error("invalid") }() }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); var gt = (() => ((gt = gt || {})[gt.COMPLETE = 0] = "COMPLETE", gt[gt.FAILED = 1] = "FAILED", gt[gt.REDIRECTING = 2] = "REDIRECTING", gt))(); const lo = !1; function jn(e, t) { return { \u0275kind: e, \u0275providers: t } } const Bd = new M("", { providedIn: "root", factory: () => !1 }); function OD() { const e = $(Yt); return t => { const n = e.get(qs); if (t !== n.components[0]) return; const r = e.get(pt), o = e.get(PD); 1 === e.get(Hd) && r.initialNavigation(), e.get(ND, null, O.Optional)?.setUpPreloading(), e.get(jd, null, O.Optional)?.init(), r.resetRootComponentType(n.componentTypes[0]), o.closed || (o.next(), o.complete(), o.unsubscribe()) } } const PD = new M(lo ? "bootstrap done indicator" : "", { factory: () => new an }), Hd = new M(lo ? "initial navigation" : "", { providedIn: "root", factory: () => 1 }); function mF() { let e = []; return e = lo ? [{ provide: _s, multi: !0, useFactory: () => { const t = $(pt); return () => t.events.subscribe(n => { console.group?.(`Router Event: ${n.constructor.name}`), console.log(function $P(e) { if (!("type" in e)) return `Unknown Router Event: ${e.constructor.name}`; switch (e.type) { case 14: return `ActivationEnd(path: '${e.snapshot.routeConfig?.path || ""}')`; case 13: return `ActivationStart(path: '${e.snapshot.routeConfig?.path || ""}')`; case 12: return `ChildActivationEnd(path: '${e.snapshot.routeConfig?.path || ""}')`; case 11: return `ChildActivationStart(path: '${e.snapshot.routeConfig?.path || ""}')`; case 8: return `GuardsCheckEnd(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}', state: ${e.state}, shouldActivate: ${e.shouldActivate})`; case 7: return `GuardsCheckStart(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}', state: ${e.state})`; case 2: return `NavigationCancel(id: ${e.id}, url: '${e.url}')`; case 16: return `NavigationSkipped(id: ${e.id}, url: '${e.url}')`; case 1: return `NavigationEnd(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}')`; case 3: return `NavigationError(id: ${e.id}, url: '${e.url}', error: ${e.error})`; case 0: return `NavigationStart(id: ${e.id}, url: '${e.url}')`; case 6: return `ResolveEnd(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}', state: ${e.state})`; case 5: return `ResolveStart(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}', state: ${e.state})`; case 10: return `RouteConfigLoadEnd(path: ${e.route.path})`; case 9: return `RouteConfigLoadStart(path: ${e.route.path})`; case 4: return `RoutesRecognized(id: ${e.id}, url: '${e.url}', urlAfterRedirects: '${e.urlAfterRedirects}', state: ${e.state})`; case 15: return `Scroll(anchor: '${e.anchor}', position: '${e.position ? `${e.position[0]}, ${e.position[1]}` : null}')` } }(n)), console.log(n), console.groupEnd?.() }) } }] : [], jn(1, e) } const ND = new M(lo ? "router preloader" : ""); function yF(e) { return jn(0, [{ provide: ND, useExisting: dF }, { provide: TD, useExisting: e }]) } const Ai = !1, FD = new M(Ai ? "router duplicate forRoot guard" : "ROUTER_FORROOT_GUARD"), vF = [Bc, { provide: mi, useClass: gd }, pt, wi, { provide: oo, useFactory: function RD(e) { return e.routerState.root }, deps: [pt] }, Ld, Ai ? { provide: Bd, useValue: !0 } : []]; function _F() { return new sv("Router", pt) } let kD = (() => { class e { constructor(n) { } static forRoot(n, r) { return { ngModule: e, providers: [vF, Ai && r?.enableTracing ? mF().\u0275providers : [], { provide: ao, multi: !0, useValue: n }, { provide: FD, useFactory: EF, deps: [[pt, new No, new Fo]] }, { provide: Na, useValue: r || {} }, r?.useHash ? { provide: or, useClass: Ex } : { provide: or, useClass: Tv }, { provide: jd, useFactory: () => { const e = $(HR), t = $(me), n = $(Na), r = $(Pa), o = $(mi); return n.scrollOffset && e.setOffset(n.scrollOffset), new xD(o, r, e, t, n) } }, r?.preloadingStrategy ? yF(r.preloadingStrategy).\u0275providers : [], { provide: sv, multi: !0, useFactory: _F }, r?.initialNavigation ? bF(r) : [], [{ provide: LD, useFactory: OD }, { provide: iv, multi: !0, useExisting: LD }]] } } static forChild(n) { return { ngModule: e, providers: [{ provide: ao, multi: !0, useValue: n }] } } } return e.\u0275fac = function (n) { return new (n || e)(S(FD, 8)) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ imports: [xd] }), e })(); function EF(e) { if (Ai && e) throw new C(4007, "The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector. Lazy loaded modules should use RouterModule.forChild() instead."); return "guarded" } function bF(e) { return ["disabled" === e.initialNavigation ? jn(3, [{ provide: zs, multi: !0, useFactory: () => { const t = $(pt); return () => { t.setUpLocationChangeListener() } } }, { provide: Hd, useValue: 2 }]).\u0275providers : [], "enabledBlocking" === e.initialNavigation ? jn(2, [{ provide: Hd, useValue: 0 }, { provide: zs, multi: !0, deps: [Yt], useFactory: t => { const n = t.get(Cx, Promise.resolve()); return () => n.then(() => new Promise(r => { const o = t.get(pt), i = t.get(PD); (function fF(e, t) { e.events.pipe(Mn(n => n instanceof ar || n instanceof wa || n instanceof wd || n instanceof Ea), H(n => n instanceof ar || n instanceof Ea ? gt.COMPLETE : n instanceof wa && (0 === n.code || 1 === n.code) ? gt.REDIRECTING : gt.FAILED), Mn(n => n !== gt.REDIRECTING), Xr(1)).subscribe(() => { t() }) })(o, () => { r(!0) }), t.get(Pa).afterPreactivation = () => (r(!0), i.closed ? T(void 0) : i), o.initialNavigation() })) } }]).\u0275providers : []] } const LD = new M(Ai ? "Router Initializer" : ""); class ka { } class $d { } class on { constructor(t) { this.normalizedNames = new Map, this.lazyUpdate = null, t ? this.lazyInit = "string" == typeof t ? () => { this.headers = new Map, t.split("\n").forEach(n => { const r = n.indexOf(":"); if (r > 0) { const o = n.slice(0, r), i = o.toLowerCase(), s = n.slice(r + 1).trim(); this.maybeSetNormalizedName(o, i), this.headers.has(i) ? this.headers.get(i).push(s) : this.headers.set(i, [s]) } }) } : () => { this.headers = new Map, Object.entries(t).forEach(([n, r]) => { let o; if (o = "string" == typeof r ? [r] : "number" == typeof r ? [r.toString()] : r.map(i => i.toString()), o.length > 0) { const i = n.toLowerCase(); this.headers.set(i, o), this.maybeSetNormalizedName(n, i) } }) } : this.headers = new Map } has(t) { return this.init(), this.headers.has(t.toLowerCase()) } get(t) { this.init(); const n = this.headers.get(t.toLowerCase()); return n && n.length > 0 ? n[0] : null } keys() { return this.init(), Array.from(this.normalizedNames.values()) } getAll(t) { return this.init(), this.headers.get(t.toLowerCase()) || null } append(t, n) { return this.clone({ name: t, value: n, op: "a" }) } set(t, n) { return this.clone({ name: t, value: n, op: "s" }) } delete(t, n) { return this.clone({ name: t, value: n, op: "d" }) } maybeSetNormalizedName(t, n) { this.normalizedNames.has(n) || this.normalizedNames.set(n, t) } init() { this.lazyInit && (this.lazyInit instanceof on ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(t => this.applyUpdate(t)), this.lazyUpdate = null)) } copyFrom(t) { t.init(), Array.from(t.headers.keys()).forEach(n => { this.headers.set(n, t.headers.get(n)), this.normalizedNames.set(n, t.normalizedNames.get(n)) }) } clone(t) { const n = new on; return n.lazyInit = this.lazyInit && this.lazyInit instanceof on ? this.lazyInit : this, n.lazyUpdate = (this.lazyUpdate || []).concat([t]), n } applyUpdate(t) { const n = t.name.toLowerCase(); switch (t.op) { case "a": case "s": let r = t.value; if ("string" == typeof r && (r = [r]), 0 === r.length) return; this.maybeSetNormalizedName(t.name, n); const o = ("a" === t.op ? this.headers.get(n) : void 0) || []; o.push(...r), this.headers.set(n, o); break; case "d": const i = t.value; if (i) { let s = this.headers.get(n); if (!s) return; s = s.filter(a => -1 === i.indexOf(a)), 0 === s.length ? (this.headers.delete(n), this.normalizedNames.delete(n)) : this.headers.set(n, s) } else this.headers.delete(n), this.normalizedNames.delete(n) } } forEach(t) { this.init(), Array.from(this.normalizedNames.keys()).forEach(n => t(this.normalizedNames.get(n), this.headers.get(n))) } } class SF { encodeKey(t) { return VD(t) } encodeValue(t) { return VD(t) } decodeKey(t) { return decodeURIComponent(t) } decodeValue(t) { return decodeURIComponent(t) } } const AF = /%(\d[a-f0-9])/gi, TF = { 40: "@", "3A": ":", 24: "$", "2C": ",", "3B": ";", "3D": "=", "3F": "?", "2F": "/" }; function VD(e) { return encodeURIComponent(e).replace(AF, (t, n) => TF[n] ?? t) } function La(e) { return `${e}` } class Bn { constructor(t = {}) { if (this.updates = null, this.cloneFrom = null, this.encoder = t.encoder || new SF, t.fromString) { if (t.fromObject) throw new Error("Cannot specify both fromString and fromObject."); this.map = function IF(e, t) { const n = new Map; return e.length > 0 && e.replace(/^\?/, "").split("&").forEach(o => { const i = o.indexOf("="), [s, a] = -1 == i ? [t.decodeKey(o), ""] : [t.decodeKey(o.slice(0, i)), t.decodeValue(o.slice(i + 1))], l = n.get(s) || []; l.push(a), n.set(s, l) }), n }(t.fromString, this.encoder) } else t.fromObject ? (this.map = new Map, Object.keys(t.fromObject).forEach(n => { const r = t.fromObject[n], o = Array.isArray(r) ? r.map(La) : [La(r)]; this.map.set(n, o) })) : this.map = null } has(t) { return this.init(), this.map.has(t) } get(t) { this.init(); const n = this.map.get(t); return n ? n[0] : null } getAll(t) { return this.init(), this.map.get(t) || null } keys() { return this.init(), Array.from(this.map.keys()) } append(t, n) { return this.clone({ param: t, value: n, op: "a" }) } appendAll(t) { const n = []; return Object.keys(t).forEach(r => { const o = t[r]; Array.isArray(o) ? o.forEach(i => { n.push({ param: r, value: i, op: "a" }) }) : n.push({ param: r, value: o, op: "a" }) }), this.clone(n) } set(t, n) { return this.clone({ param: t, value: n, op: "s" }) } delete(t, n) { return this.clone({ param: t, value: n, op: "d" }) } toString() { return this.init(), this.keys().map(t => { const n = this.encoder.encodeKey(t); return this.map.get(t).map(r => n + "=" + this.encoder.encodeValue(r)).join("&") }).filter(t => "" !== t).join("&") } clone(t) { const n = new Bn({ encoder: this.encoder }); return n.cloneFrom = this.cloneFrom || this, n.updates = (this.updates || []).concat(t), n } init() { null === this.map && (this.map = new Map), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(t => this.map.set(t, this.cloneFrom.map.get(t))), this.updates.forEach(t => { switch (t.op) { case "a": case "s": const n = ("a" === t.op ? this.map.get(t.param) : void 0) || []; n.push(La(t.value)), this.map.set(t.param, n); break; case "d": if (void 0 === t.value) { this.map.delete(t.param); break } { let r = this.map.get(t.param) || []; const o = r.indexOf(La(t.value)); -1 !== o && r.splice(o, 1), r.length > 0 ? this.map.set(t.param, r) : this.map.delete(t.param) } } }), this.cloneFrom = this.updates = null) } } class xF { constructor() { this.map = new Map } set(t, n) { return this.map.set(t, n), this } get(t) { return this.map.has(t) || this.map.set(t, t.defaultValue()), this.map.get(t) } delete(t) { return this.map.delete(t), this } has(t) { return this.map.has(t) } keys() { return this.map.keys() } } function jD(e) { return typeof ArrayBuffer < "u" && e instanceof ArrayBuffer } function BD(e) { return typeof Blob < "u" && e instanceof Blob } function HD(e) { return typeof FormData < "u" && e instanceof FormData } class Ti { constructor(t, n, r, o) { let i; if (this.url = n, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = t.toUpperCase(), function RF(e) { switch (e) { case "DELETE": case "GET": case "HEAD": case "OPTIONS": case "JSONP": return !1; default: return !0 } }(this.method) || o ? (this.body = void 0 !== r ? r : null, i = o) : i = r, i && (this.reportProgress = !!i.reportProgress, this.withCredentials = !!i.withCredentials, i.responseType && (this.responseType = i.responseType), i.headers && (this.headers = i.headers), i.context && (this.context = i.context), i.params && (this.params = i.params)), this.headers || (this.headers = new on), this.context || (this.context = new xF), this.params) { const s = this.params.toString(); if (0 === s.length) this.urlWithParams = n; else { const a = n.indexOf("?"); this.urlWithParams = n + (-1 === a ? "?" : a < n.length - 1 ? "&" : "") + s } } else this.params = new Bn, this.urlWithParams = n } serializeBody() { return null === this.body ? null : jD(this.body) || BD(this.body) || HD(this.body) || function OF(e) { return typeof URLSearchParams < "u" && e instanceof URLSearchParams }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof Bn ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString() } detectContentTypeHeader() { return null === this.body || HD(this.body) ? null : BD(this.body) ? this.body.type || null : jD(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof Bn ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null } clone(t = {}) { const n = t.method || this.method, r = t.url || this.url, o = t.responseType || this.responseType, i = void 0 !== t.body ? t.body : this.body, s = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials, a = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress; let l = t.headers || this.headers, u = t.params || this.params; const c = t.context ?? this.context; return void 0 !== t.setHeaders && (l = Object.keys(t.setHeaders).reduce((d, f) => d.set(f, t.setHeaders[f]), l)), t.setParams && (u = Object.keys(t.setParams).reduce((d, f) => d.set(f, t.setParams[f]), u)), new Ti(n, r, i, { params: u, headers: l, context: c, reportProgress: a, responseType: o, withCredentials: s }) } } var Me = (() => ((Me = Me || {})[Me.Sent = 0] = "Sent", Me[Me.UploadProgress = 1] = "UploadProgress", Me[Me.ResponseHeader = 2] = "ResponseHeader", Me[Me.DownloadProgress = 3] = "DownloadProgress", Me[Me.Response = 4] = "Response", Me[Me.User = 5] = "User", Me))(); class Ud { constructor(t, n = 200, r = "OK") { this.headers = t.headers || new on, this.status = void 0 !== t.status ? t.status : n, this.statusText = t.statusText || r, this.url = t.url || null, this.ok = this.status >= 200 && this.status < 300 } } class zd extends Ud { constructor(t = {}) { super(t), this.type = Me.ResponseHeader } clone(t = {}) { return new zd({ headers: t.headers || this.headers, status: void 0 !== t.status ? t.status : this.status, statusText: t.statusText || this.statusText, url: t.url || this.url || void 0 }) } } class Va extends Ud { constructor(t = {}) { super(t), this.type = Me.Response, this.body = void 0 !== t.body ? t.body : null } clone(t = {}) { return new Va({ body: void 0 !== t.body ? t.body : this.body, headers: t.headers || this.headers, status: void 0 !== t.status ? t.status : this.status, statusText: t.statusText || this.statusText, url: t.url || this.url || void 0 }) } } class $D extends Ud { constructor(t) { super(t, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = !1, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${t.url || "(unknown url)"}` : `Http failure response for ${t.url || "(unknown url)"}: ${t.status} ${t.statusText}`, this.error = t.error || null } } function Gd(e, t) { return { body: t, headers: e.headers, context: e.context, observe: e.observe, params: e.params, reportProgress: e.reportProgress, responseType: e.responseType, withCredentials: e.withCredentials } } let UD = (() => { class e { constructor(n) { this.handler = n } request(n, r, o = {}) { let i; if (n instanceof Ti) i = n; else { let l, u; l = o.headers instanceof on ? o.headers : new on(o.headers), o.params && (u = o.params instanceof Bn ? o.params : new Bn({ fromObject: o.params })), i = new Ti(n, r, void 0 !== o.body ? o.body : null, { headers: l, context: o.context, params: u, reportProgress: o.reportProgress, responseType: o.responseType || "json", withCredentials: o.withCredentials }) } const s = T(i).pipe(kn(l => this.handler.handle(l))); if (n instanceof Ti || "events" === o.observe) return s; const a = s.pipe(Mn(l => l instanceof Va)); switch (o.observe || "body") { case "body": switch (i.responseType) { case "arraybuffer": return a.pipe(H(l => { if (null !== l.body && !(l.body instanceof ArrayBuffer)) throw new Error("Response is not an ArrayBuffer."); return l.body })); case "blob": return a.pipe(H(l => { if (null !== l.body && !(l.body instanceof Blob)) throw new Error("Response is not a Blob."); return l.body })); case "text": return a.pipe(H(l => { if (null !== l.body && "string" != typeof l.body) throw new Error("Response is not a string."); return l.body })); default: return a.pipe(H(l => l.body)) }case "response": return a; default: throw new Error(`Unreachable: unhandled observe type ${o.observe}}`) } } delete(n, r = {}) { return this.request("DELETE", n, r) } get(n, r = {}) { return this.request("GET", n, r) } head(n, r = {}) { return this.request("HEAD", n, r) } jsonp(n, r) { return this.request("JSONP", n, { params: (new Bn).append(r, "JSONP_CALLBACK"), observe: "body", responseType: "json" }) } options(n, r = {}) { return this.request("OPTIONS", n, r) } patch(n, r, o = {}) { return this.request("PATCH", n, Gd(o, r)) } post(n, r, o = {}) { return this.request("POST", n, Gd(o, r)) } put(n, r, o = {}) { return this.request("PUT", n, Gd(o, r)) } } return e.\u0275fac = function (n) { return new (n || e)(S(ka)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); function zD(e, t) { return t(e) } function PF(e, t) { return (n, r) => t.intercept(n, { handle: o => e(o, r) }) } const FF = new M("HTTP_INTERCEPTORS"), xi = new M("HTTP_INTERCEPTOR_FNS"); function kF() { let e = null; return (t, n) => (null === e && (e = ($(FF, { optional: !0 }) ?? []).reduceRight(PF, zD)), e(t, n)) } let GD = (() => { class e extends ka { constructor(n, r) { super(), this.backend = n, this.injector = r, this.chain = null } handle(n) { if (null === this.chain) { const r = Array.from(new Set(this.injector.get(xi))); this.chain = r.reduceRight((o, i) => function NF(e, t, n) { return (r, o) => n.runInContext(() => t(r, i => e(i, o))) }(o, i, this.injector), zD) } return this.chain(n, r => this.backend.handle(r)) } } return e.\u0275fac = function (n) { return new (n || e)(S($d), S(Zt)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const BF = /^\)\]\}',?\n/; let qD = (() => { class e { constructor(n) { this.xhrFactory = n } handle(n) { if ("JSONP" === n.method) throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed."); return new pe(r => { const o = this.xhrFactory.build(); if (o.open(n.method, n.urlWithParams), n.withCredentials && (o.withCredentials = !0), n.headers.forEach((h, p) => o.setRequestHeader(h, p.join(","))), n.headers.has("Accept") || o.setRequestHeader("Accept", "application/json, text/plain, */*"), !n.headers.has("Content-Type")) { const h = n.detectContentTypeHeader(); null !== h && o.setRequestHeader("Content-Type", h) } if (n.responseType) { const h = n.responseType.toLowerCase(); o.responseType = "json" !== h ? h : "text" } const i = n.serializeBody(); let s = null; const a = () => { if (null !== s) return s; const h = o.statusText || "OK", p = new on(o.getAllResponseHeaders()), g = function HF(e) { return "responseURL" in e && e.responseURL ? e.responseURL : /^X-Request-URL:/m.test(e.getAllResponseHeaders()) ? e.getResponseHeader("X-Request-URL") : null }(o) || n.url; return s = new zd({ headers: p, status: o.status, statusText: h, url: g }), s }, l = () => { let { headers: h, status: p, statusText: g, url: m } = a(), v = null; 204 !== p && (v = typeof o.response > "u" ? o.responseText : o.response), 0 === p && (p = v ? 200 : 0); let w = p >= 200 && p < 300; if ("json" === n.responseType && "string" == typeof v) { const y = v; v = v.replace(BF, ""); try { v = "" !== v ? JSON.parse(v) : null } catch (I) { v = y, w && (w = !1, v = { error: I, text: v }) } } w ? (r.next(new Va({ body: v, headers: h, status: p, statusText: g, url: m || void 0 })), r.complete()) : r.error(new $D({ error: v, headers: h, status: p, statusText: g, url: m || void 0 })) }, u = h => { const { url: p } = a(), g = new $D({ error: h, status: o.status || 0, statusText: o.statusText || "Unknown Error", url: p || void 0 }); r.error(g) }; let c = !1; const d = h => { c || (r.next(a()), c = !0); let p = { type: Me.DownloadProgress, loaded: h.loaded }; h.lengthComputable && (p.total = h.total), "text" === n.responseType && o.responseText && (p.partialText = o.responseText), r.next(p) }, f = h => { let p = { type: Me.UploadProgress, loaded: h.loaded }; h.lengthComputable && (p.total = h.total), r.next(p) }; return o.addEventListener("load", l), o.addEventListener("error", u), o.addEventListener("timeout", u), o.addEventListener("abort", u), n.reportProgress && (o.addEventListener("progress", d), null !== i && o.upload && o.upload.addEventListener("progress", f)), o.send(i), r.next({ type: Me.Sent }), () => { o.removeEventListener("error", u), o.removeEventListener("abort", u), o.removeEventListener("load", l), o.removeEventListener("timeout", u), n.reportProgress && (o.removeEventListener("progress", d), null !== i && o.upload && o.upload.removeEventListener("progress", f)), o.readyState !== o.DONE && o.abort() } }) } } return e.\u0275fac = function (n) { return new (n || e)(S(Xv)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); const Wd = new M("XSRF_ENABLED"), KD = new M("XSRF_COOKIE_NAME", { providedIn: "root", factory: () => "XSRF-TOKEN" }), ZD = new M("XSRF_HEADER_NAME", { providedIn: "root", factory: () => "X-XSRF-TOKEN" }); class YD { } let zF = (() => { class e { constructor(n, r, o) { this.doc = n, this.platform = r, this.cookieName = o, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0 } getToken() { if ("server" === this.platform) return null; const n = this.doc.cookie || ""; return n !== this.lastCookieString && (this.parseCount++, this.lastToken = jv(n, this.cookieName), this.lastCookieString = n), this.lastToken } } return e.\u0275fac = function (n) { return new (n || e)(S(Qe), S(bc), S(KD)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac }), e })(); function GF(e, t) { const n = e.url.toLowerCase(); if (!$(Wd) || "GET" === e.method || "HEAD" === e.method || n.startsWith("http://") || n.startsWith("https://")) return t(e); const r = $(YD).getToken(), o = $(ZD); return null != r && !e.headers.has(o) && (e = e.clone({ headers: e.headers.set(o, r) })), t(e) } var _e = (() => ((_e = _e || {})[_e.Interceptors = 0] = "Interceptors", _e[_e.LegacyInterceptors = 1] = "LegacyInterceptors", _e[_e.CustomXsrfConfiguration = 2] = "CustomXsrfConfiguration", _e[_e.NoXsrfProtection = 3] = "NoXsrfProtection", _e[_e.JsonpSupport = 4] = "JsonpSupport", _e[_e.RequestsMadeViaParent = 5] = "RequestsMadeViaParent", _e))(); function uo(e, t) { return { \u0275kind: e, \u0275providers: t } } function WF(...e) { const t = [UD, qD, GD, { provide: ka, useExisting: GD }, { provide: $d, useExisting: qD }, { provide: xi, useValue: GF, multi: !0 }, { provide: Wd, useValue: !0 }, { provide: YD, useClass: zF }]; for (const n of e) t.push(...n.\u0275providers); return function k0(e) { return { \u0275providers: e } }(t) } const QD = new M("LEGACY_INTERCEPTOR_FN"); let KF = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ providers: [WF(uo(_e.LegacyInterceptors, [{ provide: QD, useFactory: kF }, { provide: xi, useExisting: QD, multi: !0 }]))] }), e })(); const ZF = new on({ "Content-Type": "application/json" }); let YF = (() => { class e { constructor(n) { this.http = n, this.hostUrl = "/" } presentation(n) { return this.http.post(this.hostUrl + "presentation", n, { headers: ZF }) } } return e.\u0275fac = function (n) { return new (n || e)(S(UD)) }, e.\u0275prov = A({ token: e, factory: e.\u0275fac, providedIn: "root" }), e })(), XD = (() => { class e { constructor(n, r) { this._renderer = n, this._elementRef = r, this.onChange = o => { }, this.onTouched = () => { } } setProperty(n, r) { this._renderer.setProperty(this._elementRef.nativeElement, n, r) } registerOnTouched(n) { this.onTouched = n } registerOnChange(n) { this.onChange = n } setDisabledState(n) { this.setProperty("disabled", n) } } return e.\u0275fac = function (n) { return new (n || e)(D(mn), D(dt)) }, e.\u0275dir = N({ type: e }), e })(), lr = (() => { class e extends XD { } return e.\u0275fac = function () { let t; return function (r) { return (t || (t = Ne(e)))(r || e) } }(), e.\u0275dir = N({ type: e, features: [X] }), e })(); const sn = new M("NgValueAccessor"), JF = { provide: sn, useExisting: re(() => ja), multi: !0 }, t1 = new M("CompositionEventMode"); let ja = (() => { class e extends XD { constructor(n, r, o) { super(n, r), this._compositionMode = o, this._composing = !1, null == this._compositionMode && (this._compositionMode = !function e1() { const e = wn() ? wn().getUserAgent() : ""; return /android (\d+)/.test(e.toLowerCase()) }()) } writeValue(n) { this.setProperty("value", n ?? "") } _handleInput(n) { (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(n) } _compositionStart() { this._composing = !0 } _compositionEnd(n) { this._composing = !1, this._compositionMode && this.onChange(n) } } return e.\u0275fac = function (n) { return new (n || e)(D(mn), D(dt), D(t1, 8)) }, e.\u0275dir = N({ type: e, selectors: [["input", "formControlName", "", 3, "type", "checkbox"], ["textarea", "formControlName", ""], ["input", "formControl", "", 3, "type", "checkbox"], ["textarea", "formControl", ""], ["input", "ngModel", "", 3, "type", "checkbox"], ["textarea", "ngModel", ""], ["", "ngDefaultControl", ""]], hostBindings: function (n, r) { 1 & n && He("input", function (i) { return r._handleInput(i.target.value) })("blur", function () { return r.onTouched() })("compositionstart", function () { return r._compositionStart() })("compositionend", function (i) { return r._compositionEnd(i.target.value) }) }, features: [le([JF]), X] }), e })(); const n1 = !1; const Ue = new M("NgValidators"), $n = new M("NgAsyncValidators"); function rC(e) { return function Hn(e) { return null == e || ("string" == typeof e || Array.isArray(e)) && 0 === e.length }(e.value) ? { required: !0 } : null } function Ba(e) { return null } function uC(e) { return null != e } function cC(e) { const t = Yo(e) ? Ce(e) : e; if (n1 && !Ku(t)) { let n = "Expected async validator to return Promise or Observable."; throw "object" == typeof e && (n += " Are you using a synchronous validator where an async validator is expected?"), new C(-1101, n) } return t } function dC(e) { let t = {}; return e.forEach(n => { t = null != n ? { ...t, ...n } : t }), 0 === Object.keys(t).length ? null : t } function fC(e, t) { return t.map(n => n(e)) } function hC(e) { return e.map(t => function o1(e) { return !e.validate }(t) ? t : n => t.validate(n)) } function qd(e) { return null != e ? function pC(e) { if (!e) return null; const t = e.filter(uC); return 0 == t.length ? null : function (n) { return dC(fC(n, t)) } }(hC(e)) : null } function Kd(e) { return null != e ? function gC(e) { if (!e) return null; const t = e.filter(uC); return 0 == t.length ? null : function (n) { return function QF(...e) { const t = Lf(e), { args: n, keys: r } = E_(e), o = new pe(i => { const { length: s } = n; if (!s) return void i.complete(); const a = new Array(s); let l = s, u = s; for (let c = 0; c < s; c++) { let d = !1; yt(n[c]).subscribe(Se(i, f => { d || (d = !0, u--), a[c] = f }, () => l--, void 0, () => { (!l || !d) && (u || i.next(r ? M_(r, a) : a), i.complete()) })) } }); return t ? o.pipe(b_(t)) : o }(fC(n, t).map(cC)).pipe(H(dC)) } }(hC(e)) : null } function mC(e, t) { return null === e ? [t] : Array.isArray(e) ? [...e, t] : [e, t] } function Zd(e) { return e ? Array.isArray(e) ? e : [e] : [] } function Ha(e, t) { return Array.isArray(e) ? e.includes(t) : e === t } function _C(e, t) { const n = Zd(t); return Zd(e).forEach(o => { Ha(n, o) || n.push(o) }), n } function DC(e, t) { return Zd(t).filter(n => !Ha(e, n)) } class CC { constructor() { this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = [] } get value() { return this.control ? this.control.value : null } get valid() { return this.control ? this.control.valid : null } get invalid() { return this.control ? this.control.invalid : null } get pending() { return this.control ? this.control.pending : null } get disabled() { return this.control ? this.control.disabled : null } get enabled() { return this.control ? this.control.enabled : null } get errors() { return this.control ? this.control.errors : null } get pristine() { return this.control ? this.control.pristine : null } get dirty() { return this.control ? this.control.dirty : null } get touched() { return this.control ? this.control.touched : null } get status() { return this.control ? this.control.status : null } get untouched() { return this.control ? this.control.untouched : null } get statusChanges() { return this.control ? this.control.statusChanges : null } get valueChanges() { return this.control ? this.control.valueChanges : null } get path() { return null } _setValidators(t) { this._rawValidators = t || [], this._composedValidatorFn = qd(this._rawValidators) } _setAsyncValidators(t) { this._rawAsyncValidators = t || [], this._composedAsyncValidatorFn = Kd(this._rawAsyncValidators) } get validator() { return this._composedValidatorFn || null } get asyncValidator() { return this._composedAsyncValidatorFn || null } _registerOnDestroy(t) { this._onDestroyCallbacks.push(t) } _invokeOnDestroyCallbacks() { this._onDestroyCallbacks.forEach(t => t()), this._onDestroyCallbacks = [] } reset(t) { this.control && this.control.reset(t) } hasError(t, n) { return !!this.control && this.control.hasError(t, n) } getError(t, n) { return this.control ? this.control.getError(t, n) : null } } class Xe extends CC { get formDirective() { return null } get path() { return null } } class Un extends CC { constructor() { super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null } } class wC { constructor(t) { this._cd = t } get isTouched() { return !!this._cd?.control?.touched } get isUntouched() { return !!this._cd?.control?.untouched } get isPristine() { return !!this._cd?.control?.pristine } get isDirty() { return !!this._cd?.control?.dirty } get isValid() { return !!this._cd?.control?.valid } get isInvalid() { return !!this._cd?.control?.invalid } get isPending() { return !!this._cd?.control?.pending } get isSubmitted() { return !!this._cd?.submitted } } let EC = (() => { class e extends wC { constructor(n) { super(n) } } return e.\u0275fac = function (n) { return new (n || e)(D(Un, 2)) }, e.\u0275dir = N({ type: e, selectors: [["", "formControlName", ""], ["", "ngModel", ""], ["", "formControl", ""]], hostVars: 14, hostBindings: function (n, r) { 2 & n && Ns("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)("ng-pristine", r.isPristine)("ng-dirty", r.isDirty)("ng-valid", r.isValid)("ng-invalid", r.isInvalid)("ng-pending", r.isPending) }, features: [X] }), e })(), bC = (() => { class e extends wC { constructor(n) { super(n) } } return e.\u0275fac = function (n) { return new (n || e)(D(Xe, 10)) }, e.\u0275dir = N({ type: e, selectors: [["", "formGroupName", ""], ["", "formArrayName", ""], ["", "ngModelGroup", ""], ["", "formGroup", ""], ["form", 3, "ngNoForm", ""], ["", "ngForm", ""]], hostVars: 16, hostBindings: function (n, r) { 2 & n && Ns("ng-untouched", r.isUntouched)("ng-touched", r.isTouched)("ng-pristine", r.isPristine)("ng-dirty", r.isDirty)("ng-valid", r.isValid)("ng-invalid", r.isInvalid)("ng-pending", r.isPending)("ng-submitted", r.isSubmitted) }, features: [X] }), e })(); function MC(e, t) { return e ? `with name: '${t}'` : `at index: ${t}` } const Xd = !1, Ri = "VALID", Ua = "INVALID", co = "PENDING", Oi = "DISABLED"; function Jd(e) { return (za(e) ? e.validators : e) || null } function ef(e, t) { return (za(t) ? t.asyncValidators : e) || null } function za(e) { return null != e && !Array.isArray(e) && "object" == typeof e } class AC { constructor(t, n) { this._pendingDirty = !1, this._hasOwnPendingAsyncValidator = !1, this._pendingTouched = !1, this._onCollectionChange = () => { }, this._parent = null, this.pristine = !0, this.touched = !1, this._onDisabledChange = [], this._assignValidators(t), this._assignAsyncValidators(n) } get validator() { return this._composedValidatorFn } set validator(t) { this._rawValidators = this._composedValidatorFn = t } get asyncValidator() { return this._composedAsyncValidatorFn } set asyncValidator(t) { this._rawAsyncValidators = this._composedAsyncValidatorFn = t } get parent() { return this._parent } get valid() { return this.status === Ri } get invalid() { return this.status === Ua } get pending() { return this.status == co } get disabled() { return this.status === Oi } get enabled() { return this.status !== Oi } get dirty() { return !this.pristine } get untouched() { return !this.touched } get updateOn() { return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change" } setValidators(t) { this._assignValidators(t) } setAsyncValidators(t) { this._assignAsyncValidators(t) } addValidators(t) { this.setValidators(_C(t, this._rawValidators)) } addAsyncValidators(t) { this.setAsyncValidators(_C(t, this._rawAsyncValidators)) } removeValidators(t) { this.setValidators(DC(t, this._rawValidators)) } removeAsyncValidators(t) { this.setAsyncValidators(DC(t, this._rawAsyncValidators)) } hasValidator(t) { return Ha(this._rawValidators, t) } hasAsyncValidator(t) { return Ha(this._rawAsyncValidators, t) } clearValidators() { this.validator = null } clearAsyncValidators() { this.asyncValidator = null } markAsTouched(t = {}) { this.touched = !0, this._parent && !t.onlySelf && this._parent.markAsTouched(t) } markAllAsTouched() { this.markAsTouched({ onlySelf: !0 }), this._forEachChild(t => t.markAllAsTouched()) } markAsUntouched(t = {}) { this.touched = !1, this._pendingTouched = !1, this._forEachChild(n => { n.markAsUntouched({ onlySelf: !0 }) }), this._parent && !t.onlySelf && this._parent._updateTouched(t) } markAsDirty(t = {}) { this.pristine = !1, this._parent && !t.onlySelf && this._parent.markAsDirty(t) } markAsPristine(t = {}) { this.pristine = !0, this._pendingDirty = !1, this._forEachChild(n => { n.markAsPristine({ onlySelf: !0 }) }), this._parent && !t.onlySelf && this._parent._updatePristine(t) } markAsPending(t = {}) { this.status = co, !1 !== t.emitEvent && this.statusChanges.emit(this.status), this._parent && !t.onlySelf && this._parent.markAsPending(t) } disable(t = {}) { const n = this._parentMarkedDirty(t.onlySelf); this.status = Oi, this.errors = null, this._forEachChild(r => { r.disable({ ...t, onlySelf: !0 }) }), this._updateValue(), !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors({ ...t, skipPristineCheck: n }), this._onDisabledChange.forEach(r => r(!0)) } enable(t = {}) { const n = this._parentMarkedDirty(t.onlySelf); this.status = Ri, this._forEachChild(r => { r.enable({ ...t, onlySelf: !0 }) }), this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }), this._updateAncestors({ ...t, skipPristineCheck: n }), this._onDisabledChange.forEach(r => r(!1)) } _updateAncestors(t) { this._parent && !t.onlySelf && (this._parent.updateValueAndValidity(t), t.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched()) } setParent(t) { this._parent = t } getRawValue() { return this.value } updateValueAndValidity(t = {}) { this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === Ri || this.status === co) && this._runAsyncValidator(t.emitEvent)), !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !t.onlySelf && this._parent.updateValueAndValidity(t) } _updateTreeValidity(t = { emitEvent: !0 }) { this._forEachChild(n => n._updateTreeValidity(t)), this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }) } _setInitialStatus() { this.status = this._allControlsDisabled() ? Oi : Ri } _runValidator() { return this.validator ? this.validator(this) : null } _runAsyncValidator(t) { if (this.asyncValidator) { this.status = co, this._hasOwnPendingAsyncValidator = !0; const n = cC(this.asyncValidator(this)); this._asyncValidationSubscription = n.subscribe(r => { this._hasOwnPendingAsyncValidator = !1, this.setErrors(r, { emitEvent: t }) }) } } _cancelExistingSubscription() { this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1) } setErrors(t, n = {}) { this.errors = t, this._updateControlsErrors(!1 !== n.emitEvent) } get(t) { let n = t; return null == n || (Array.isArray(n) || (n = n.split(".")), 0 === n.length) ? null : n.reduce((r, o) => r && r._find(o), this) } getError(t, n) { const r = n ? this.get(n) : this; return r && r.errors ? r.errors[t] : null } hasError(t, n) { return !!this.getError(t, n) } get root() { let t = this; for (; t._parent;)t = t._parent; return t } _updateControlsErrors(t) { this.status = this._calculateStatus(), t && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(t) } _initObservables() { this.valueChanges = new he, this.statusChanges = new he } _calculateStatus() { return this._allControlsDisabled() ? Oi : this.errors ? Ua : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(co) ? co : this._anyControlsHaveStatus(Ua) ? Ua : Ri } _anyControlsHaveStatus(t) { return this._anyControls(n => n.status === t) } _anyControlsDirty() { return this._anyControls(t => t.dirty) } _anyControlsTouched() { return this._anyControls(t => t.touched) } _updatePristine(t = {}) { this.pristine = !this._anyControlsDirty(), this._parent && !t.onlySelf && this._parent._updatePristine(t) } _updateTouched(t = {}) { this.touched = this._anyControlsTouched(), this._parent && !t.onlySelf && this._parent._updateTouched(t) } _registerOnCollectionChange(t) { this._onCollectionChange = t } _setUpdateStrategy(t) { za(t) && null != t.updateOn && (this._updateOn = t.updateOn) } _parentMarkedDirty(t) { return !t && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty() } _find(t) { return null } _assignValidators(t) { this._rawValidators = Array.isArray(t) ? t.slice() : t, this._composedValidatorFn = function d1(e) { return Array.isArray(e) ? qd(e) : e || null }(this._rawValidators) } _assignAsyncValidators(t) { this._rawAsyncValidators = Array.isArray(t) ? t.slice() : t, this._composedAsyncValidatorFn = function f1(e) { return Array.isArray(e) ? Kd(e) : e || null }(this._rawAsyncValidators) } } class tf extends AC { constructor(t, n, r) { super(Jd(n), ef(r, n)), this.controls = t, this._initObservables(), this._setUpdateStrategy(n), this._setUpControls(), this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator }) } registerControl(t, n) { return this.controls[t] ? this.controls[t] : (this.controls[t] = n, n.setParent(this), n._registerOnCollectionChange(this._onCollectionChange), n) } addControl(t, n, r = {}) { this.registerControl(t, n), this.updateValueAndValidity({ emitEvent: r.emitEvent }), this._onCollectionChange() } removeControl(t, n = {}) { this.controls[t] && this.controls[t]._registerOnCollectionChange(() => { }), delete this.controls[t], this.updateValueAndValidity({ emitEvent: n.emitEvent }), this._onCollectionChange() } setControl(t, n, r = {}) { this.controls[t] && this.controls[t]._registerOnCollectionChange(() => { }), delete this.controls[t], n && this.registerControl(t, n), this.updateValueAndValidity({ emitEvent: r.emitEvent }), this._onCollectionChange() } contains(t) { return this.controls.hasOwnProperty(t) && this.controls[t].enabled } setValue(t, n = {}) { (function IC(e, t, n) { e._forEachChild((r, o) => { if (void 0 === n[o]) throw new C(1002, Xd ? function c1(e, t) { return `Must supply a value for form control ${MC(e, t)}` }(t, o) : "") }) })(this, !0, t), Object.keys(t).forEach(r => { (function SC(e, t, n) { const r = e.controls; if (!(t ? Object.keys(r) : r).length) throw new C(1e3, Xd ? function l1(e) { return `\n    There are no form controls registered with this ${e ? "group" : "array"} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  ` }(t) : ""); if (!r[n]) throw new C(1001, Xd ? function u1(e, t) { return `Cannot find form control ${MC(e, t)}` }(t, n) : "") })(this, !0, r), this.controls[r].setValue(t[r], { onlySelf: !0, emitEvent: n.emitEvent }) }), this.updateValueAndValidity(n) } patchValue(t, n = {}) { null != t && (Object.keys(t).forEach(r => { const o = this.controls[r]; o && o.patchValue(t[r], { onlySelf: !0, emitEvent: n.emitEvent }) }), this.updateValueAndValidity(n)) } reset(t = {}, n = {}) { this._forEachChild((r, o) => { r.reset(t[o], { onlySelf: !0, emitEvent: n.emitEvent }) }), this._updatePristine(n), this._updateTouched(n), this.updateValueAndValidity(n) } getRawValue() { return this._reduceChildren({}, (t, n, r) => (t[r] = n.getRawValue(), t)) } _syncPendingControls() { let t = this._reduceChildren(!1, (n, r) => !!r._syncPendingControls() || n); return t && this.updateValueAndValidity({ onlySelf: !0 }), t } _forEachChild(t) { Object.keys(this.controls).forEach(n => { const r = this.controls[n]; r && t(r, n) }) } _setUpControls() { this._forEachChild(t => { t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange) }) } _updateValue() { this.value = this._reduceValue() } _anyControls(t) { for (const [n, r] of Object.entries(this.controls)) if (this.contains(n) && t(r)) return !0; return !1 } _reduceValue() { return this._reduceChildren({}, (n, r, o) => ((r.enabled || this.disabled) && (n[o] = r.value), n)) } _reduceChildren(t, n) { let r = t; return this._forEachChild((o, i) => { r = n(r, o, i) }), r } _allControlsDisabled() { for (const t of Object.keys(this.controls)) if (this.controls[t].enabled) return !1; return Object.keys(this.controls).length > 0 || this.disabled } _find(t) { return this.controls.hasOwnProperty(t) ? this.controls[t] : null } } const fo = new M("CallSetDisabledState", { providedIn: "root", factory: () => Ga }), Ga = "always"; function Pi(e, t, n = Ga) { nf(e, t), t.valueAccessor.writeValue(e.value), (e.disabled || "always" === n) && t.valueAccessor.setDisabledState?.(e.disabled), function g1(e, t) { t.valueAccessor.registerOnChange(n => { e._pendingValue = n, e._pendingChange = !0, e._pendingDirty = !0, "change" === e.updateOn && TC(e, t) }) }(e, t), function y1(e, t) { const n = (r, o) => { t.valueAccessor.writeValue(r), o && t.viewToModelUpdate(r) }; e.registerOnChange(n), t._registerOnDestroy(() => { e._unregisterOnChange(n) }) }(e, t), function m1(e, t) { t.valueAccessor.registerOnTouched(() => { e._pendingTouched = !0, "blur" === e.updateOn && e._pendingChange && TC(e, t), "submit" !== e.updateOn && e.markAsTouched() }) }(e, t), function p1(e, t) { if (t.valueAccessor.setDisabledState) { const n = r => { t.valueAccessor.setDisabledState(r) }; e.registerOnDisabledChange(n), t._registerOnDestroy(() => { e._unregisterOnDisabledChange(n) }) } }(e, t) } function Ka(e, t) { e.forEach(n => { n.registerOnValidatorChange && n.registerOnValidatorChange(t) }) } function nf(e, t) { const n = function yC(e) { return e._rawValidators }(e); null !== t.validator ? e.setValidators(mC(n, t.validator)) : "function" == typeof n && e.setValidators([n]); const r = function vC(e) { return e._rawAsyncValidators }(e); null !== t.asyncValidator ? e.setAsyncValidators(mC(r, t.asyncValidator)) : "function" == typeof r && e.setAsyncValidators([r]); const o = () => e.updateValueAndValidity(); Ka(t._rawValidators, o), Ka(t._rawAsyncValidators, o) } function TC(e, t) { e._pendingDirty && e.markAsDirty(), e.setValue(e._pendingValue, { emitModelToViewChange: !1 }), t.viewToModelUpdate(e._pendingValue), e._pendingChange = !1 } const w1 = { provide: Xe, useExisting: re(() => Ya) }, Ni = (() => Promise.resolve())(); let Ya = (() => { class e extends Xe { constructor(n, r, o) { super(), this.callSetDisabledState = o, this.submitted = !1, this._directives = new Set, this.ngSubmit = new he, this.form = new tf({}, qd(n), Kd(r)) } ngAfterViewInit() { this._setUpdateStrategy() } get formDirective() { return this } get control() { return this.form } get path() { return [] } get controls() { return this.form.controls } addControl(n) { Ni.then(() => { const r = this._findContainer(n.path); n.control = r.registerControl(n.name, n.control), Pi(n.control, n, this.callSetDisabledState), n.control.updateValueAndValidity({ emitEvent: !1 }), this._directives.add(n) }) } getControl(n) { return this.form.get(n.path) } removeControl(n) { Ni.then(() => { const r = this._findContainer(n.path); r && r.removeControl(n.name), this._directives.delete(n) }) } addFormGroup(n) { Ni.then(() => { const r = this._findContainer(n.path), o = new tf({}); (function xC(e, t) { nf(e, t) })(o, n), r.registerControl(n.name, o), o.updateValueAndValidity({ emitEvent: !1 }) }) } removeFormGroup(n) { Ni.then(() => { const r = this._findContainer(n.path); r && r.removeControl(n.name) }) } getFormGroup(n) { return this.form.get(n.path) } updateModel(n, r) { Ni.then(() => { this.form.get(n.path).setValue(r) }) } setValue(n) { this.control.setValue(n) } onSubmit(n) { return this.submitted = !0, function RC(e, t) { e._syncPendingControls(), t.forEach(n => { const r = n.control; "submit" === r.updateOn && r._pendingChange && (n.viewToModelUpdate(r._pendingValue), r._pendingChange = !1) }) }(this.form, this._directives), this.ngSubmit.emit(n), "dialog" === n?.target?.method } onReset() { this.resetForm() } resetForm(n) { this.form.reset(n), this.submitted = !1 } _setUpdateStrategy() { this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn) } _findContainer(n) { return n.pop(), n.length ? this.form.get(n) : this.form } } return e.\u0275fac = function (n) { return new (n || e)(D(Ue, 10), D($n, 10), D(fo, 8)) }, e.\u0275dir = N({ type: e, selectors: [["form", 3, "ngNoForm", "", 3, "formGroup", ""], ["ng-form"], ["", "ngForm", ""]], hostBindings: function (n, r) { 1 & n && He("submit", function (i) { return r.onSubmit(i) })("reset", function () { return r.onReset() }) }, inputs: { options: ["ngFormOptions", "options"] }, outputs: { ngSubmit: "ngSubmit" }, exportAs: ["ngForm"], features: [le([w1]), X] }), e })(); function OC(e, t) { const n = e.indexOf(t); n > -1 && e.splice(n, 1) } function PC(e) { return "object" == typeof e && null !== e && 2 === Object.keys(e).length && "value" in e && "disabled" in e } const NC = class extends AC { constructor(t = null, n, r) { super(Jd(n), ef(r, n)), this.defaultValue = null, this._onChange = [], this._pendingChange = !1, this._applyFormState(t), this._setUpdateStrategy(n), this._initObservables(), this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!this.asyncValidator }), za(n) && (n.nonNullable || n.initialValueIsDefault) && (this.defaultValue = PC(t) ? t.value : t) } setValue(t, n = {}) { this.value = this._pendingValue = t, this._onChange.length && !1 !== n.emitModelToViewChange && this._onChange.forEach(r => r(this.value, !1 !== n.emitViewToModelChange)), this.updateValueAndValidity(n) } patchValue(t, n = {}) { this.setValue(t, n) } reset(t = this.defaultValue, n = {}) { this._applyFormState(t), this.markAsPristine(n), this.markAsUntouched(n), this.setValue(this.value, n), this._pendingChange = !1 } _updateValue() { } _anyControls(t) { return !1 } _allControlsDisabled() { return this.disabled } registerOnChange(t) { this._onChange.push(t) } _unregisterOnChange(t) { OC(this._onChange, t) } registerOnDisabledChange(t) { this._onDisabledChange.push(t) } _unregisterOnDisabledChange(t) { OC(this._onDisabledChange, t) } _forEachChild(t) { } _syncPendingControls() { return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, { onlySelf: !0, emitModelToViewChange: !1 }), 0)) } _applyFormState(t) { PC(t) ? (this.value = this._pendingValue = t.value, t.disabled ? this.disable({ onlySelf: !0, emitEvent: !1 }) : this.enable({ onlySelf: !0, emitEvent: !1 })) : this.value = this._pendingValue = t } }, M1 = { provide: Un, useExisting: re(() => lf) }, LC = (() => Promise.resolve())(); let lf = (() => { class e extends Un { constructor(n, r, o, i, s, a) { super(), this._changeDetectorRef = s, this.callSetDisabledState = a, this.control = new NC, this._registered = !1, this.update = new he, this._parent = n, this._setValidators(r), this._setAsyncValidators(o), this.valueAccessor = function af(e, t) { if (!t) return null; let n, r, o; return Array.isArray(t), t.forEach(i => { i.constructor === ja ? n = i : function D1(e) { return Object.getPrototypeOf(e.constructor) === lr }(i) ? r = i : o = i }), o || r || n || null }(0, i) } ngOnChanges(n) { if (this._checkForErrors(), !this._registered || "name" in n) { if (this._registered && (this._checkName(), this.formDirective)) { const r = n.name.previousValue; this.formDirective.removeControl({ name: r, path: this._getPath(r) }) } this._setUpControl() } "isDisabled" in n && this._updateDisabled(n), function sf(e, t) { if (!e.hasOwnProperty("model")) return !1; const n = e.model; return !!n.isFirstChange() || !Object.is(t, n.currentValue) }(n, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model) } ngOnDestroy() { this.formDirective && this.formDirective.removeControl(this) } get path() { return this._getPath(this.name) } get formDirective() { return this._parent ? this._parent.formDirective : null } viewToModelUpdate(n) { this.viewModel = n, this.update.emit(n) } _setUpControl() { this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = !0 } _setUpdateStrategy() { this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn) } _isStandalone() { return !this._parent || !(!this.options || !this.options.standalone) } _setUpStandalone() { Pi(this.control, this, this.callSetDisabledState), this.control.updateValueAndValidity({ emitEvent: !1 }) } _checkForErrors() { this._isStandalone() || this._checkParentType(), this._checkName() } _checkParentType() { } _checkName() { this.options && this.options.name && (this.name = this.options.name), this._isStandalone() } _updateValue(n) { LC.then(() => { this.control.setValue(n, { emitViewToModelChange: !1 }), this._changeDetectorRef?.markForCheck() }) } _updateDisabled(n) { const r = n.isDisabled.currentValue, o = 0 !== r && Qr(r); LC.then(() => { o && !this.control.disabled ? this.control.disable() : !o && this.control.disabled && this.control.enable(), this._changeDetectorRef?.markForCheck() }) } _getPath(n) { return this._parent ? function Wa(e, t) { return [...t.path, e] }(n, this._parent) : [n] } } return e.\u0275fac = function (n) { return new (n || e)(D(Xe, 9), D(Ue, 10), D($n, 10), D(sn, 10), D(Zs, 8), D(fo, 8)) }, e.\u0275dir = N({ type: e, selectors: [["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]], inputs: { name: "name", isDisabled: ["disabled", "isDisabled"], model: ["ngModel", "model"], options: ["ngModelOptions", "options"] }, outputs: { update: "ngModelChange" }, exportAs: ["ngModel"], features: [le([M1]), X, Ct] }), e })(), VC = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275dir = N({ type: e, selectors: [["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""]], hostAttrs: ["novalidate", ""] }), e })(), BC = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({}), e })(), ur = (() => { class e { constructor() { this._validator = Ba } ngOnChanges(n) { if (this.inputName in n) { const r = this.normalizeInput(n[this.inputName].currentValue); this._enabled = this.enabled(r), this._validator = this._enabled ? this.createValidator(r) : Ba, this._onChange && this._onChange() } } validate(n) { return this._validator(n) } registerOnValidatorChange(n) { this._onChange = n } enabled(n) { return null != n } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275dir = N({ type: e, features: [Ct] }), e })(); const U1 = { provide: Ue, useExisting: re(() => Qa), multi: !0 }; let Qa = (() => { class e extends ur { constructor() { super(...arguments), this.inputName = "required", this.normalizeInput = Qr, this.createValidator = n => rC } enabled(n) { return n } } return e.\u0275fac = function () { let t; return function (r) { return (t || (t = Ne(e)))(r || e) } }(), e.\u0275dir = N({ type: e, selectors: [["", "required", "", "formControlName", "", 3, "type", "checkbox"], ["", "required", "", "formControl", "", 3, "type", "checkbox"], ["", "required", "", "ngModel", "", 3, "type", "checkbox"]], hostVars: 1, hostBindings: function (n, r) { 2 & n && Jt("required", r._enabled ? "" : null) }, inputs: { required: "required" }, features: [le([U1]), X] }), e })(), Z1 = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ imports: [BC] }), e })(), Q1 = (() => { class e { static withConfig(n) { return { ngModule: e, providers: [{ provide: fo, useValue: n.callSetDisabledState ?? Ga }] } } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ imports: [Z1] }), e })(), X1 = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275cmp = Co({ type: e, selectors: [["app-nav-bar"]], decls: 24, vars: 0, consts: [[1, "nav"], ["type", "checkbox", "id", "nav-check"], [1, "nav-header"], [1, "nav-title"], [1, "nav-btn"], ["for", "nav-check"], [1, "nav-links"], ["routerLink", "/home"], [1, "signup-login"], ["role", "button", 1, "button-17"], ["role", "button", 1, "button-18"]], template: function (n, r) { 1 & n && (J(0, "div", 0), ht(1, "input", 1), J(2, "div", 2)(3, "div", 3), Ke(4, " Logo "), oe()(), J(5, "div", 4)(6, "label", 5), ht(7, "span")(8, "span")(9, "span"), oe()(), J(10, "div", 6)(11, "a", 7), Ke(12, "Home"), oe(), J(13, "a"), Ke(14, "Presentation"), oe(), J(15, "a"), Ke(16, "Contact Us"), oe(), J(17, "a"), Ke(18, "About Us"), oe(), J(19, "div", 8)(20, "button", 9), Ke(21, "Login"), oe(), J(22, "button", 10), Ke(23, "Signup"), oe()()()()) }, dependencies: [Fa], styles: [".nav[_ngcontent-%COMP%]{height:60px;width:100%;background-color:#fff;display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}.nav[_ngcontent-%COMP%] > .nav-header[_ngcontent-%COMP%]{display:inline;z-index:22}.nav[_ngcontent-%COMP%] > .nav-header[_ngcontent-%COMP%] > .nav-title[_ngcontent-%COMP%]{display:inline-block;font-size:35px;color:#000;padding:10px;margin-left:20px}.nav[_ngcontent-%COMP%] > .nav-btn[_ngcontent-%COMP%]{z-index:20;display:none}.nav[_ngcontent-%COMP%] > .nav-links[_ngcontent-%COMP%]{z-index:20;display:inline;margin-top:10px;font-size:16px;margin-right:25px}.nav[_ngcontent-%COMP%] > .nav-links[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{display:inline-block;padding:13px 10px;text-decoration:none;color:#000}.nav[_ngcontent-%COMP%] > .nav-links[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]:hover{cursor:pointer;color:#174ea6}.nav[_ngcontent-%COMP%] > #nav-check[_ngcontent-%COMP%]{display:none}.signup-login[_ngcontent-%COMP%]{display:inline-block;margin-top:7px;margin-left:25px;margin-right:10px}@media (max-width:768px){.nav[_ngcontent-%COMP%] > .nav-btn[_ngcontent-%COMP%]{display:inline-block;position:absolute;right:0;top:0}.nav[_ngcontent-%COMP%] > .nav-btn[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{display:inline-block;width:50px;height:50px;padding:13px}.nav[_ngcontent-%COMP%] > .nav-btn[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]:hover, .nav[_ngcontent-%COMP%]   #nav-check[_ngcontent-%COMP%]:checked ~ .nav-btn[_ngcontent-%COMP%] > label[_ngcontent-%COMP%]{background-color:#d3d3d3;cursor:pointer}.nav[_ngcontent-%COMP%] > .nav-btn[_ngcontent-%COMP%] > label[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{display:block;width:25px;height:10px;border-top:2px solid black}.nav[_ngcontent-%COMP%] > .nav-links[_ngcontent-%COMP%]{position:absolute;display:block;width:100%;background-color:#fff;height:0px;transition:all .3s ease-in;overflow-y:hidden;top:50px;left:0}.nav[_ngcontent-%COMP%] > .nav-links[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{display:block;width:100%;text-align:center;margin-bottom:20px}.nav[_ngcontent-%COMP%] > #nav-check[_ngcontent-%COMP%]:not(:checked) ~ .nav-links[_ngcontent-%COMP%]{height:0px}.nav[_ngcontent-%COMP%] > #nav-check[_ngcontent-%COMP%]:checked ~ .nav-links[_ngcontent-%COMP%]{height:calc(100vh - 60px);overflow:hidden;flex-direction:column}.nav[_ngcontent-%COMP%] > #nav-check[_ngcontent-%COMP%]:checked ~ .nav-links[_ngcontent-%COMP%]{padding-top:40px}.signup-login[_ngcontent-%COMP%]{text-align:center;margin:0;width:100%}}.button-17[_ngcontent-%COMP%], .button-18[_ngcontent-%COMP%]{align-items:center;-webkit-appearance:none;appearance:none;background-color:#fff;border-radius:24px;border-style:none;box-shadow:#0003 0 3px 5px -1px,#00000024 0 6px 10px,#0000001f 0 1px 18px;box-sizing:border-box;color:#3c4043;cursor:pointer;display:inline-flex;fill:currentcolor;font-family:Google Sans,Roboto,Arial,sans-serif;font-size:14px;font-weight:500;height:30px;justify-content:center;letter-spacing:.25px;line-height:normal;max-width:100%;overflow:visible;padding:2px 24px;position:relative;text-align:center;text-transform:none;transition:box-shadow .28s cubic-bezier(.4,0,.2,1),opacity 15ms linear 30ms,transform .27s cubic-bezier(0,0,.2,1) 0ms;user-select:none;-webkit-user-select:none;touch-action:manipulation;width:auto;will-change:transform,opacity;z-index:0}.button-17[_ngcontent-%COMP%]:hover{background:#F6F9FE;color:#174ea6}.button-17[_ngcontent-%COMP%]:active{box-shadow:0 4px 4px #3c40434d,0 8px 12px 6px #3c404326;outline:none}.button-17[_ngcontent-%COMP%]:not(:disabled){box-shadow:#3c40434d 0 1px 3px,#3c404326 0 4px 8px 3px}.button-17[_ngcontent-%COMP%]:not(:disabled):hover{box-shadow:#3c40434d 0 2px 3px,#3c404326 0 6px 10px 4px}.button-17[_ngcontent-%COMP%]:not(:disabled):focus{box-shadow:#3c40434d 0 1px 3px,#3c404326 0 4px 8px 3px}.button-17[_ngcontent-%COMP%]:not(:disabled):active{box-shadow:#3c40434d 0 4px 4px,#3c404326 0 8px 12px 6px}.button-17[_ngcontent-%COMP%]:disabled{box-shadow:#3c40434d 0 1px 3px,#3c404326 0 4px 8px 3px}.button-18[_ngcontent-%COMP%]{background-color:#0a66c2;margin-left:20px;border:0;color:#fff;transition:background-color .167s cubic-bezier(.4,0,.2,1) 0s,box-shadow .167s cubic-bezier(.4,0,.2,1) 0s,color .167s cubic-bezier(.4,0,.2,1) 0s}.button-18[_ngcontent-%COMP%]:hover, .button-18[_ngcontent-%COMP%]:focus{background-color:#16437e;color:#fff}.button-18[_ngcontent-%COMP%]:active{background:#09223b;color:#ffffffb3}.button-18[_ngcontent-%COMP%]:disabled{cursor:not-allowed;background:rgba(0,0,0,.08);color:#0000004d}"] }), e })(); function J1(e, t) { if (1 & e) { const n = Os(); J(0, "button", 10), He("click", function () { return So(n), Io(St(2).generatePrensentation()) }), Ke(1, "Generate Presentation"), oe() } } function ek(e, t) { 1 & e && (J(0, "div", 11), ht(1, "div", 12)(2, "div", 12)(3, "div", 12), oe()) } function tk(e, t) { 1 & e && ht(0, "div") } function nk(e, t) { if (1 & e) { const n = Os(); J(0, "form", 2)(1, "div", 3), ht(2, "img", 4), J(3, "div", 5)(4, "h3"), Ke(5, "Type Any Presentation Topic"), oe()(), J(6, "input", 6), He("ngModelChange", function (o) { return So(n), Io(St().promptInput = o) }), oe(), Mt(7, J1, 2, 0, "button", 7), Mt(8, ek, 4, 0, "div", 8), Mt(9, tk, 1, 0, "div", 9), oe()() } if (2 & e) { const n = St(); qe(6), kt(n.borderRed), ot("ngModel", n.promptInput), qe(1), ot("ngIf", n.generateBtn), qe(1), ot("ngIf", n.isLoading), qe(1), ot("ngIf", !n.isLoading) } } function rk(e, t) { if (1 & e && (J(0, "div", 24)(1, "div", 25)(2, "h1"), Ke(3), oe(), J(4, "p"), Ke(5), oe()(), J(6, "div", 26), ht(7, "img", 27), oe()()), 2 & e) { const n = St().$implicit; qe(3), Gr(n.heading), qe(2), Gr(n.content), qe(2), ot("src", n.link, gu) } } function ok(e, t) { if (1 & e && (J(0, "div", 29)(1, "h1"), Ke(2), oe()()), 2 & e) { const n = St(2).$implicit; qe(2), Gr(n.name) } } function ik(e, t) { if (1 & e && Mt(0, ok, 3, 1, "div", 28), 2 & e) { const n = St().$implicit, r = zu(5); ot("ngIf", n.name)("ngIfElse", r) } } function sk(e, t) { if (1 & e && (J(0, "li")(1, "a", 32), Ke(2), oe()()), 2 & e) { const n = t.$implicit; qe(2), Gr(n) } } function ak(e, t) { if (1 & e && (J(0, "div", 30)(1, "h2"), Ke(2, "Table of Contents"), oe(), J(3, "ol"), Mt(4, sk, 3, 1, "li", 31), oe()()), 2 & e) { const n = St().$implicit; qe(4), ot("ngForOf", n.table_of_contents) } } const lk = function (e) { return { active: e } }; function uk(e, t) { if (1 & e && (J(0, "div", 20), Mt(1, rk, 8, 3, "div", 21), Mt(2, ik, 1, 2, "ng-template", null, 22, yc), Mt(4, ak, 5, 1, "ng-template", null, 23, yc), oe()), 2 & e) { const n = t.$implicit, r = t.index, o = zu(3), i = St(2); ot("ngClass", my(3, lk, r === i.currentSlide)), qe(1), ot("ngIf", n.link)("ngIfElse", o) } } function ck(e, t) { if (1 & e) { const n = Os(); J(0, "div", 13), Mt(1, uk, 6, 5, "div", 14), J(2, "div", 15)(3, "button", 16), He("click", function () { return So(n), Io(St().prevSlide()) }), ht(4, "i", 17), oe(), J(5, "button", 18), He("click", function () { return So(n), Io(St().nextSlide()) }), ht(6, "i", 19), oe()()() } if (2 & e) { const n = St(); qe(1), ot("ngForOf", n.slidesList) } } const dk = [{ path: "home", component: (() => { class e { constructor(n) { this.serverService = n, this.promptSection = !0, this.presentationSection = !1, this.slidesList = [], this.currentSlide = 0, this.previousSlide = 0, this.isLoading = !1, this.generateBtn = !0 } prevSlide() { setTimeout(() => { this.previousSlide = this.currentSlide, this.currentSlide = (this.currentSlide - 1 + this.slidesList.length) % this.slidesList.length }, 100) } nextSlide() { setTimeout(() => { this.previousSlide = this.currentSlide, this.currentSlide = (this.currentSlide + 1) % this.slidesList.length }, 100) } generatePrensentation() { if (null == this.promptInput) this.borderRed = "border:2px solid red", console.log("empty"); else { this.borderRed = "border:2px solid black", this.isLoading = !0, this.generateBtn = !1, console.log("hello"); const r = JSON.stringify({ topic: this.promptInput }); this.serverService.presentation(r).pipe(Sn(o => (this.isLoading = !1, this.generateBtn = !0, console.error("An error occurred:", o), alert("Having some error please try again and check your internet connection"), xt))).subscribe(o => { this.isLoading = !1, this.generateBtn = !0, console.log(o), this.slidesList = o, this.presentationSection = !0, this.promptSection = !1 }) } } } return e.\u0275fac = function (n) { return new (n || e)(D(YF)) }, e.\u0275cmp = Co({ type: e, selectors: [["app-home"]], decls: 3, vars: 2, consts: [["class", "main-form", 4, "ngIf"], ["class", "presentaion-view", 4, "ngIf"], [1, "main-form"], [1, "input-form"], ["src", "static/assets/presentation.png", "alt", "", 1, "main-image"], [1, "headings"], ["required", "", "type", "search", "id", "prompt", "placeholder", "Enter any topic for presentation", "name", "prompt", 1, "search-prompt", 3, "ngModel", "ngModelChange"], ["class", "generate", "type", "submit", 3, "click", 4, "ngIf"], ["class", "typing-loader", 4, "ngIf"], [4, "ngIf"], ["type", "submit", 1, "generate", 3, "click"], [1, "typing-loader"], [1, "dot"], [1, "presentaion-view"], ["class", "card slide", "id", "divId", 3, "ngClass", 4, "ngFor", "ngForOf"], [1, "controls"], ["id", "prev-slide", 1, "arrow", "arrow-left", 3, "click"], [1, "fa-solid", "fa-angle-left", "fa-lg"], ["id", "next-slide", 1, "arrow", "arrow-right", 3, "click"], [1, "fa-solid", "fa-angle-right", "fa-lg"], ["id", "divId", 1, "card", "slide", 3, "ngClass"], ["class", "content-section", 4, "ngIf", "ngIfElse"], ["titleBlock", ""], ["tableContentBlock", ""], [1, "content-section"], [1, "text-section"], [1, "image-section"], ["alt", "Card Image", 3, "src"], ["class", "content-else", 4, "ngIf", "ngIfElse"], [1, "content-else"], [1, "table-of-contents"], [4, "ngFor", "ngForOf"], ["href", ""]], template: function (n, r) { 1 & n && (ht(0, "app-nav-bar"), Mt(1, nk, 10, 6, "form", 0), Mt(2, ck, 7, 1, "div", 1)), 2 & n && (qe(1), ot("ngIf", r.promptSection), qe(1), ot("ngIf", r.presentationSection)) }, dependencies: [Hv, zv, Wv, VC, ja, EC, bC, Qa, lf, Ya, X1], styles: [".main-form[_ngcontent-%COMP%]{width:100%;height:calc(100vh - 70px);display:flex;justify-content:center;align-items:center;font-family:Plus Jakarta Sans}.input-form[_ngcontent-%COMP%]{width:500px;display:flex;flex-direction:column;justify-content:center;align-items:center}.headings[_ngcontent-%COMP%]{display:flex;width:500px;align-items:flex-start;text-align:left;margin-bottom:10px}.search-prompt[_ngcontent-%COMP%]{background:transparent;margin:0;font-size:16px;border-radius:20px;border:2px solid #555;width:500px;padding:9px 4px 9px 40px;background:transparent url(static/assets/search.png) no-repeat 13px center;background-size:20px}.search-prompt[_ngcontent-%COMP%]::placeholder{color:#bbb}.search-prompt[_ngcontent-%COMP%]:focus{border-color:#333;outline:none}.input-form[_ngcontent-%COMP%]   .generate[_ngcontent-%COMP%]{padding:10px 40px;color:#fff;background:#1b4b6b;margin:10px 0 0;font-size:16px;border:2px solid #1b4b6b;border-radius:20px;width:500px}.input-form[_ngcontent-%COMP%]   .generate[_ngcontent-%COMP%]:hover{cursor:pointer}.input-form[_ngcontent-%COMP%]   .main-image[_ngcontent-%COMP%]{width:250px;position:relative;bottom:50px}.typing-loader[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:relative;top:10px;height:40px}.dot[_ngcontent-%COMP%]{width:15px;height:15px;border-radius:50%;margin:0 5px;background-color:#1b4b6b;animation:_ngcontent-%COMP%_typing 1s ease-in-out infinite}.dot[_ngcontent-%COMP%]:nth-child(2){animation-delay:.2s}.dot[_ngcontent-%COMP%]:nth-child(3){animation-delay:.4s}@keyframes _ngcontent-%COMP%_typing{0%{transform:translateY(0);opacity:1}50%{transform:translateY(-5px);opacity:.5}to{transform:translateY(0);opacity:1}}@media screen and (max-width:530px){.input-form[_ngcontent-%COMP%]   .generate[_ngcontent-%COMP%], .search-prompt[_ngcontent-%COMP%], .input-form[_ngcontent-%COMP%], .headings[_ngcontent-%COMP%]{width:98%}}.presentaion-view[_ngcontent-%COMP%]{width:100%;height:calc(100vh - 70px);display:flex;justify-content:center;align-items:center;font-family:Plus Jakarta Sans}.list[_ngcontent-%COMP%]{width:15%;padding:20px;background-color:#fff;border-radius:10px;overflow-y:scroll;max-height:70vh}.list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;margin:0}.list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{font-size:16px;margin-bottom:10px;padding:40px 10px;background-color:#fff;border-radius:10px;box-shadow:0 0 10px #0003}.list[_ngcontent-%COMP%]::-webkit-scrollbar{width:.5em}.list[_ngcontent-%COMP%]::-webkit-scrollbar-track{background-color:transparent}.list[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{background-color:#dbdada;border-radius:10px}.list[_ngcontent-%COMP%]{scrollbar-width:thin;scrollbar-color:transparent transparent}.list[_ngcontent-%COMP%]::-moz-scrollbar{width:.5em}.list[_ngcontent-%COMP%]::-moz-scrollbar-track{background-color:transparent}.list[_ngcontent-%COMP%]::-moz-scrollbar-thumb{background-color:#888;border-radius:10px}.card[_ngcontent-%COMP%]{display:flex;background-color:#fff;width:90%;position:relative;height:80vh;border-radius:10px;box-shadow:0 0 10px #0003}.content-section[_ngcontent-%COMP%]{display:flex;flex-direction:row-reverse;width:100%}.text-section[_ngcontent-%COMP%]{flex:1;padding:20px}.text-section[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin:10px 0 20px 20px}.image-section[_ngcontent-%COMP%]{flex:1;display:flex;justify-content:center;align-items:center}.text-section[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;width:350px;line-height:2;text-align:justify;margin-left:30px}.image-section[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;border-radius:0 10px 10px 0}.content-else[_ngcontent-%COMP%]{display:flex;height:100%;width:100%;justify-content:center;align-items:center}.content-else[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:3rem}.table-of-contents[_ngcontent-%COMP%]{width:100%;height:100%;margin-top:30px;margin-left:20px;padding:20px}.table-of-contents[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;margin-bottom:30px}.table-of-contents[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]{list-style:number;padding:0;margin:0}.table-of-contents[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:20px;margin-left:20px}.table-of-contents[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#333;text-decoration:none;transition:color .3s}.table-of-contents[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#007bff}@media screen and (max-width: 768px){.content-section[_ngcontent-%COMP%]{flex-direction:column}.text-section[_ngcontent-%COMP%], .image-section[_ngcontent-%COMP%]{width:100%}.image-section[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:0 0 10px 10px;margin-bottom:20px}.text-section[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{width:86%}.card[_ngcontent-%COMP%]{height:100%}}@media screen and (min-width: 769px){.image-section[_ngcontent-%COMP%]{order:1}.text-section[_ngcontent-%COMP%]{order:2}.image-section[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%}}.controls[_ngcontent-%COMP%]{position:absolute;top:50%;right:0;transform:translateY(-50%);display:flex;justify-content:space-between;width:100%;z-index:1}.arrow[_ngcontent-%COMP%]{background-color:#ffffff80;color:#000;padding:10px;border:none;font-size:24px;cursor:pointer}.left-arrow[_ngcontent-%COMP%]{margin-right:10px}.right-arrow[_ngcontent-%COMP%]{margin-left:10px}.slide[_ngcontent-%COMP%]{display:none}.slide.active[_ngcontent-%COMP%], .slide.previous[_ngcontent-%COMP%]{display:flex}@keyframes _ngcontent-%COMP%_slide-in{0%{transform:translate(-130%)}to{transform:translate(0)}}@keyframes _ngcontent-%COMP%_slide-out{0%{transform:translate(0)}to{transform:translate(-130%)}}"] }), e })() }, { path: "", redirectTo: "/home", pathMatch: "full" }]; let fk = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e }), e.\u0275inj = _t({ imports: [kD.forRoot(dk), kD] }), e })(), hk = (() => { class e { constructor() { this.title = "presentation" } } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275cmp = Co({ type: e, selectors: [["app-root"]], decls: 1, vars: 0, template: function (n, r) { 1 & n && ht(0, "router-outlet") }, dependencies: [Td] }), e })(), pk = (() => { class e { } return e.\u0275fac = function (n) { return new (n || e) }, e.\u0275mod = Rt({ type: e, bootstrap: [hk] }), e.\u0275inj = _t({ imports: [VO, fk, Q1, KF] }), e })(); LO().bootstrapModule(pk).catch(e => console.error(e)) } }, te => { te(te.s = 502) }]);